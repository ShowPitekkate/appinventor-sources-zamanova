# Generated from com.google.appinventor.client.OdeMessages
# for locale default

# Description: Message providing details about starting the wireless connection.
AICompanionMenuItem=AI Companion

# Description: 
AboutScreenProperties=AboutScreen

# Description: 
AboutScreenPropertyDescriptions=Information about the screen. It appears when "About this Application" is selected from the system menu. Use it to inform people about your app. In multiple screen apps, each screen has its own AboutScreen info.

# Description: 
AboveRangeEventEnabledProperties=AboveRangeEventEnabled

# Description: 
AboveRangeEvents=AboveRange

# Description: 
AbsoluteStrengthProperties=AbsoluteStrength

# Description: 
AbsoluteStrengthPropertyDescriptions=Indicates the absolute strength of the field.

# Description: 
AccelerationChangedEventDescriptions=Indicates the acceleration changed in the X, Y, and/or Z dimensions.

# Description: 
AccelerationChangedEvents=AccelerationChanged

# Description: 
AccelerometerSensorHelpStringComponentPallette=Non-visible component that can detect shaking and measure acceleration approximately in three dimensions using SI units (m/s<sup>2</sup>). The components are\: <ul><li> <strong>xAccel</strong>\: 0 when the phone is at rest on a flat surface, positive when the phone is tilted to the right (i.e., its left side is raised), and negative when the phone is tilted to the left (i.e., its right size is raised).</li> <li> <strong>yAccel</strong>\: 0 when the phone is at rest on a flat surface, positive when its bottom is raised, and negative when its top is raised. </li> <li> <strong>zAccel</strong>\: Equal to -9.8 (earth''s gravity in meters per second per second when the device is at rest parallel to the ground with the display facing up, 0 when perpendicular to the ground, and +9.8 when facing down. The value can also be affected by accelerating it with or against gravity. </li></ul>

# Description: 
AccelerometerSensor__AvailablePropertyDescriptions=Returns whether the accelerometer is available on the device.

# Description: 
AccelerometerSensor__EnabledPropertyDescriptions=If true, the sensor will generate events. Otherwise, no events are generated even if the device is accelerated or shaken.

# Description: 
AccelerometerSensor__LegacyModePropertyDescriptions=Prior to the release that added this property the AccelerometerSensor component passed through sensor values directly as received from the Android system. However these values do not compensate for tablets that default to Landscape mode, requiring the MIT App Inventor programmer to compensate. However compensating would result in incorrect results in Portrait mode devices such as phones. We now detect Landscape mode tablets and perform the compensation. However if your project is already compensating for the change, you will now get incorrect results. Although our preferred solution is for you to update your project, you can also just set this property to “true” and our compensation code will be deactivated. Note\: We recommend that you update your project as we may remove this property in a future release.

# Description: 
AccelerometerSensor__MinimumIntervalPropertyDescriptions=The minimum interval, in milliseconds, between phone shakes

# Description: 
AccentColorProperties=AccentColor

# Description: 
AccentColorPropertyDescriptions=This is the accent color used for highlights and other user interface accents.

# Description: 
AcceptConnectionMethodDescriptions=Accept an incoming connection with the Serial Port Profile (SPP).

# Description: 
AcceptConnectionMethods=AcceptConnection

# Description: 
AcceptConnectionWithUUIDMethodDescriptions=Accept an incoming connection with a specific UUID.

# Description: 
AcceptConnectionWithUUIDMethods=AcceptConnectionWithUUID

# Description: 
AccuracyProperties=Accuracy

# Description: 
AccuracyPropertyDescriptions=The most recent measure of accuracy, in meters. If no value is available, 0 will be returned.

# Description: 
ActionBarProperties=ActionBar

# Description: 
ActionBarPropertyDescriptions=Property for ActionBar

# Description: 
ActionProperties=Action

# Description: 
ActionPropertyDescriptions=Returns the action that will be used to start the activity.

# Description: 
ActivityCanceledEventDescriptions=Event raised if this ActivityStarter returns because the activity was canceled.

# Description: 
ActivityCanceledEvents=ActivityCanceled

# Description: 
ActivityClassProperties=ActivityClass

# Description: 
ActivityClassPropertyDescriptions=Returns the class part of the specific component that will be started.

# Description: 
ActivityErrorEventDescriptions=The ActivityError event is no longer used. Please use the Screen.ErrorOccurred event instead.

# Description: 
ActivityPackageProperties=ActivityPackage

# Description: 
ActivityPackagePropertyDescriptions=Returns the package part of the specific component that will be started.

# Description: 
ActivityStarterHelpStringComponentPallette=A component that can launch an activity using the <code>StartActivity</code> method. <p>Activities that can be launched include\:<ul> <li> Starting another App Inventor for Android app. To do so, first find out the <em>class</em> of the other application by downloading the source code and using a file explorer or unzip utility to find a file named "youngandroidproject/project.properties". The first line of the file will start with "main\=" and be followed by the class name; for example, <code>main\=com.gmail.Bitdiddle.Ben.HelloPurr.Screen1</code>. (The first components indicate that it was created by Ben.Bitdiddle

# Description: 
ActivityStarter__ResultPropertyDescriptions=Returns the result from the activity.

# Description: 
AddDaysMethodDescriptions=Returns an instant in time some days after the given instant.

# Description: 
AddDaysMethods=AddDays

# Description: 
AddDurationMethodDescriptions=Returns an instant in time some duration after the argument

# Description: 
AddDurationMethods=AddDuration

# Description: 
AddHoursMethodDescriptions=Returns an instant in time some hours after the given instant.

# Description: 
AddHoursMethods=AddHours

# Description: 
AddMinutesMethodDescriptions=Returns an instant in time some minutes after the given instant.

# Description: 
AddMinutesMethods=AddMinutes

# Description: 
AddMonthsMethodDescriptions=Returns an instant in time some months after the given instant.

# Description: 
AddMonthsMethods=AddMonths

# Description: 
AddSecondsMethodDescriptions=Returns an instant in time some seconds after the given instant.

# Description: 
AddSecondsMethods=AddSeconds

# Description: 
AddWeeksMethodDescriptions=Returns An instant in time some weeks after the given instant.

# Description: 
AddWeeksMethods=AddWeeks

# Description: 
AddYearsMethodDescriptions=Returns an instant in time some years after the given instant.

# Description: 
AddYearsMethods=AddYears

# Description: 
AddressesAndNamesProperties=AddressesAndNames

# Description: 
AddressesAndNamesPropertyDescriptions=The addresses and names of paired Bluetooth devices

# Description: 
AfterActivityEventDescriptions=Event raised after this ActivityStarter returns.

# Description: 
AfterActivityEvents=AfterActivity

# Description: 
AfterChoosingEventDescriptions=Event after the user has made a selection for ShowChooseDialog.

# Description: 
AfterChoosingEvents=AfterChoosing

# Description: 
AfterDateSetEventDescriptions=Event that runs after the user chooses a Date in the dialog

# Description: 
AfterDateSetEvents=AfterDateSet

# Description: 
AfterFileSavedEventDescriptions=Event indicating that the contents of the file have been written.

# Description: 
AfterFileSavedEvents=AfterFileSaved

# Description: 
AfterGettingTextEventDescriptions=Simple event to raise after the SpeechRecognizer has recognized speech. If

# Description: 
AfterGettingTextEvents=AfterGettingText

# Description: 
AfterPickingEvents=AfterPicking

# Description: 
AfterPictureEventDescriptions=Called after the picture is taken. The text argument `image` is the path that can be used to locate the image on the phone.

# Description: 
AfterPictureEvents=AfterPicture

# Description: 
AfterRecordingEventDescriptions=Indicates that a video was recorded with the camera and provides the path to the stored video.

# Description: 
AfterRecordingEvents=AfterRecording

# Description: 
AfterScanEventDescriptions=Indicates that the scanner has read a (text) result and provides the result

# Description: 
AfterScanEvents=AfterScan

# Description: 
AfterSelectingEventDescriptions=Event called after the user selects an item from the dropdown list.

# Description: 
AfterSelectingEvents=AfterSelecting

# Description: 
AfterSoundRecordedEventDescriptions=Provides the location of the newly created sound.

# Description: 
AfterSoundRecordedEvents=AfterSoundRecorded

# Description: 
AfterSpeakingEventDescriptions=Event to raise after the message is spoken. The result will be true if the message is spoken successfully, otherwise it will be false.

# Description: 
AfterSpeakingEvents=AfterSpeaking

# Description: 
AfterTextInputEventDescriptions=Event raised after the user has responded to ShowTextDialog.

# Description: 
AfterTextInputEvents=AfterTextInput

# Description: 
AfterTimeSetEventDescriptions=This event is run when a user has set the time in the popup dialog.

# Description: 
AfterTimeSetEvents=AfterTimeSet

# Description: 
AirPressureChangedEventDescriptions=Called when a change is detected in the air pressure (provided in hPa).

# Description: 
AirPressureChangedEvents=AirPressureChanged

# Description: 
AirPressureProperties=AirPressure

# Description: 
AirPressurePropertyDescriptions=The air pressure in hPa (millibar), if the sensor is available and enabled.

# Description: 
AlignHorizontalProperties=AlignHorizontal

# Description: 
AlignVerticalProperties=AlignVertical

# Description: 
AllowCookiesProperties=AllowCookies

# Description: 
AllowCookiesPropertyDescriptions=Whether the cookies from a response should be saved and used in subsequent requests. Cookies are only supported on Android version 2.3 or greater.

# Description: 
AlternateTextProperties=AlternateText

# Description: 
AlternateTextPropertyDescriptions=A written description of what the image looks like.

# Description: 
AltitudeProperties=Altitude

# Description: 
AltitudePropertyDescriptions=The most recently available altitude value, in meters. If no value is available, 0 will be returned.

# Description: 
AnchorHorizontalProperties=AnchorHorizontal

# Description: 
AnchorHorizontalPropertyDescriptions=The horizontal alignment property controls where the Marker''s anchor is located relative to its width. The choices are\: 1 \= left aligned, 3 \= horizontally centered, 2 \= right aligned.

# Description: 
AnchorVerticalProperties=AnchorVertical

# Description: 
AnchorVerticalPropertyDescriptions=The vertical alignment property controls where the Marker''s anchor is located relative to its height. The choices are\: 1 \= aligned at the top, 2 \= vertically centered, 3 \= aligned at the bottom.

# Description: 
AngleProperties=Angle

# Description: 
AnglePropertyDescriptions=Returns an angle that tells the direction in which the device is tiled. That is, it tells the direction of the force that would be felt by a ball rolling on the surface of the device.

# Description: 
AnimationProperties=Animation

# Description: 
AnimationPropertyDescriptions=This is a limited form of animation that can attach a small number of motion types to images. The allowable motions are ScrollRightSlow, ScrollRight, ScrollRightFast, ScrollLeftSlow, ScrollLeft, ScrollLeftFast, and Stop

# Description: 
ApiKeyProperties=ApiKey

# Description: 
AppNameProperties=AppName

# Description: 
AppNamePropertyDescriptions=This is the display name of the installed application in the phone.If the AppName is blank, it will be set to the name of the project when the project is built.

# Description: 
AppearancePropertyCategory=Appearance

# Description: 
AppendToFileMethodDescriptions=Appends text to the end of a file storage, creating the file if it does not exist. See the help text under SaveFile for information about where files are written.

# Description: 
AppendToFileMethods=AppendToFile

# Description: 
AppendValueMethodDescriptions=Append a value to the end of a list atomically. If two devices use this function simultaneously, both will be appended and no data lost.

# Description: 
AppendValueMethods=AppendValue

# Description: 
AppendValueToListMethodDescriptions=Append a value to the end of a list atomically. If two devices use this function simultaneously, both will be appended and no data lost.

# Description: 
AppendValueToListMethods=AppendValueToList

# Description: 
AskForPermissionMethodDescriptions=Ask the user to grant access to a dangerous permission.

# Description: 
AskForPermissionMethods=AskForPermission

# Description: 
AuthorizeMethodDescriptions=Redirects user to login to Twitter via the Web browser using the OAuth protocol if we don''t already have authorization.

# Description: 
AuthorizeMethods=Authorize

# Description: 
AvailableCountriesProperties=AvailableCountries

# Description: 
AvailableCountriesPropertyDescriptions=List of the country codes available on this device for use with TextToSpeech. Check the Android developer documentation under supported languages to find the meanings of these abbreviations.

# Description: 
AvailableLanguagesProperties=AvailableLanguages

# Description: 
AvailableLanguagesPropertyDescriptions=List of the languages available on this device for use with TextToSpeech. Check the Android developer documentation under supported languages to find the meanings of these abbreviations.

# Description: 
AvailableProperties=Available

# Description: 
AvailableProvidersProperties=AvailableProviders

# Description: 
AvailableProvidersPropertyDescriptions=List of available service providers, such as gps or network. This information is provided as a list and in text form.

# Description: 
AverageLuxProperties=AverageLux

# Description: 
AverageLuxPropertyDescriptions=The average of the 10 most recent light levels measured, in lux.

# Description: 
AzimuthProperties=Azimuth

# Description: 
AzimuthPropertyDescriptions=Returns the azimuth angle of the device. To return meaningful values the sensor must be enabled.

# Description: 
BackPressedEventDescriptions=Device back button pressed.

# Description: 
BackPressedEvents=BackPressed

# Description: 
BackgroundColorProperties=BackgroundColor

# Description: 
BackgroundImageProperties=BackgroundImage

# Description: 
BackgroundImageinBase64Properties=BackgroundImageinBase64

# Description: 
BackgroundImageinBase64PropertyDescriptions=Set the background image in Base64 format. This requires API level >\= 8. For devices with API level less than 8, setting this will end up with an empty background.

# Description: 
BallHelpStringComponentPallette=<p>A round ''sprite'' that can be placed on a <code>Canvas</code>, where it can react to touches and drags, interact with other sprites (<code>ImageSprite</code>s and other <code>Ball</code>s) and the edge of the Canvas, and move according to its property values.</p><p>For example, to have a <code>Ball</code> move 4 pixels toward the top of a <code>Canvas</code> every 500 milliseconds (half second), you would set the <code>Speed</code> property to 4 [pixels], the <code>Interval</code> property to 500 [milliseconds], the <code>Heading</code> property to 90 [degrees], and the <code>Enabled</code> property to <code>True</code>.</p><p>The difference between a <code>Ball</code> and an <code>ImageSprite</code> is that the latter can get its appearance from an image file, while a <code>Ball</code>''s appearance can be changed only by varying its <code>PaintColor</code> and <code>Radius</code> properties.</p>

# Description: 
Ball__BounceMethodDescriptions=Makes the Ball bounce, as if off a wall. For normal bouncing, the edge argument should be the one returned by EdgeReached.

# Description: 
Ball__CollidingWithMethodDescriptions=Indicates whether a collision has been registered between this Ball and the passed sprite (Ball or ImageSprite).

# Description: 
Ball__DraggedEventDescriptions=Event handler called when a Ball is dragged. On all calls, the starting coordinates are where the screen was first touched, and the "current" coordinates describe the endpoint of the current line segment. On the first call within a given drag, the "previous" coordinates are the same as the starting coordinates; subsequently, they are the "current" coordinates from the prior call. Note that the Ball won''t actually move anywhere in response to the Dragged event unless MoveTo is explicitly called. For smooth movement, each of its coordinates should be set to the sum of its initial value and the difference between its current and previous values.

# Description: 
Ball__EdgeReachedEventDescriptions=Event handler called when the Ball reaches an edge of the screen. If Bounce is then called with that edge, the Ball will appear to bounce off of the edge it reached. Edge here is represented as an integer that indicates one of eight directions north (1), northeast (2), east (3), southeast (4), south (-1), southwest (-2), west (-3), and northwest (-4).

# Description: 
Ball__EnabledPropertyDescriptions=Controls whether the Ball moves and can be interacted with through collisions, dragging, touching, and flinging.

# Description: 
Ball__FlungEventDescriptions=Event handler called when a fling gesture (quick swipe) is made on an enabled Ball. This provides the x and y coordinates of the start of the fling (relative to the upper left of the canvas), the speed (pixels per millisecond), the heading (0-360 degrees), and the x and y velocity components of the fling''s vector.

# Description: 
Ball__HeadingPropertyDescriptions=Returns the Ball''s heading in degrees above the positive x-axis. Zero degrees is toward the right of the screen; 90 degrees is toward the top of the screen.

# Description: 
Ball__IntervalPropertyDescriptions=The interval in milliseconds at which the Ball''s position is updated. For example, if the interval is 50 and the speed is 10, then every 50 milliseconds the sprite will move 10 pixels in the heading direction.

# Description: 
Ball__MoveIntoBoundsMethodDescriptions=Moves the Ball back in bounds if part of it extends out of bounds, having no effect otherwise. If the Ball is too wide to fit on the canvas, this aligns the left side of the Ball with the left side of the canvas. If the Ball is too tall to fit on the canvas, this aligns the top side of the Ball with the top side of the canvas.

# Description: 
Ball__MoveToMethodDescriptions=Sets the x and y coordinates of the Ball. If CenterAtOrigin is true, the center of the Ball will be placed here. Otherwise, the top left edge of the Ball will be placed at the specified coordinates.

# Description: 
Ball__MoveToPointMethodDescriptions=Moves the origin of Ball to the position of the cooordinates given by the list formatted as [x-coordinate, y-coordinate].

# Description: 
Ball__PaintColorPropertyDescriptions=The color of the Ball.

# Description: 
Ball__PointInDirectionMethodDescriptions=Sets the heading of the Ball toward the point with the coordinates (x, y).

# Description: 
Ball__PointTowardsMethodDescriptions=Turns the Ball to point towards a designated target sprite (Ball or ImageSprite). The new heading will be parallel to the line joining the centerpoints of the two sprites.

# Description: 
Ball__RadiusPropertyDescriptions=The distance from the edge of the Ball to its center.

# Description: 
Ball__SpeedPropertyDescriptions=The number of pixels that the Ball should move every interval, if enabled.

# Description: 
Ball__TouchDownEventDescriptions=Event handler called when the user begins touching an enabled Ball (placing their finger on a Ball and leaving it there). This provides the x and y coordinates of the touch, relative to the upper left of the canvas.

# Description: 
Ball__TouchUpEventDescriptions=Event handler called when the user stops touching an enabled Ball (lifting their finger after a TouchDown event). This provides the x and y coordinates of the touch, relative to the upper left of the canvas.

# Description: 
Ball__TouchedEventDescriptions=Event handler called when the user touches an enabled Ball and then immediately lifts their finger. The provided x and y coordinates are relative to the upper left of the canvas.

# Description: 
Ball__VisiblePropertyDescriptions=Whether the Ball is visible.

# Description: 
Ball__XPropertyDescriptions=The horizontal coordinate of the Ball, increasing as the Ball moves right. If the property OriginAtCenter is true, the coordinate is for the center of the Ball; otherwise, it is for the leftmost point of the Ball.

# Description: 
Ball__YPropertyDescriptions=The vertical coordinate of the Ball, increasing as the Ball moves down. If the property OriginAtCenter is true, the coordinate is for the center of the Ball; otherwise, it is for the uppermost point of the Ball.

# Description: 
Ball__ZPropertyDescriptions=How the `Ball` should be layered relative to other

# Description: 
BallotOptionsProperties=BallotOptions

# Description: 
BallotOptionsPropertyDescriptions=The list of ballot options.

# Description: 
BallotQuestionProperties=BallotQuestion

# Description: 
BallotQuestionPropertyDescriptions=The question to be voted on.

# Description: 
BarcodeScannerHelpStringComponentPallette=Component for using the Barcode Scanner to read a barcode

# Description: 
BarcodeScanner__ResultPropertyDescriptions=Text result of the previous scan.

# Description: 
BarometerHelpStringComponentPallette=A sensor component that can measure the ambient air pressure.

# Description: 
Barometer__AvailablePropertyDescriptions=Specifies whether or not the device has the hardware to support the Barometer component.

# Description: 
Barometer__EnabledPropertyDescriptions=If enabled, then device will listen for changes.

# Description: 
BaudRateProperties=BaudRate

# Description: 
BaudRatePropertyDescriptions=Returns the current baud rate

# Description: 
BearingToFeatureMethodDescriptions=Returns the bearing from the Marker to the given map feature, in degrees from due north. If the centroids parameter is true, the bearing will be to the center of the map feature. Otherwise, the bearing will be computed to the point in the feature nearest the Marker.

# Description: 
BearingToFeatureMethods=BearingToFeature

# Description: 
BearingToPointMethodDescriptions=Returns the bearing from the Marker to the given latitude and longitude, in degrees from due north.

# Description: 
BearingToPointMethods=BearingToPoint

# Description: 
BeforeGettingTextEventDescriptions=Simple event to raise when the `SpeechRecognizer` is invoked but before its activity is started.

# Description: 
BeforeGettingTextEvents=BeforeGettingText

# Description: 
BeforePageLoadEventDescriptions=When a page is about to load this event is run.

# Description: 
BeforePageLoadEvents=BeforePageLoad

# Description: 
BeforePickingEvents=BeforePicking

# Description: 
BeforeSpeakingEventDescriptions=Event to raise when Speak is invoked, before the message is spoken.

# Description: 
BeforeSpeakingEvents=BeforeSpeaking

# Description: 
BehaviorPropertyCategory=Behavior

# Description: 
BelowRangeEventEnabledProperties=BelowRangeEventEnabled

# Description: 
BelowRangeEvents=BelowRange

# Description: 
BigDefaultTextProperties=BigDefaultText

# Description: 
BigDefaultTextPropertyDescriptions=When checked, we will use high contrast mode

# Description: 
BlocksToolkitProperties=BlocksToolkit

# Description: 
BlocksToolkitPropertyDescriptions=A JSON string representing the subset for the screen. Authors of template apps can use this to control what components, designer properties, and blocks are available in the project.

# Description: 
BluetoothClientHelpStringComponentPallette=Bluetooth client component

# Description: 
BluetoothClientProperties=BluetoothClient

# Description: 
BluetoothClientPropertyDescriptions=The BluetoothClient component that should be used for communication.

# Description: 
BluetoothClient__AvailablePropertyDescriptions=Whether Bluetooth is available on the device

# Description: 
BluetoothClient__EnabledPropertyDescriptions=Whether Bluetooth is enabled

# Description: 
BluetoothErrorEventDescriptions=The BluetoothError event is no longer used. Please use the Screen.ErrorOccurred event instead.

# Description: 
BluetoothServerHelpStringComponentPallette=Bluetooth server component

# Description: 
BluetoothServer__AvailablePropertyDescriptions=Whether Bluetooth is available on the device

# Description: 
BluetoothServer__EnabledPropertyDescriptions=Whether Bluetooth is enabled

# Description: 
BottomOfRangeProperties=BottomOfRange

# Description: 
BottomOfRangePropertyDescriptions=The bottom of the range used for the BelowRange, WithinRange, and AboveRange events.

# Description: 
BounceMethods=Bounce

# Description: 
BoundingBoxProperties=BoundingBox

# Description: 
BoundingBoxPropertyDescriptions=Bounding box for the map stored as [[North, West], [South, East]].

# Description: 
BoundsChangeEventDescriptions=User has changed the map bounds by panning or zooming the map.

# Description: 
BoundsChangeEvents=BoundsChange

# Description: 
BoundsMethodDescriptions=Returns the bounding box of the Rectangle in the format ((North West) (South East)).

# Description: 
BoundsMethods=Bounds

# Description: 
BufferSizeProperties=BufferSize

# Description: 
BufferSizePropertyDescriptions=Returns the buffer size in bytes

# Description: 
BuildPostDataMethods=BuildPostData

# Description: 
BuildRequestDataMethodDescriptions=Converts a list of two-element sublists, representing name and value pairs, to a string formatted as application/x-www-form-urlencoded media type, suitable to pass to PostText.

# Description: 
BuildRequestDataMethods=BuildRequestData

# Description: 
ButtonHelpStringComponentPallette=Button with the ability to detect clicks. Many aspects of its appearance can be changed, as well as whether it is clickable (<code>Enabled</code>), can be changed in the Designer or in the Blocks Editor.

# Description: 
Button__BackgroundColorPropertyDescriptions=Returns the button''s background color

# Description: 
Button__ClickEventDescriptions=User tapped and released the button.

# Description: 
Button__EnabledPropertyDescriptions=If set, user can tap Button to cause action.

# Description: 
Button__FontBoldPropertyDescriptions=If set, Button text is displayed in bold.

# Description: 
Button__FontItalicPropertyDescriptions=If set, Button text is displayed in italics.

# Description: 
Button__FontSizePropertyDescriptions=Point size for Button text.

# Description: 
Button__FontTypefacePropertyDescriptions=Font family for Button text.

# Description: 
Button__GotFocusEventDescriptions=Indicates the cursor moved over the Button so it is now possible to click it.

# Description: 
Button__HeightPercentPropertyDescriptions=Specifies the vertical height of the Button as a percentage of the height of the Screen.

# Description: 
Button__HeightPropertyDescriptions=Specifies the vertical height of the Button, measured in pixels.

# Description: 
Button__ImagePropertyDescriptions=Image to display on button.

# Description: 
Button__LongClickEventDescriptions=User held the button down.

# Description: 
Button__LostFocusEventDescriptions=Indicates the cursor moved away from the Button so it is now no longer possible to click it.

# Description: 
Button__ShapePropertyDescriptions=Returns the style of the `Button`.

# Description: 
Button__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a Button that has an image as background.

# Description: 
Button__TextAlignmentPropertyDescriptions=Left, center, or right.

# Description: 
Button__TextColorPropertyDescriptions=Color for button text.

# Description: 
Button__TextPropertyDescriptions=Text to display on Button.

# Description: 
Button__TouchDownEventDescriptions=Indicates that the Button was pressed down.

# Description: 
Button__TouchUpEventDescriptions=Indicates that the Button has been released.

# Description: 
Button__VisiblePropertyDescriptions=Specifies whether the Button should be visible on the screen. Value is true if the Button is showing and false if hidden.

# Description: 
Button__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Button as a percentage of the width of the Screen.

# Description: 
Button__WidthPropertyDescriptions=Specifies the horizontal width of the Button, measured in pixels.

# Description: 
BytesAvailableToReceiveMethodDescriptions=Returns an estimate of the number of bytes that can be received without blocking

# Description: 
BytesAvailableToReceiveMethods=BytesAvailableToReceive

# Description: 
CalibrateStrideLengthProperties=CalibrateStrideLength

# Description: 
CalibrateStrideLengthPropertyDescriptions=This property has been deprecated.

# Description: 
CalibrationFailedEventDescriptions=This event has been deprecated.

# Description: 
CalibrationFailedEvents=CalibrationFailed

# Description: 
CamcorderHelpStringComponentPallette=A component to record a video using the device''s camcorder.After the video is recorded, the name of the file on the phone containing the clip is available as an argument to the AfterRecording event. The file name can be used, for example, to set the source property of a VideoPlayer component.

# Description: 
CameraHelpStringComponentPallette=A component to take a picture using the device''s camera. After the picture is taken, the name of the file on the phone containing the picture is available as an argument to the AfterPicture event. The file name can be used, for example, to set the Picture property of an Image component.

# Description: 
CanGoBackMethodDescriptions=Returns true if the WebViewer can go back in the history list.

# Description: 
CanGoBackMethods=CanGoBack

# Description: 
CanGoForwardMethodDescriptions=Returns true if the WebViewer can go forward in the history list.

# Description: 
CanGoForwardMethods=CanGoForward

# Description: 
CanvasHelpStringComponentPallette=<p>A two-dimensional touch-sensitive rectangular panel on which drawing can be done and sprites can be moved.</p> <p>The <code>BackgroundColor</code>, <code>PaintColor</code>, <code>BackgroundImage</code>, <code>Width</code>, and <code>Height</code> of the Canvas can be set in either the Designer or in the Blocks Editor. The <code>Width</code> and <code>Height</code> are measured in pixels and must be positive.</p><p>Any location on the Canvas can be specified as a pair of (X, Y) values, where <ul> <li>X is the number of pixels away from the left edge of the Canvas</li><li>Y is the number of pixels away from the top edge of the Canvas</li></ul>.</p> <p>There are events to tell when and where a Canvas has been touched or a <code>Sprite</code> (<code>ImageSprite</code> or <code>Ball</code>) has been dragged. There are also methods for drawing points, lines, and circles.</p>

# Description: 
Canvas__BackgroundColorPropertyDescriptions=The color of the canvas background.

# Description: 
Canvas__BackgroundImagePropertyDescriptions=The name of a file containing the background image for the canvas

# Description: 
Canvas__DraggedEventDescriptions=When the user does a drag from one point (prevX, prevY) to another (x, y). The pair (startX, startY) indicates where the user first touched the screen, and "draggedAnySprite" indicates whether a sprite is being dragged.

# Description: 
Canvas__DrawCircleMethodDescriptions=Draws a circle (filled in) with the given radius centered at the given coordinates on the Canvas.

# Description: 
Canvas__DrawLineMethodDescriptions=Draws a line between the given coordinates on the canvas.

# Description: 
Canvas__DrawPointMethodDescriptions=Draws a point at the given coordinates on the canvas.

# Description: 
Canvas__FlungEventDescriptions=When a fling gesture (quick swipe) is made on the canvas\: provides the (x,y) position of the start of the fling, relative to the upper left of the canvas. Also provides the speed (pixels per millisecond) and heading (0-360 degrees) of the fling, as well as the x velocity and y velocity components of the fling''s vector. The value "flungSprite" is true if a sprite was located near the the starting point of the fling gesture.

# Description: 
Canvas__FontSizePropertyDescriptions=The font size of text drawn on the canvas.

# Description: 
Canvas__HeightPercentPropertyDescriptions=Specifies the vertical height of the Canvas as a percentage of the height of the Screen.

# Description: 
Canvas__HeightPropertyDescriptions=Specifies the `Canvas`''s vertical height, measured in pixels.

# Description: 
Canvas__PaintColorPropertyDescriptions=The color in which lines are drawn

# Description: 
Canvas__SaveMethodDescriptions=Saves a picture of this Canvas to the device''s external storage. If an error occurs, the Screen''s ErrorOccurred event will be called.

# Description: 
Canvas__TextAlignmentPropertyDescriptions=Determines the alignment of the text drawn by DrawText() or DrawAngle() with respect to the point specified by that command\: point at the left of the text, point at the center of the text, or point at the right of the text.

# Description: 
Canvas__TouchDownEventDescriptions=When the user begins touching the canvas (places finger on canvas and leaves it there)\: provides the (x,y) position of the touch, relative to the upper left of the canvas

# Description: 
Canvas__TouchUpEventDescriptions=When the user stops touching the canvas (lifts finger after a TouchDown event)\: provides the (x,y) position of the touch, relative to the upper left of the canvas

# Description: 
Canvas__TouchedEventDescriptions=When the user touches the canvas and then immediately lifts finger\: provides the (x,y) position of the touch, relative to the upper left of the canvas. TouchedAnySprite is true if the same touch also touched a sprite, and false otherwise.

# Description: 
Canvas__VisiblePropertyDescriptions=Specifies whether the Canvas should be visible on the screen. Value is true if the Canvas is showing and false if hidden.

# Description: 
Canvas__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Canvas as a percentage of the width of the Screen.

# Description: 
Canvas__WidthPropertyDescriptions=Specifies the horizontal width of the `Canvas`, measured in pixels.

# Description: 
CenterFromStringProperties=CenterFromString

# Description: 
CenterFromStringPropertyDescriptions=<p>Set the initial center coordinate of the map. The value is specified as a comma-separated pair of decimal latitude and longitude coordinates, for example, <code>42.359144, -71.093612</code>.</p><p>In blocks code, it is recommended for performance reasons to use SetCenter with numerical latitude and longitude rather than convert to the string representation for use with this property.</p>

# Description: 
CenterMethodDescriptions=Returns the center of the Rectangle as a list of the form (Latitude Longitude).

# Description: 
CenterMethods=Center

# Description: 
CentroidMethodDescriptions=Returns the centroid of the Polygon as a (latitude, longitude) pair.

# Description: 
CentroidMethods=Centroid

# Description: 
ChangedEvents=Changed

# Description: 
CharacterEncodingProperties=CharacterEncoding

# Description: 
CharacterEncodingPropertyDescriptions=Sets the character encoding to use when sending and receiving text. The default value is `"UTF-8"

# Description: 
CheckAuthorizedMethodDescriptions=Checks whether we already have access, and if so, causes IsAuthorized event handler to be called.

# Description: 
CheckAuthorizedMethods=CheckAuthorized

# Description: 
CheckBoxHelpStringComponentPallette=Checkbox that raises an event when the user clicks on it. There are many properties affecting its appearance that can be set in the Designer or Blocks Editor.

# Description: 
CheckBox__BackgroundColorPropertyDescriptions=The background color of the CheckBox as an alpha-red-green-blue integer.

# Description: 
CheckBox__ChangedEventDescriptions=User tapped and released the CheckBox.

# Description: 
CheckBox__EnabledPropertyDescriptions=True if the CheckBox is active and clickable.

# Description: 
CheckBox__FontBoldPropertyDescriptions=Set to true if the text of the CheckBox should be bold.

# Description: 
CheckBox__FontItalicPropertyDescriptions=Set to true if the text of the CheckBox should be italic.

# Description: 
CheckBox__FontSizePropertyDescriptions=Specifies the text font size of the CheckBox in scale-independent pixels.

# Description: 
CheckBox__FontTypefacePropertyDescriptions=Specifies the text font face of the CheckBox.

# Description: 
CheckBox__GotFocusEventDescriptions=CheckBox became the focused component.

# Description: 
CheckBox__HeightPercentPropertyDescriptions=Specifies the vertical height of the CheckBox as a percentage of the height of the Screen.

# Description: 
CheckBox__HeightPropertyDescriptions=Specifies the vertical height of the CheckBox, measured in pixels.

# Description: 
CheckBox__LostFocusEventDescriptions=CheckBox stopped being the focused component.

# Description: 
CheckBox__TextColorPropertyDescriptions=Specifies the text color of the CheckBox as an alpha-red-green-blue integer.

# Description: 
CheckBox__TextPropertyDescriptions=Specifies the text displayed by the CheckBox.

# Description: 
CheckBox__VisiblePropertyDescriptions=Specifies whether the CheckBox should be visible on the screen. Value is true if the CheckBox is showing and false if hidden.

# Description: 
CheckBox__WidthPercentPropertyDescriptions=Specifies the horizontal width of the CheckBox as a percentage of the width of the Screen.

# Description: 
CheckBox__WidthPropertyDescriptions=Specifies the horizontal width of the CheckBox, measured in pixels.

# Description: 
CheckedProperties=Checked

# Description: 
CheckedPropertyDescriptions=True if the box is checked, false otherwise.

# Description: 
ChoosingCanceledEventDescriptions=Event raised when the user canceled ShowChooseDialog.

# Description: 
ChoosingCanceledEvents=ChoosingCanceled

# Description: 
CircleHelpStringComponentPallette=Circle

# Description: 
Circle__ClickEventDescriptions=The user clicked on the Circle.

# Description: 
Circle__DescriptionPropertyDescriptions=The description displayed in the info window that appears when the user clicks on the Circle.

# Description: 
Circle__DistanceToPointMethodDescriptions=Compute the distance, in meters, between a Circle and a latitude, longitude point.

# Description: 
Circle__DragEventDescriptions=The user dragged the Circle.

# Description: 
Circle__DraggablePropertyDescriptions=The Draggable property is used to set whether or not the user can drag the Circle by long-pressing and then dragging the Circle to a new location.

# Description: 
Circle__EnableInfoboxPropertyDescriptions=Enable or disable the infobox window display when the user taps the Circle.

# Description: 
Circle__FillColorPropertyDescriptions=The paint color used to fill in the Circle.

# Description: 
Circle__LatitudePropertyDescriptions=The latitude of the center of the circle.

# Description: 
Circle__LongClickEventDescriptions=The user long-pressed on the Circle. This event will only trigger if Draggable is false.

# Description: 
Circle__LongitudePropertyDescriptions=The longitude of the center of the circle.

# Description: 
Circle__RadiusPropertyDescriptions=The radius of the circle in meters.

# Description: 
Circle__SetLocationMethodDescriptions=Set the center of the Circle.

# Description: 
Circle__ShowInfoboxMethodDescriptions=Show the infobox for the Circle. This will show the infobox even if EnableInfobox is set to false.

# Description: 
Circle__StrokeColorPropertyDescriptions=The paint color used to outline the Circle.

# Description: 
Circle__StrokeWidthPropertyDescriptions=The width of the stroke used to outline the Circle.

# Description: 
Circle__TitlePropertyDescriptions=The title displayed in the info window that appears when the user clicks on the Circle.

# Description: 
Circle__TypePropertyDescriptions=Returns the type of the feature. For Circles, this returns MapFeature.Circle ("Circle").

# Description: 
Circle__VisiblePropertyDescriptions=Specifies whether the Circle should be visible on the screen. Value is true if the component is showing and false if hidden.

# Description: 
ClearAllMethodDescriptions=Clear the entire data store.

# Description: 
ClearAllMethods=ClearAll

# Description: 
ClearCachesMethodDescriptions=Clear WebView caches.

# Description: 
ClearCachesMethods=ClearCaches

# Description: 
ClearCookiesMethods=ClearCookies

# Description: 
ClearLocationsMethodDescriptions=Clear stored location permissions.

# Description: 
ClearLocationsMethods=ClearLocations

# Description: 
ClearMethodDescriptions=Clears anything drawn on this Canvas but not any background color or image.

# Description: 
ClearMethods=Clear

# Description: 
ClearTagMethods=ClearTag

# Description: 
ClickEvents=Click

# Description: 
ClickableProperties=Clickable

# Description: 
ClickablePropertyDescriptions=Specifies whether the image should be clickable or not.

# Description: 
ClockHelpStringComponentPallette=<p>Non-visible component that provides the instant in time using the internal clock on the phone. It can fire a timer at regularly set intervals and perform time calculations, manipulations, and conversions.</p> <p>Methods to convert an instant to text are also available. Acceptable patterns are empty string, MM/DD/YYYY HH\:mm\:ss a, or MMM d, yyyyHH\:mm. The empty string will provide the default format, which is "MMM d, yyyy HH\:mm\:ss a" for FormatDateTime "MMM d, yyyy" for FormatDate. To see all possible format, please see <a href\="https\://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html" _target\="_blank">here</a>. </p>

# Description: 
CloseScreenAnimationMethods=CloseScreenAnimation

# Description: 
CloseScreenAnimationProperties=CloseScreenAnimation

# Description: 
CloseScreenAnimationPropertyDescriptions=The animation for closing current screen and returning to the previous screen. Valid options are default, fade, zoom, slidehorizontal, slidevertical, and none

# Description: 
CloseSerialMethodDescriptions=Closes serial connection. Returns true when closed.

# Description: 
CloseSerialMethods=CloseSerial

# Description: 
CloudConnectedMethodDescriptions=returns True if we are on the network and will likely be able to connect to the CloudDB server.

# Description: 
CloudConnectedMethods=CloudConnected

# Description: 
CloudDBErrorEventDescriptions=Indicates that an error occurred while communicating with the CloudDB Redis server.

# Description: 
CloudDBErrorEvents=CloudDBError

# Description: 
CloudDBHelpStringComponentPallette=Non-visible component allowing you to store data on a Internet connected database server (using Redis software). This allows the users of your App to share data with each other. By default data will be stored in a server maintained by MIT, however you can setup and run your own server. Set the "RedisServer" property and "RedisPort" Property to access your own server.

# Description: 
CloudDB__ClearTagMethodDescriptions=Remove the tag from CloudDB.

# Description: 
CloudDB__DataChangedEventDescriptions=Indicates that the data in the CloudDB project has changed. Launches an event with the `tag`

# Description: 
CloudDB__FirstRemovedEventDescriptions=Event triggered by the "RemoveFirstFromList" function. The argument "value" is the object that was the first in the list, and which is now removed.

# Description: 
CloudDB__GetValueMethodDescriptions=Get the Value for a tag, doesn''t return the value but will cause a GotValue event to fire when the value is looked up.

# Description: 
CloudDB__GotValueEventDescriptions=Indicates that a

# Description: 
CloudDB__StoreValueMethodDescriptions=Store a value at a tag.

# Description: 
CollidedWithEventDescriptions=Event handler called when two enabled sprites (

# Description: 
CollidedWithEvents=CollidedWith

# Description: 
CollidingWithMethods=CollidingWith

# Description: 
ColorChangedEventEnabledProperties=ColorChangedEventEnabled

# Description: 
ColorChangedEvents=ColorChanged

# Description: 
ColorLeftProperties=ColorLeft

# Description: 
ColorLeftPropertyDescriptions=The color of slider to the left of the thumb.

# Description: 
ColorRightProperties=ColorRight

# Description: 
ColorRightPropertyDescriptions=The color of slider to the right of the thumb.

# Description: 
ColumnPropertyDescriptions=Column property getter method.

# Description: 
ColumnsProperties=Columns

# Description: 
ColumnsPropertyDescriptions=Columns property getter method.

# Description: 
CompletedEvents=Completed

# Description: 
ConnectMethodDescriptions=Connect to the Bluetooth device with the specified address and the Serial Port Profile (SPP). Returns true if the connection was successful.

# Description: 
ConnectMethods=Connect

# Description: 
ConnectWithUUIDMethodDescriptions=Connect to the Bluetooth device with the specified address and UUID. Returns true if the connection was successful.

# Description: 
ConnectWithUUIDMethods=ConnectWithUUID

# Description: 
ConnectionAcceptedEventDescriptions=Indicates that a bluetooth connection has been accepted.

# Description: 
ConnectionAcceptedEvents=ConnectionAccepted

# Description: 
ConsumerKeyProperties=ConsumerKey

# Description: 
ConsumerKeyPropertyDescriptions=ConsumerKey property getter method.

# Description: 
ConsumerSecretProperties=ConsumerSecret

# Description: 
ConsumerSecretPropertyDescriptions=ConsumerSecret property getter method.

# Description: 
ContactNameProperties=ContactName

# Description: 
ContactNamePropertyDescriptions=Returns the full name of the selected contact, or the empty string if a name is unavailable.

# Description: 
ContactPickerHelpStringComponentPallette=A button that, when clicked on, displays a list of the contacts to choose among. After the user has made a selection, the following properties will be set to information about the chosen contact\: <ul><li> <code>ContactName</code>\: the contact''s name </li> <li> <code>EmailAddress</code>\: the contact''s primary email address </li> <li> <code>ContactUri</code>\: the contact''s URI on the device </li><li> <code>EmailAddressList</code>\: a list of the contact''s email addresses </li> <li> <code>PhoneNumber</code>\: the contact''s primary phone number (on Later Android Verisons)</li> <li> <code>PhoneNumberList</code>\: a list of the contact''s phone numbers (on Later Android Versions)</li> <li> <code>Picture</code>\: the name of the file containing the contact''s image, which can be used as a <code>Picture</code> property value for the <code>Image</code> or <code>ImageSprite</code> component.</li></ul></p><p>Other properties affect the appearance of the button (<code>TextAlignment</code>, <code>BackgroundColor</code>, etc.) and whether it can be clicked on (<code>Enabled</code>).</p><p>The ContactPicker component might not work on all phones. For example, on Android systems before system 3.0, it cannot pick phone numbers, and the list of email addresses will contain only one email.

# Description: 
ContactPicker__AfterPickingEventDescriptions=Event to be raised after the `ContactPicker` activity returns its result and the properties have been filled in.

# Description: 
ContactPicker__BackgroundColorPropertyDescriptions=Returns the button''s background color

# Description: 
ContactPicker__BeforePickingEventDescriptions=Event to raise when the `ContactPicker` is clicked or the picker is shown using the

# Description: 
ContactPicker__EnabledPropertyDescriptions=If set, user can tap ContactPicker to cause action.

# Description: 
ContactPicker__FontBoldPropertyDescriptions=If set, ContactPicker text is displayed in bold.

# Description: 
ContactPicker__FontItalicPropertyDescriptions=If set, ContactPicker text is displayed in italics.

# Description: 
ContactPicker__FontSizePropertyDescriptions=Point size for ContactPicker text.

# Description: 
ContactPicker__FontTypefacePropertyDescriptions=Font family for ContactPicker text.

# Description: 
ContactPicker__GotFocusEventDescriptions=Indicates the cursor moved over the ContactPicker so it is now possible to click it.

# Description: 
ContactPicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the ContactPicker as a percentage of the height of the Screen.

# Description: 
ContactPicker__HeightPropertyDescriptions=Specifies the vertical height of the ContactPicker, measured in pixels.

# Description: 
ContactPicker__ImagePropertyDescriptions=Image to display on button.

# Description: 
ContactPicker__LostFocusEventDescriptions=Indicates the cursor moved away from the ContactPicker so it is now no longer possible to click it.

# Description: 
ContactPicker__OpenMethodDescriptions=Opens the ContactPicker, as though the user clicked on it.

# Description: 
ContactPicker__PhoneNumberPropertyDescriptions=Returns the primary phone number associated with the selected contact, or the empty string if no phone number is associated with the contact.

# Description: 
ContactPicker__PicturePropertyDescriptions=Returns a picture URI for the selected contact, which can be used to retrieve the contact''s photo and other fields.

# Description: 
ContactPicker__ShapePropertyDescriptions=Returns the style of the `ContactPicker`.

# Description: 
ContactPicker__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a ContactPicker that has an image as background.

# Description: 
ContactPicker__TextAlignmentPropertyDescriptions=Left, center, or right.

# Description: 
ContactPicker__TextColorPropertyDescriptions=Color for button text.

# Description: 
ContactPicker__TextPropertyDescriptions=Text to display on ContactPicker.

# Description: 
ContactPicker__TouchDownEventDescriptions=Indicates that the ContactPicker was pressed down.

# Description: 
ContactPicker__TouchUpEventDescriptions=Indicates that the ContactPicker has been released.

# Description: 
ContactPicker__VisiblePropertyDescriptions=Specifies whether the ContactPicker should be visible on the screen. Value is true if the ContactPicker is showing and false if hidden.

# Description: 
ContactPicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the ContactPicker as a percentage of the width of the Screen.

# Description: 
ContactPicker__WidthPropertyDescriptions=Specifies the horizontal width of the ContactPicker, measured in pixels.

# Description: 
ContactUriProperties=ContactUri

# Description: 
ContactUriPropertyDescriptions=URI that specifies the location of the contact on the device.

# Description: 
CopyFileMethodDescriptions=Copy the contents from the first file to the second file.

# Description: 
CopyFileMethods=CopyFile

# Description: 
CountryProperties=Country

# Description: 
CountryPropertyDescriptions=Country code to use for speech generation. This can affect the pronounciation. For example, British English (GBR) will sound different from US English (USA). Not every country code will affect every language.

# Description: 
CreateElementMethodDescriptions=Create a ListView entry. MainText is required. DetailText and ImageName are optional.

# Description: 
CreateElementMethods=CreateElement

# Description: 
CreateMarkerMethodDescriptions=Create a new marker with default properties at the specified latitude and longitude.

# Description: 
CreateMarkerMethods=CreateMarker

# Description: 
CurrentAddressProperties=CurrentAddress

# Description: 
CurrentAddressPropertyDescriptions=Provides a textual representation of the current address or "No address available".

# Description: 
CurrentPageTitleProperties=CurrentPageTitle

# Description: 
CurrentPageTitlePropertyDescriptions=Title of the page currently viewed

# Description: 
CurrentUrlProperties=CurrentUrl

# Description: 
CurrentUrlPropertyDescriptions=URL of the page currently viewed. This could be different from the Home URL if new pages were visited by following links.

# Description: The label used to indicate cycling navigation.
CyclingNavMethod=Cycling

# Description: 
DataChangedEvents=DataChanged

# Description: 
DataTypeProperties=DataType

# Description: 
DataTypePropertyDescriptions=Returns the MIME type to pass to the activity.

# Description: 
DataUriProperties=DataUri

# Description: 
DataUriPropertyDescriptions=Returns the data URI that will be used to start the activity.

# Description: 
DatePickerHelpStringComponentPallette=<p>A button that, when clicked on, launches a popup dialog to allow the user to select a date.</p>

# Description: 
DatePicker__BackgroundColorPropertyDescriptions=Returns the button''s background color

# Description: 
DatePicker__EnabledPropertyDescriptions=If set, user can tap DatePicker to cause action.

# Description: 
DatePicker__FontBoldPropertyDescriptions=If set, DatePicker text is displayed in bold.

# Description: 
DatePicker__FontItalicPropertyDescriptions=If set, DatePicker text is displayed in italics.

# Description: 
DatePicker__FontSizePropertyDescriptions=Point size for DatePicker text.

# Description: 
DatePicker__FontTypefacePropertyDescriptions=Font family for DatePicker text.

# Description: 
DatePicker__GotFocusEventDescriptions=Indicates the cursor moved over the DatePicker so it is now possible to click it.

# Description: 
DatePicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the DatePicker as a percentage of the height of the Screen.

# Description: 
DatePicker__HeightPropertyDescriptions=Specifies the vertical height of the DatePicker, measured in pixels.

# Description: 
DatePicker__ImagePropertyDescriptions=Image to display on button.

# Description: 
DatePicker__InstantPropertyDescriptions=the instant of the date that was last picked using the DatePicker.

# Description: 
DatePicker__LaunchPickerMethodDescriptions=Launches the DatePicker dialog.

# Description: 
DatePicker__LostFocusEventDescriptions=Indicates the cursor moved away from the DatePicker so it is now no longer possible to click it.

# Description: 
DatePicker__ShapePropertyDescriptions=Returns the style of the `DatePicker`.

# Description: 
DatePicker__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a DatePicker that has an image as background.

# Description: 
DatePicker__TextAlignmentPropertyDescriptions=Left, center, or right.

# Description: 
DatePicker__TextColorPropertyDescriptions=Color for button text.

# Description: 
DatePicker__TextPropertyDescriptions=Text to display on DatePicker.

# Description: 
DatePicker__TouchDownEventDescriptions=Indicates that the DatePicker was pressed down.

# Description: 
DatePicker__TouchUpEventDescriptions=Indicates that the DatePicker has been released.

# Description: 
DatePicker__VisiblePropertyDescriptions=Specifies whether the DatePicker should be visible on the screen. Value is true if the DatePicker is showing and false if hidden.

# Description: 
DatePicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the DatePicker as a percentage of the width of the Screen.

# Description: 
DatePicker__WidthPropertyDescriptions=Specifies the horizontal width of the DatePicker, measured in pixels.

# Description: 
DayOfMonthMethodDescriptions=Returns the day of the month (1-31) from the instant.

# Description: 
DayOfMonthMethods=DayOfMonth

# Description: 
DayProperties=Day

# Description: 
DayPropertyDescriptions=the Day of the month that was last picked using the DatePicker.

# Description: 
DeAuthorizeMethodDescriptions=Removes Twitter authorization from this running app instance

# Description: 
DeAuthorizeMethods=DeAuthorize

# Description: 
DefaultFileScopeProperties=DefaultFileScope

# Description: 
DefaultFileScopePropertyDescriptions=Specifies the default scope used when components access files. Note that the

# Description: 
DefaultRedisServerProperties=DefaultRedisServer

# Description: 
DefaultRedisServerPropertyDescriptions=The Default Redis Server to use.

# Description: 
DefaultScopeProperties=DefaultScope

# Description: 
DefaultScopePropertyDescriptions=Specifies the default scope for files accessed using the File component. The App scope should work for most apps. Legacy mode can be used for apps that predate the newer constraints in Android on app file access.

# Description: 
DefaultURLProperties=DefaultURL

# Description: 
DefaultURLPropertyDescriptions=Property for DefaultURL

# Description: 
DeleteFileMethodDescriptions=Delete a file on the robot.

# Description: 
DeleteFileMethods=DeleteFile

# Description: 
DeleteMethods=Delete

# Description: 
DelimiterByteProperties=DelimiterByte

# Description: 
DelimiterBytePropertyDescriptions=Sets the delimiter byte to use when passing a negative number for the numberOfBytes parameter when calling ReceiveText, ReceiveSignedBytes, or ReceiveUnsignedBytes. Those functions will continue to read bytes until they encounter the value specified here. The default delimiter is 0, the null byte.

# Description: 
DescriptionProperties=Description

# Description: 
DetectColorProperties=DetectColor

# Description: 
DetectColorPropertyDescriptions=Whether the sensor should detect color or light. True indicates that the sensor should detect color; False indicates that the sensor should detect light. If the DetectColor property is set to True, the BelowRange, WithinRange, and AboveRange events will not occur and the sensor will not generate color. If the DetectColor property is set to False, the ColorChanged event will not occur.

# Description: 
DeveloperBucketProperties=DeveloperBucket

# Description: 
DeveloperBucketPropertyDescriptions=Specifies the unique developer path of the Firebase.

# Description: 
DirectMessageMethodDescriptions=This sends a direct (private) message to the specified user. The message will be trimmed if it exceeds 160characters. <p><u>Requirements</u>\: This should only be called after the <code>IsAuthorized</code> event has been raised, indicating that the user has successfully logged in to Twitter.</p>

# Description: 
DirectMessageMethods=DirectMessage

# Description: 
DirectMessagesProperties=DirectMessages

# Description: 
DirectMessagesPropertyDescriptions=This property contains a list of the most recent messages mentioning the logged-in user. Initially, the list is empty. To set it, the program must\: <ol> <li> Call the <code>Authorize</code> method.</li> <li> Wait for the <code>Authorized</code> event.</li> <li> Call the <code>RequestDirectMessages</code> method.</li> <li> Wait for the <code>DirectMessagesReceived</code> event.</li></ol>The value of this property will then be set to the list of direct messages retrieved (and maintain that value until any subsequent call to <code>RequestDirectMessages</code>).

# Description: 
DirectMessagesReceivedEventDescriptions=This event is raised when the recent messages requested through <code>RequestDirectMessages</code> have been retrieved. A list of the messages can then be found in the <code>messages</code> parameter or the <code>Messages</code> property.

# Description: 
DirectMessagesReceivedEvents=DirectMessagesReceived

# Description: 
DisconnectMethodDescriptions=Disconnect from the connected Bluetooth device.

# Description: 
DisconnectMethods=Disconnect

# Description: 
DisconnectOnErrorProperties=DisconnectOnError

# Description: 
DisconnectOnErrorPropertyDescriptions=Disconnects BluetoothClient automatically when an error occurs.

# Description: 
DismissProgressDialogMethodDescriptions=Dismiss a previously displayed ProgressDialog box

# Description: 
DismissProgressDialogMethods=DismissProgressDialog

# Description: 
DisplayDropdownMethodDescriptions=Displays the dropdown list for selection, same action as when the user clicks on the spinner.

# Description: 
DisplayDropdownMethods=DisplayDropdown

# Description: 
DistanceIntervalProperties=DistanceInterval

# Description: 
DistanceIntervalPropertyDescriptions=Determines the minimum distance interval, in meters, that the sensor will try to use for sending out location updates. For example, if this is set to 5, then the sensor will fire a LocationChanged event only after 5 meters have been traversed. However, the sensor does not guarantee that an update will be received at exactly the distance interval. It may take more than 5 meters to fire an event, for instance.

# Description: 
DistanceProperties=Distance

# Description: 
DistanceToFeatureMethodDescriptions=Compute the distance, in meters, between two map features.

# Description: 
DistanceToFeatureMethods=DistanceToFeature

# Description: 
DistanceToPointMethods=DistanceToPoint

# Description: 
DoQueryMethodDescriptions=DEPRECATED. This block is deprecated as of the end of 2012. Use SendQuery.

# Description: 
DoQueryMethods=DoQuery

# Description: 
DoScanMethodDescriptions=Begins a barcode scan, using the camera. When the scan is complete, the AfterScan event will be raised.

# Description: 
DoScanMethods=DoScan

# Description: 
DoubleTapAtPointEventDescriptions=The user double-tapped at a point on the map. This event will be followed by a ZoomChanged event if zooming gestures are enabled and the map is not at the highest possible zoom level.

# Description: 
DoubleTapAtPointEvents=DoubleTapAtPoint

# Description: 
DownloadFileMethodDescriptions=Download a file to the robot.

# Description: 
DownloadFileMethods=DownloadFile

# Description: 
DragEvents=Drag

# Description: 
DraggableProperties=Draggable

# Description: 
DraggedEvents=Dragged

# Description: 
DrawArcMethodDescriptions=Draw an arc on Canvas, by drawing an arc from a specified oval (specified by left, top, right & bottom). Start angle is 0 when heading to the right, and increase when rotate clockwise. When useCenter is true, a sector will be drawed instead of an arc. When fill is true, a filled arc (or sector) will be drawed instead of just an outline.

# Description: 
DrawArcMethods=DrawArc

# Description: 
DrawCircleMethods=DrawCircle

# Description: 
DrawIconMethodDescriptions=Draw a built-in icon on screen.

# Description: 
DrawIconMethods=DrawIcon

# Description: 
DrawLineMethods=DrawLine

# Description: 
DrawPointMethods=DrawPoint

# Description: 
DrawRectMethodDescriptions=Draw a rectangle on the screen.

# Description: 
DrawRectMethods=DrawRect

# Description: 
DrawShapeMethodDescriptions=Draws a shape on the canvas. pointList should be a list contains sub-lists with two number which represents a coordinate. The first point and last point does not need to be the same. e.g. ((x1 y1) (x2 y2) (x3 y3)) When fill is true, the shape will be filled.

# Description: 
DrawShapeMethods=DrawShape

# Description: 
DrawTextAtAngleMethodDescriptions=Draws the specified text starting at the specified coordinates at the specified angle using the values of the FontSize and TextAlignment properties.

# Description: 
DrawTextAtAngleMethods=DrawTextAtAngle

# Description: 
DrawTextMethodDescriptions=Draws the specified text relative to the specified coordinates using the values of the FontSize and TextAlignment properties.

# Description: 
DrawTextMethods=DrawText

# Description: 
DriveMotorsProperties=DriveMotors

# Description: 
DriveMotorsPropertyDescriptions=The motor ports that are used for driving\: the left wheel''s motor port followed by the right wheel''s motor port.

# Description: The label used to indicate driving navigation.
DrivingNavMethod=Driving

# Description: 
DurationMethodDescriptions=Returns duration, which is milliseconds elapsed between instants.

# Description: 
DurationMethods=Duration

# Description: 
DurationToDaysMethodDescriptions=Converts the duration to the number of days.

# Description: 
DurationToDaysMethods=DurationToDays

# Description: 
DurationToHoursMethodDescriptions=Converts the duration to the number of hours.

# Description: 
DurationToHoursMethods=DurationToHours

# Description: 
DurationToMinutesMethodDescriptions=Converts the duration to the number of minutes.

# Description: 
DurationToMinutesMethods=DurationToMinutes

# Description: 
DurationToSecondsMethodDescriptions=Converts the duration to the number of seconds.

# Description: 
DurationToSecondsMethods=DurationToSeconds

# Description: 
DurationToWeeksMethodDescriptions=Converts the duration to the number of weeks.

# Description: 
DurationToWeeksMethods=DurationToWeeks

# Description: 
EastLongitudeProperties=EastLongitude

# Description: 
EastLongitudePropertyDescriptions=The east edge of the rectangle, in decimal degrees east of the prime meridian.

# Description: 
EdgeReachedEvents=EdgeReached

# Description: 
ElapsedTimeProperties=ElapsedTime

# Description: 
ElapsedTimePropertyDescriptions=Time elapsed in milliseconds since the pedometer was started.

# Description: 
ElementsFromStringProperties=ElementsFromString

# Description: 
ElementsProperties=Elements

# Description: 
EmailAddressListProperties=EmailAddressList

# Description: 
EmailAddressListPropertyDescriptions=Returns a list of email addresses associated with the selected contact.

# Description: 
EmailAddressProperties=EmailAddress

# Description: 
EmailAddressPropertyDescriptions=Returns the primary email address of the selected contact, or the empty string if an email address is unavailable.

# Description: 
EmailPickerHelpStringComponentPallette=An EmailPicker is a kind of text box. If the user begins entering the name or email address of a contact, the phone will show a dropdown menu of choices that complete the entry. If there are many contacts, the dropdown can take several seconds to appear, and can show intermediate results while the matches are being computed. <p>The initial contents of the text box and the contents< after user entry is in the <code>Text</code> property. If the <code>Text</code> property is initially empty, the contents of the <code>Hint</code> property will be faintly shown in the text box as a hint to the user.</p> <p>Other properties affect the appearance of the text box (<code>TextAlignment</code>, <code>BackgroundColor</code>, etc.) and whether it can be used (<code>Enabled</code>).</p><p>Text boxes like this are usually used with <code>Button</code> components, with the user clicking on the button when text entry is complete.

# Description: 
EmailPicker__BackgroundColorPropertyDescriptions=The background color of the input box. You can choose a color by name in the Designer or in the Blocks Editor. The default background color is ''default'' (shaded 3-D look).

# Description: 
EmailPicker__EnabledPropertyDescriptions=Whether the user can enter text into the EmailPicker. By default, this is true.

# Description: 
EmailPicker__FontBoldPropertyDescriptions=Whether the font for the text should be bold. By default, it is not.

# Description: 
EmailPicker__FontItalicPropertyDescriptions=Whether the text should appear in italics. By default, it does not.

# Description: 
EmailPicker__FontSizePropertyDescriptions=The font size for the text. By default, it is 14.0 points.

# Description: 
EmailPicker__FontTypefacePropertyDescriptions=The font for the text. The value can be changed in the Designer.

# Description: 
EmailPicker__GotFocusEventDescriptions=Event raised when the `EmailPicker` is selected for input, such as by the user touching it.

# Description: 
EmailPicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the EmailPicker as a percentage of the height of the Screen.

# Description: 
EmailPicker__HeightPropertyDescriptions=Specifies the vertical height of the EmailPicker, measured in pixels.

# Description: 
EmailPicker__HintPropertyDescriptions=Text that should appear faintly in the EmailPicker to provide a hint as to what the user should enter. This can only be seen if the Text property is empty.

# Description: 
EmailPicker__LostFocusEventDescriptions=Event raised when the EmailPicker is no longer selected for input, such as if the user touches a different text box.

# Description: 
EmailPicker__RequestFocusMethodDescriptions=Sets the EmailPicker active.

# Description: 
EmailPicker__TextAlignmentPropertyDescriptions=Whether the text should be left justified, centered, or right justified. By default, text is left justified.

# Description: 
EmailPicker__TextColorPropertyDescriptions=The color for the text. You can choose a color by name in the Designer or in the Blocks Editor. The default text color is black.

# Description: 
EmailPicker__TextPropertyDescriptions=Returns the textbox contents.

# Description: 
EmailPicker__VisiblePropertyDescriptions=Specifies whether the EmailPicker should be visible on the screen. Value is true if the EmailPicker is showing and false if hidden.

# Description: 
EmailPicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the EmailPicker as a percentage of the width of the Screen.

# Description: 
EmailPicker__WidthPropertyDescriptions=Specifies the horizontal width of the EmailPicker, measured in pixels.

# Description: 
EnableInfoboxProperties=EnableInfobox

# Description: 
EnablePanProperties=EnablePan

# Description: 
EnablePanPropertyDescriptions=Enable two-finger panning of the Map

# Description: 
EnableRotationProperties=EnableRotation

# Description: 
EnableRotationPropertyDescriptions=Enable rotating the map based on the user''s orientation.

# Description: 
EnableSpeedRegulationProperties=EnableSpeedRegulation

# Description: 
EnableSpeedRegulationPropertyDescriptions=Specifies whether to keep motor rotation at constant speed.

# Description: 
EnableZoomProperties=EnableZoom

# Description: 
EnableZoomPropertyDescriptions=Set whether the user can zoom the map using touch gestures. This value does not affect whether the user can zoom using the zoom controls provided by <a href\="\#Map.ShowZoom">ShowZoom</a>.

# Description: 
EnabledProperties=Enabled

# Description: 
EndLatitudeProperties=EndLatitude

# Description: 
EndLatitudePropertyDescriptions=The latitude of the end location.

# Description: 
EndLocationProperties=EndLocation

# Description: 
EndLocationPropertyDescriptions=Set the end location.

# Description: 
EndLongitudeProperties=EndLongitude

# Description: 
EndLongitudePropertyDescriptions=The longitude of the end location.

# Description: 
ErrorOccurredEvents=ErrorOccurred

# Description: 
Ev3ColorSensorHelpStringComponentPallette=A component that provides a high-level interface to a color sensor on a LEGO MINDSTORMS EV3 robot.

# Description: 
Ev3ColorSensor__AboveRangeEventDescriptions=Light level has gone above the range.

# Description: 
Ev3ColorSensor__AboveRangeEventEnabledPropertyDescriptions=Whether the AboveRange event should fire when the light level goes above the TopOfRange.

# Description: 
Ev3ColorSensor__BelowRangeEventDescriptions=Light level has gone below the range.

# Description: 
Ev3ColorSensor__BelowRangeEventEnabledPropertyDescriptions=Whether the BelowRange event should fire when the light level goes below the BottomOfRange.

# Description: 
Ev3ColorSensor__ColorChangedEventDescriptions=Called when the detected color has changed. The ColorChanged event will occur if the Mode property is set to "color" and the ColorChangedEventEnabled property is set to True.

# Description: 
Ev3ColorSensor__ColorChangedEventEnabledPropertyDescriptions=Whether the ColorChanged event should fire when the Mode property is set to "color" and the detected color changes.

# Description: 
Ev3ColorSensor__GetLightLevelMethodDescriptions=It returns the light level in percentage, or -1 when the light level cannot be read.

# Description: 
Ev3ColorSensor__WithinRangeEventDescriptions=Light level has gone within the range.

# Description: 
Ev3ColorSensor__WithinRangeEventEnabledPropertyDescriptions=Whether the WithinRange event should fire when the light level goes between the BottomOfRange and the TopOfRange.

# Description: 
Ev3CommandsHelpStringComponentPallette=A component that provides a low-level interface to a LEGO MINDSTORMS EV3 robot, with functions to send system or direct commands to EV3 robots.

# Description: 
Ev3Commands__GetFirmwareVersionMethodDescriptions=Get the firmware version on EV3.

# Description: 
Ev3Commands__KeepAliveMethodDescriptions=Keep the EV3 brick from shutdown for a period of time.

# Description: 
Ev3GyroSensorHelpStringComponentPallette=A component that provides a high-level interface to a gyro sensor on a LEGO MINDSTORMS EV3 robot.

# Description: 
Ev3MotorsHelpStringComponentPallette=A component that provides both high- and low-level interfaces to a LEGO MINDSTORMS EV3 robot, with functions that can control the motors.

# Description: 
Ev3Motors__StopBeforeDisconnectPropertyDescriptions=Whether to stop the motor before disconnecting.

# Description: 
Ev3Motors__StopMethodDescriptions=Stop the motors of the robot.

# Description: 
Ev3Motors__WheelDiameterPropertyDescriptions=Specifies the diameter of the wheels attached on motors.

# Description: 
Ev3SoundHelpStringComponentPallette=A component that provides a high-level interface to sound functionalities on LEGO MINDSTORMS EV3 robot.

# Description: 
Ev3TouchSensorHelpStringComponentPallette=A component that provides a high-level interface to a touch sensor on a LEGO MINDSTORMS EV3 robot.

# Description: 
Ev3TouchSensor__PressedEventDescriptions=Called when the touch sensor is pressed.

# Description: 
Ev3TouchSensor__PressedEventEnabledPropertyDescriptions=Specifies whether the Pressed event should fire when the touch sensor is pressed.

# Description: 
Ev3TouchSensor__ReleasedEventDescriptions=Called when the touch sensor is pressed.

# Description: 
Ev3UIHelpStringComponentPallette=A component that provides a high-level interface to a LEGO MINDSTORMS EV3 robot, with functions to draw graphs on EV3 screen.

# Description: 
Ev3UI__DrawCircleMethodDescriptions=Draw a circle on the screen.

# Description: 
Ev3UI__DrawLineMethodDescriptions=Draw a line on the screen.

# Description: 
Ev3UI__DrawPointMethodDescriptions=Draw a point on the screen.

# Description: 
Ev3UltrasonicSensorHelpStringComponentPallette=A component that provides a high-level interface to an ultrasonic sensor on a LEGO MINDSTORMS EV3 robot.

# Description: 
Ev3UltrasonicSensor__AboveRangeEventDescriptions=Called when the detected distance has gone above the range.

# Description: 
Ev3UltrasonicSensor__AboveRangeEventEnabledPropertyDescriptions=Whether the AboveRange event should fire when the distance goes above the TopOfRange.

# Description: 
Ev3UltrasonicSensor__BelowRangeEventDescriptions=Called when the detected distance has gone below the range.

# Description: 
Ev3UltrasonicSensor__BelowRangeEventEnabledPropertyDescriptions=Whether the BelowRange event should fire when the distance goes below the BottomOfRange.

# Description: 
Ev3UltrasonicSensor__WithinRangeEventDescriptions=Called when the detected distance has gone within the range.

# Description: 
Ev3UltrasonicSensor__WithinRangeEventEnabledPropertyDescriptions=Whether the WithinRange event should fire when the distance goes between the BottomOfRange and the TopOfRange.

# Description: 
ExistsMethodDescriptions=Tests whether the path exists in the given scope.

# Description: 
ExistsMethods=Exists

# Description: 
ExtendMovesOutsideCanvasProperties=ExtendMovesOutsideCanvas

# Description: 
ExtendMovesOutsideCanvasPropertyDescriptions=Determines whether moves can extend beyond the canvas borders. Default is false. This should normally be false, and the property is provided for backwards compatibility.

# Description: 
ExtraKeyProperties=ExtraKey

# Description: 
ExtraKeyPropertyDescriptions=Returns the extra key that will be passed to the activity.DEPRECATED\: New code should use Extras property instead.

# Description: 
ExtraValueProperties=ExtraValue

# Description: 
ExtraValuePropertyDescriptions=Returns the extra value that will be passed to the activity.DEPRECATED\: New code should use Extras property instead.

# Description: 
ExtrasProperties=Extras

# Description: 
ExtrasPropertyDescriptions=Specifies the list of key-value pairs that will be passed as extra data to the activity.

# Description: 
FeatureClickEventDescriptions=The user clicked on a map feature.

# Description: 
FeatureClickEvents=FeatureClick

# Description: 
FeatureCollectionHelpStringComponentPallette=A FeatureCollection contains one or more map features as a group. Any events fired on a feature in the collection will also trigger the corresponding event on the collection object. FeatureCollections can be loaded from external resources as a means of populating a Map with content.

# Description: 
FeatureCollection__FeaturesPropertyDescriptions=The list of features placed on this FeatureCollection. This list also includes any features created by calls to FeatureFromDescription

# Description: 
FeatureCollection__HeightPercentPropertyDescriptions=Specifies the vertical height of the FeatureCollection as a percentage of the height of the Screen.

# Description: 
FeatureCollection__HeightPropertyDescriptions=Specifies the vertical height of the FeatureCollection, measured in pixels.

# Description: 
FeatureCollection__SourcePropertyDescriptions=Specifies the source URL used to populate the feature collection. If the feature collection was not loaded from a URL, this will be the empty string.

# Description: 
FeatureCollection__VisiblePropertyDescriptions=Specifies whether the FeatureCollection should be visible on the screen. Value is true if the FeatureCollection is showing and false if hidden.

# Description: 
FeatureCollection__WidthPercentPropertyDescriptions=Specifies the horizontal width of the FeatureCollection as a percentage of the width of the Screen.

# Description: 
FeatureCollection__WidthPropertyDescriptions=Specifies the horizontal width of the FeatureCollection, measured in pixels.

# Description: 
FeatureDragEventDescriptions=The user dragged a map feature.

# Description: 
FeatureDragEvents=FeatureDrag

# Description: 
FeatureFromDescriptionMethodDescriptions=Converts a feature description into an App Inventor map feature. Points are converted into

# Description: 
FeatureFromDescriptionMethods=FeatureFromDescription

# Description: 
FeatureLongClickEventDescriptions=The user long-pressed on a map feature.

# Description: 
FeatureLongClickEvents=FeatureLongClick

# Description: 
FeatureStartDragEventDescriptions=The user started dragging a map feature.

# Description: 
FeatureStartDragEvents=FeatureStartDrag

# Description: 
FeatureStopDragEventDescriptions=The user stopped dragging a map feature.

# Description: 
FeatureStopDragEvents=FeatureStopDrag

# Description: 
FeaturesFromGeoJSONProperties=FeaturesFromGeoJSON

# Description: 
FeaturesFromGeoJSONPropertyDescriptions=Loads a collection of features from the given string. If the string is not valid GeoJSON, the ErrorLoadingFeatureCollection error will be run with url \= <string>.

# Description: 
FeaturesProperties=Features

# Description: 
FileHelpStringComponentPallette=Non-visible component for storing and retrieving files. Use this component to write or read files on your device. The default behaviour is to write files to the private data directory associated with your App. The Companion is special cased to write files to a public directory for debugging. Use the More information link to read more about how the File component uses paths and scopes to manage access to files.

# Description: 
File__DeleteMethodDescriptions=Deletes a file from storage. Prefix the filename with / to delete a specific file in the SD card, for instance /myFile.txt. will delete the file /sdcard/myFile.txt. If the file does not begin with a /, then the file located in the programs private storage will be deleted. Starting the file with // is an error because assets files cannot be deleted.

# Description: 
File__GotTextEventDescriptions=Event indicating that the contents from the file have been read.

# Description: 
File__LegacyModePropertyDescriptions=Allows app to access files from the root of the external storage directory (legacy mode).

# Description: 
FillColorProperties=FillColor

# Description: 
FillOpacityProperties=FillOpacity

# Description: 
FillOpacityPropertyDescriptions=The opacity of the interior of the map feature.

# Description: 
FillScreenMethodDescriptions=Fill the screen with a color.

# Description: 
FillScreenMethods=FillScreen

# Description: 
FirebaseDBHelpStringComponentPallette=Non-visible component that communicates with Firebase to store and retrieve information.

# Description: 
FirebaseDB__ClearTagMethodDescriptions=Remove the tag from Firebase

# Description: 
FirebaseDB__DataChangedEventDescriptions=Indicates that the data in the Firebase has changed. Launches an event with the tag and value that have been updated.

# Description: 
FirebaseDB__FirstRemovedEventDescriptions=Event triggered by the "RemoveFirst" function. The argument "value" is the object that was the first in the list, and which is now removed.

# Description: 
FirebaseDB__GetValueMethodDescriptions=GetValue asks Firebase to get the value stored under the given tag. It will pass valueIfTagNotThere to GotValue if there is no value stored under the tag.

# Description: 
FirebaseDB__GotValueEventDescriptions=Indicates that a GetValue request has succeeded.

# Description: 
FirebaseDB__StoreValueMethodDescriptions=Asks Firebase to store the given value under the given tag.

# Description: 
FirebaseErrorEventDescriptions=Indicates that the communication with the Firebase signaled an error.

# Description: 
FirebaseErrorEvents=FirebaseError

# Description: 
FirebaseTokenProperties=FirebaseToken

# Description: 
FirebaseTokenPropertyDescriptions=Specifies the token for the default Firebase.

# Description: 
FirebaseURLProperties=FirebaseURL

# Description: 
FirebaseURLPropertyDescriptions=Gets the URL for this FirebaseDB.

# Description: 
FirstRemovedEvents=FirstRemoved

# Description: 
FlungEvents=Flung

# Description: 
FollowLinksProperties=FollowLinks

# Description: 
FollowLinksPropertyDescriptions=Determines whether to follow links when they are tapped in the WebViewer. If you follow links, you can use GoBack and GoForward to navigate the browser history.

# Description: 
FollowMethodDescriptions=Starts following a user.

# Description: 
FollowMethods=Follow

# Description: 
FollowersProperties=Followers

# Description: 
FollowersPropertyDescriptions=This property contains a list of the followers of the logged-in user. Initially, the list is empty. To set it, the program must\: <ol> <li> Call the <code>Authorize</code> method.</li> <li> Wait for the <code>IsAuthorized</code> event.</li> <li> Call the <code>RequestFollowers</code> method.</li> <li> Wait for the <code>FollowersReceived</code> event.</li></ol>The value of this property will then be set to the list of followers (and maintain its value until any subsequent call to <code>RequestFollowers</code>).

# Description: 
FollowersReceivedEventDescriptions=This event is raised when all of the followers of the logged-in user requested through <code>RequestFollowers</code> have been retrieved. A list of the followers can then be found in the <code>followers</code> parameter or the <code>Followers</code> property.

# Description: 
FollowersReceivedEvents=FollowersReceived

# Description: 
FontBoldProperties=FontBold

# Description: 
FontItalicProperties=FontItalic

# Description: 
FontSizeDetailProperties=FontSizeDetail

# Description: 
FontSizeDetailPropertyDescriptions=The text size of the listview stringItems.

# Description: 
FontSizeProperties=FontSize

# Description: 
FontTypefaceDetailProperties=FontTypefaceDetail

# Description: 
FontTypefaceDetailPropertyDescriptions=Returns the label''s text''s font face as default, serif, sans serif, or monospace.

# Description: 
FontTypefaceProperties=FontTypeface

# Description: 
ForgetLoginMethodDescriptions=Forget end-users login credentials. Has no effect on service authentication

# Description: 
ForgetLoginMethods=ForgetLogin

# Description: 
FormatDateMethodDescriptions=Text representing the date of an instant in the specified pattern

# Description: 
FormatDateMethods=FormatDate

# Description: 
FormatDateTimeMethodDescriptions=Returns text representing the date and time of an instant in the specified pattern

# Description: 
FormatDateTimeMethods=FormatDateTime

# Description: 
FormatTimeMethodDescriptions=Text representing the time of an instant

# Description: 
FormatTimeMethods=FormatTime

# Description: 
FriendTimelineProperties=FriendTimeline

# Description: 
FriendTimelinePropertyDescriptions=This property contains the 20 most recent messages of users being followed. Initially, the list is empty. To set it, the program must\: <ol> <li> Call the <code>Authorize</code> method.</li> <li> Wait for the <code>IsAuthorized</code> event.</li> <li> Specify users to follow with one or more calls to the <code>Follow</code> method.</li> <li> Call the <code>RequestFriendTimeline</code> method.</li> <li> Wait for the <code>FriendTimelineReceived</code> event.</li> </ol>The value of this property will then be set to the list of messages (and maintain its value until any subsequent call to <code>RequestFriendTimeline</code>.

# Description: 
FriendTimelineReceivedEventDescriptions=This event is raised when the messages requested through <code>RequestFriendTimeline</code> have been retrieved. The <code>timeline</code> parameter and the <code>Timeline</code> property will contain a list of lists, where each sub-list contains a status update of the form (username message)

# Description: 
FriendTimelineReceivedEvents=FriendTimelineReceived

# Description: 
FullScreenProperties=FullScreen

# Description: 
FullScreenPropertyDescriptions=Returns whether the VideoPlayer''s video is currently being shown in fullscreen mode or not.

# Description: 
FunctionCompletedEventDescriptions=Indicates that a function call completed.

# Description: 
FunctionCompletedEvents=FunctionCompleted

# Description: 
FusionTablesDeprecated=WARNING\: Google has Deprecated the Fusion Tables Service. It will stop working on December 3, 2019 <a href\="https\://support.google.com/fusiontables/answer/9185417" target\="_blank"> Learn More</a>

# Description: 
FusionTablesStandardErrorMessage=Error on Fusion Tables query

# Description: 
FusiontablesControlHelpStringComponentPallette=<p>A non-visible component that communicates with Google Fusion Tables. Fusion Tables let you store, share, query and visualize data tables; this component lets you query, create, and modify these tables.</p> <p><font color\=red><b>NOTE\:</b>&nbsp;Google shutdown the Fusion Tables service on December 3, 2019. This component no longer functions.</font></p> <p>This component uses the <a href\="https\://developers.google.com/fusiontables/docs/v2/getting_started" target\="_blank">Fusion Tables API V2.0</a>. <p>Applications using Fusion Tables must authentication to Google''s servers. There are two ways this can be done. The first way uses an API Key which you the developer obtain (see below). With this approach end-users must also login to access a Fusion Table. The second approach is to use a Service Account. With this approach you create credentials and a special "Service Account Email Address" which you obtain from the <a href\="https\://code.google.com/apis/console/" target\="_blank">Google APIs Console</a>. You then tell the Fusion Table Control the name of the Service Account Email address and upload the secret key as an asset to your application and set the KeyFile property to point at this file. Finally you check the "UseServiceAuthentication" checkbox in the designer. When using a Service Account, end-users do not need to login to use Fusion Tables, your service account authenticates all access.</p> <p>To get an API key, follow these instructions.</p> <ol><li>Go to your <a href\="https\://code.google.com/apis/console/" target\="_blank">Google APIs Console</a> and login if necessary.</li><li>Select the <i>Services</i> item from the menu on the left.</li><li>Choose the <i>Fusiontables</i> service from the list provided and turn it on.</li><li>Go back to the main menu and select the <i>API Access</i> item. </li></ol><p>Your API Key will be near the bottom of that pane in the section called "Simple API Access".You will have to provide that key as the value for the <i>ApiKey</i> property in your Fusiontables app.</p><p>Once you have an API key, set the value of the <i>Query</i> property to a valid Fusiontables SQL query and call <i>SendQuery</i> to execute the query. App Inventor will send the query to the Fusion Tables server and the <i>GotResult</i> block will fire when a result is returned from the server.Query results will be returned in CSV format, and can be converted to list format using the "list from csv table" or "list from csv row" blocks.</p><p>Note that you do not need to worry about UTF-encoding the query. But you do need to make sure the query follows the syntax described in <a href\="https\://developers.google.com/fusiontables/docs/v2/getting_started" target\="_blank">the reference manual</a>, which means that things like capitalization for names of columns matters, and that single quotes must be used around column names if there are spaces in them.</p>

# Description: 
FusiontablesControl__ApiKeyPropertyDescriptions=Setter for the app developer''s API key.

# Description: 
GPSAvailableEventDescriptions=This event has been deprecated.

# Description: 
GPSAvailableEvents=GPSAvailable

# Description: 
GPSLostEventDescriptions=This event has been deprecated.

# Description: 
GPSLostEvents=GPSLost

# Description: Error given if login fails for some reason
GalleryLoginError=Error Logging Into the Gallery

# Description: Error given when sending fails
GallerySendingError=Error sending project to the Gallery

# Description: 
GameClientHelpStringComponentPallette=Provides a way for applications to communicate with online game servers

# Description: 
GameClient__SendMessageMethodDescriptions=Sends a keyed message to all recipients in the recipients list. The message will consist of the contents list.

# Description: 
GameClient__ServiceURLPropertyDescriptions=Set the URL of the game server.

# Description: 
GameClient__UserEmailAddressPropertyDescriptions=The email address that is being used as the player id for this game client. At present, users must set this manually in oder to join a game. But this property will change in the future so that is set automatically, and users will not be able to change it.

# Description: 
GameClient__WebServiceErrorEventDescriptions=Indicates that an error occurred while communicating with the web server.

# Description: 
GameIdProperties=GameId

# Description: 
GameIdPropertyDescriptions=The game name for this application. The same game ID can have one or more game instances.

# Description: 
GenerateColorProperties=GenerateColor

# Description: 
GenerateColorPropertyDescriptions=The color that should generated by the sensor. Only None, Red, Green, or Blue are valid values. The sensor will not generate color when the DetectColor property is set to True.

# Description: 
GenerateLightProperties=GenerateLight

# Description: 
GenerateLightPropertyDescriptions=Whether the light sensor should generate light.

# Description: 
GetBackgroundPixelColorMethodDescriptions=Gets the color of the specified point. This includes the background and any drawn points, lines, or circles but not sprites.

# Description: 
GetBackgroundPixelColorMethods=GetBackgroundPixelColor

# Description: 
GetBatteryCurrentMethodDescriptions=Get the battery current.

# Description: 
GetBatteryCurrentMethods=GetBatteryCurrent

# Description: 
GetBatteryLevelMethodDescriptions=Get the battery level for the robot. Returns the voltage in millivolts.

# Description: 
GetBatteryLevelMethods=GetBatteryLevel

# Description: 
GetBatteryVoltageMethodDescriptions=Get the battery voltage.

# Description: 
GetBatteryVoltageMethods=GetBatteryVoltage

# Description: 
GetBrickNameMethodDescriptions=Get the brick name of the robot.

# Description: 
GetBrickNameMethods=GetBrickName

# Description: 
GetColorCodeMethodDescriptions=It returns the color code from 0 to 7 corresponding to no color, black, blue, green, yellow, red, white and brown.

# Description: 
GetColorCodeMethods=GetColorCode

# Description: 
GetColorMethodDescriptions=Returns the current detected color, or the color None if the color can not be read or if the DetectColor property is set to False.

# Description: 
GetColorMethods=GetColor

# Description: 
GetColorNameMethodDescriptions=Return the color name in one of "No Color", "Black", "Blue", "Green", "Yellow", "Red", "White", "Brown".

# Description: 
GetColorNameMethods=GetColorName

# Description: 
GetCurrentProgramNameMethodDescriptions=Get the name of currently running program on the robot.

# Description: 
GetCurrentProgramNameMethods=GetCurrentProgramName

# Description: 
GetDetailTextMethodDescriptions=Get the Detail Text of a ListView element.

# Description: 
GetDetailTextMethods=GetDetailText

# Description: 
GetDistanceMethodDescriptions=Returns the current distance in centimeters as a value between 0 and 254, or -1 if the distance can not be read.

# Description: 
GetDistanceMethods=GetDistance

# Description: 
GetDurationMethodDescriptions=Returns duration of the video in milliseconds.

# Description: 
GetDurationMethods=GetDuration

# Description: 
GetFirmwareBuildMethodDescriptions=Get the firmware build on EV3.

# Description: 
GetFirmwareBuildMethods=GetFirmwareBuild

# Description: 
GetFirmwareVersionMethods=GetFirmwareVersion

# Description: 
GetHardwareVersionMethodDescriptions=Get the hardware version of EV3.

# Description: 
GetHardwareVersionMethods=GetHardwareVersion

# Description: 
GetImageNameMethodDescriptions=Get the filename of the image of a ListView element that has been uploaded to Media.

# Description: 
GetImageNameMethods=GetImageName

# Description: 
GetInputValuesMethodDescriptions=Reads the values of an input sensor on the robot. Assumes sensor type has been configured via SetInputMode.

# Description: 
GetInputValuesMethods=GetInputValues

# Description: 
GetInstallerMethodDescriptions=Return the app that installed us

# Description: 
GetInstallerMethods=GetInstaller

# Description: 
GetInstanceListsMethodDescriptions=Updates the InstancesJoined and InstancesInvited lists. This procedure can be called before setting the InstanceId.

# Description: 
GetInstanceListsMethods=GetInstanceLists

# Description: 
GetLightLevelMethods=GetLightLevel

# Description: 
GetMainTextMethodDescriptions=Get the Main Text of a ListView element.

# Description: 
GetMainTextMethods=GetMainText

# Description: 
GetMessagesMethodDescriptions=Retrieves messages of the specified type.

# Description: 
GetMessagesMethods=GetMessages

# Description: 
GetMethodDescriptions=Performs an HTTP GET request using the Url property and retrieves the response. If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The ResponseFileName property can be used to specify the name of the file. If the SaveResponse property is false, the GotText event will be triggered.

# Description: 
GetMethods=Get

# Description: 
GetMillisMethodDescriptions=Returns the instant in time measured as milliseconds since 1970.

# Description: 
GetMillisMethods=GetMillis

# Description: 
GetOSBuildMethodDescriptions=Get the OS build on EV3.

# Description: 
GetOSBuildMethods=GetOSBuild

# Description: 
GetOSVersionMethodDescriptions=Get the OS version on EV3.

# Description: 
GetOSVersionMethods=GetOSVersion

# Description: 
GetOutputStateMethodDescriptions=Reads the output state of a motor on the robot.

# Description: 
GetOutputStateMethods=GetOutputState

# Description: 
GetPixelColorMethodDescriptions=Gets the color of the specified point.

# Description: 
GetPixelColorMethods=GetPixelColor

# Description: 
GetRowsMethodDescriptions=Gets all the rows from a specified fusion table. The tableId field is the id of therequired fusion table. The columns field is a comma-separeted list of the columns to retrieve.

# Description: 
GetRowsMethods=GetRows

# Description: 
GetRowsWithConditionsMethodDescriptions=Gets all the rows from a fusion table that meet certain conditions. The tableId field isthe id of the required fusion table. The columns field is a comma-separeted list of the columns toretrieve. The conditions field specifies what rows to retrieve from the table, for example the rows in whicha particular column value is not null.

# Description: 
GetRowsWithConditionsMethods=GetRowsWithConditions

# Description: 
GetSensorValueMethodDescriptions=Returns the current angle or rotation speed based on current mode, or -1 if the value cannot be read from sensor.

# Description: 
GetSensorValueMethods=GetSensorValue

# Description: 
GetSoundLevelMethodDescriptions=Returns the current sound level as a value between 0 and 1023, or -1 if the sound level can not be read.

# Description: 
GetSoundLevelMethods=GetSoundLevel

# Description: 
GetTachoCountMethodDescriptions=Get the current tacho count.

# Description: 
GetTachoCountMethods=GetTachoCount

# Description: 
GetTagListMethodDescriptions=Get the list of tags for this application. When complete a "TagList" event will be triggered with the list of known tags.

# Description: 
GetTagListMethods=GetTagList

# Description: 
GetTagsMethodDescriptions=Return a list of all the tags in the data store.

# Description: 
GetTagsMethods=GetTags

# Description: 
GetTextMethodDescriptions=Asks the user to speak, and converts the speech to text. Signals the

# Description: 
GetTextMethods=GetText

# Description: 
GetValueMethods=GetValue

# Description: 
GetVersionNameMethodDescriptions=Return the our VersionName property

# Description: 
GetVersionNameMethods=GetVersionName

# Description: 
GetWifiIpAddressMethodDescriptions=Returns the IP address of the phone in the form of a String

# Description: 
GetWifiIpAddressMethods=GetWifiIpAddress

# Description: 
GoBackMethodDescriptions=Go back to the previous page in the history list. Does nothing if there is no previous page.

# Description: 
GoBackMethods=GoBack

# Description: 
GoForwardMethodDescriptions=Go forward to the next page in the history list. Does nothing if there is no next page.

# Description: 
GoForwardMethods=GoForward

# Description: 
GoHomeMethodDescriptions=Loads the home URL page. This happens automatically when the home URL is changed.

# Description: 
GoHomeMethods=GoHome

# Description: 
GoToUrlMethodDescriptions=Load the page at the given URL.

# Description: 
GoToUrlMethods=GoToUrl

# Description: 
GoogleVoiceEnabledProperties=GoogleVoiceEnabled

# Description: 
GoogleVoiceEnabledPropertyDescriptions=If true, then SendMessage will attempt to send messages over Wifi using Google Voice. This requires that the Google Voice app must be installed and set up on the phone or tablet, with a Google Voice account. If GoogleVoiceEnabled is false, the device must have phone and texting service in order to send or receive messages with this component.

# Description: 
GotBallotConfirmationEventDescriptions=Event confirming that the Voting service received the ballot.

# Description: 
GotBallotConfirmationEvents=GotBallotConfirmation

# Description: 
GotBallotEventDescriptions=Event indicating that a ballot was retrieved from the Web service and that the properties <code>BallotQuestion</code> and <code>BallotOptions</code> have been set. This is always preceded by a call to the method <code>RequestBallot</code>.

# Description: 
GotBallotEvents=GotBallot

# Description: 
GotDirectionsEventDescriptions=Event triggered when the Openrouteservice returns the directions.

# Description: 
GotDirectionsEvents=GotDirections

# Description: 
GotFeaturesEventDescriptions=A GeoJSON document was successfully read from url. The features specified in the document are provided as a list in features.

# Description: 
GotFeaturesEvents=GotFeatures

# Description: 
GotFileEventDescriptions=Event indicating that a request has finished.

# Description: 
GotFileEvents=GotFile

# Description: 
GotFocusEvents=GotFocus

# Description: 
GotMessageEventDescriptions=Indicates that a new message has been received.

# Description: 
GotMessageEvents=GotMessage

# Description: 
GotResultEventDescriptions=Indicates that the Fusion Tables query has finished processing, with a result. The result of the query will generally be returned in CSV format, and can be converted to list format using the "list from csv table" or "list from csv row" blocks.

# Description: 
GotResultEvents=GotResult

# Description: 
GotTextEvents=GotText

# Description: 
GotTranslationEventDescriptions=Event triggered when the Yandex.Translate service returns the translated text. This event also provides a response code for error handling. If the responseCode is not 200, then something went wrong with the call, and the translation will not be available.

# Description: 
GotTranslationEvents=GotTranslation

# Description: 
GotValueEvents=GotValue

# Description: 
GyroscopeChangedEventDescriptions=Indicates that the gyroscope sensor data has changed. The timestamp parameter is the time in nanoseconds at which the event occurred.

# Description: 
GyroscopeChangedEvents=GyroscopeChanged

# Description: 
GyroscopeSensorHelpStringComponentPallette=<p>Non-visible component that can measure angular velocity in three dimensions in units of degrees per second.</p><p>In order to function, the component must have its <code>Enabled</code> property set to True, and the device must have a gyroscope sensor.</p>

# Description: 
GyroscopeSensor__AvailablePropertyDescriptions=Indicates whether a gyroscope sensor is available.

# Description: 
GyroscopeSensor__EnabledPropertyDescriptions=Enabled property getter method.

# Description: 
HTMLContentProperties=HTMLContent

# Description: 
HTMLContentPropertyDescriptions=Returns the content of the Label as HTML. This is only useful if the HTMLFormat property is true.

# Description: 
HTMLFormatProperties=HTMLFormat

# Description: 
HTMLFormatPropertyDescriptions=If true, then this label will show html text else it will show plain text. Note\: Not all HTML is supported.

# Description: 
HasAccuracyProperties=HasAccuracy

# Description: 
HasAccuracyPropertyDescriptions=If `true

# Description: 
HasAltitudeProperties=HasAltitude

# Description: 
HasAltitudePropertyDescriptions=If `true

# Description: 
HasLongitudeLatitudeProperties=HasLongitudeLatitude

# Description: 
HasLongitudeLatitudePropertyDescriptions=If `true

# Description: 
HasMarginsProperties=HasMargins

# Description: 
HasMarginsPropertyDescriptions=Reports whether or not the label appears with margins. All four margins (left, right, top, bottom) are the same. This property has no effect in the designer, where labels are always shown with margins.

# Description: 
HeadingProperties=Heading

# Description: 
HeightPercentProperties=HeightPercent

# Description: 
HeightProperties=Height

# Description: 
HideInfoboxMethodDescriptions=Hide the infobox if it is shown. If the infobox is not visible this function has no effect.

# Description: 
HideInfoboxMethods=HideInfobox

# Description: 
HideKeyboardMethods=HideKeyboard

# Description: 
HighByteFirstProperties=HighByteFirst

# Description: 
HighByteFirstPropertyDescriptions=Returns `true

# Description: 
HighContrastProperties=HighContrast

# Description: 
HighContrastPropertyDescriptions=When checked, we will use high contrast mode

# Description: 
HintProperties=Hint

# Description: 
HolePointsFromStringProperties=HolePointsFromString

# Description: 
HolePointsFromStringPropertyDescriptions=Constructs holes in a polygon from a given list of coordinates per hole.

# Description: 
HolePointsProperties=HolePoints

# Description: 
HolePointsPropertyDescriptions=Specifies the points of any holes in the `Polygon`. The `HolePoints` property is a list of lists, with each sublist containing `(latitude, longitude)` points representing a hole.

# Description: 
HomeUrlProperties=HomeUrl

# Description: 
HomeUrlPropertyDescriptions=URL of the page the WebViewer should initially open to. Setting this will load the page.

# Description: 
HorizontalArrangementHelpStringComponentPallette=<p>A formatting element in which to place components that should be displayed from left to right. If you wish to have components displayed one over another, use <code>VerticalArrangement</code> instead.</p>

# Description: 
HorizontalArrangement__AlignHorizontalPropertyDescriptions=A number that encodes how contents of the HorizontalArrangement are aligned horizontally. The choices are\: 1 \= left aligned, 2 \= right aligned, 3 \= horizontally centered. Alignment has no effect if the arrangement''s width is automatic.

# Description: 
HorizontalArrangement__AlignVerticalPropertyDescriptions=A number that encodes how the contents of the HorizontalArrangement are aligned vertically. The choices are\: 1 \= aligned at the top, 2 \= vertically centered, 3 \= aligned at the bottom. Alignment has no effect if the arrangement''s height is automatic.

# Description: 
HorizontalArrangement__BackgroundColorPropertyDescriptions=Returns the background color of the HorizontalArrangement

# Description: 
HorizontalArrangement__HeightPercentPropertyDescriptions=Specifies the vertical height of the HorizontalArrangement as a percentage of the height of the Screen.

# Description: 
HorizontalArrangement__HeightPropertyDescriptions=Specifies the vertical height of the HorizontalArrangement, measured in pixels.

# Description: 
HorizontalArrangement__ImagePropertyDescriptions=Returns the path of the background image of the `HorizontalArrangement`.

# Description: 
HorizontalArrangement__VisiblePropertyDescriptions=Specifies whether the HorizontalArrangement should be visible on the screen. Value is true if the HorizontalArrangement is showing and false if hidden.

# Description: 
HorizontalArrangement__WidthPercentPropertyDescriptions=Specifies the horizontal width of the HorizontalArrangement as a percentage of the width of the Screen.

# Description: 
HorizontalArrangement__WidthPropertyDescriptions=Specifies the horizontal width of the HorizontalArrangement, measured in pixels.

# Description: 
HorizontalScrollArrangementHelpStringComponentPallette=<p>A formatting element in which to place components that should be displayed from left to right. If you wish to have components displayed one over another, use <code>VerticalArrangement</code> instead.</p><p>This version is scrollable.

# Description: 
HorizontalScrollArrangement__AlignHorizontalPropertyDescriptions=A number that encodes how contents of the HorizontalScrollArrangement are aligned horizontally. The choices are\: 1 \= left aligned, 2 \= right aligned, 3 \= horizontally centered. Alignment has no effect if the arrangement''s width is automatic.

# Description: 
HorizontalScrollArrangement__AlignVerticalPropertyDescriptions=A number that encodes how the contents of the HorizontalScrollArrangement are aligned vertically. The choices are\: 1 \= aligned at the top, 2 \= vertically centered, 3 \= aligned at the bottom. Alignment has no effect if the arrangement''s height is automatic.

# Description: 
HorizontalScrollArrangement__BackgroundColorPropertyDescriptions=Returns the background color of the HorizontalScrollArrangement

# Description: 
HorizontalScrollArrangement__HeightPercentPropertyDescriptions=Specifies the vertical height of the HorizontalScrollArrangement as a percentage of the height of the Screen.

# Description: 
HorizontalScrollArrangement__HeightPropertyDescriptions=Specifies the vertical height of the HorizontalScrollArrangement, measured in pixels.

# Description: 
HorizontalScrollArrangement__ImagePropertyDescriptions=Returns the path of the background image of the `HorizontalScrollArrangement`.

# Description: 
HorizontalScrollArrangement__VisiblePropertyDescriptions=Specifies whether the HorizontalScrollArrangement should be visible on the screen. Value is true if the HorizontalScrollArrangement is showing and false if hidden.

# Description: 
HorizontalScrollArrangement__WidthPercentPropertyDescriptions=Specifies the horizontal width of the HorizontalScrollArrangement as a percentage of the width of the Screen.

# Description: 
HorizontalScrollArrangement__WidthPropertyDescriptions=Specifies the horizontal width of the HorizontalScrollArrangement, measured in pixels.

# Description: 
HourMethodDescriptions=Returns the hour of the day (0-23) from the instant.

# Description: 
HourMethods=Hour

# Description: 
HourProperties=Hour

# Description: 
HourPropertyDescriptions=The hour of the last time set using the time picker. The hour is in a 24 hour format. If the last time set was 11\:53 pm, this property will return 23.

# Description: 
HtmlTextDecodeMethodDescriptions=Decodes the given HTML text value. HTML character entities such as &amp;amp;, &amp;lt;, &amp;gt;, &amp;apos;, and &amp;quot; are changed to &amp;, &lt;, &gt;, &\#39;, and &quot;. Entities such as &amp;\#xhhhh, and &amp;\#nnnn are changed to the appropriate characters.

# Description: 
HtmlTextDecodeMethods=HtmlTextDecode

# Description: 
HumidityChangedEventDescriptions=Called when a change is detected in the ambient air humidity (expressed as a percentage).

# Description: 
HumidityChangedEvents=HumidityChanged

# Description: 
HumidityProperties=Humidity

# Description: 
HumidityPropertyDescriptions=The relative ambient humidity as a percentage, if the sensor is available and enabled.

# Description: 
HygrometerHelpStringComponentPallette=A sensor component that can measure the relative ambient air humidity. Most Android devices do not have this sensor.

# Description: 
Hygrometer__AvailablePropertyDescriptions=Specifies whether or not the device has the hardware to support the Hygrometer component.

# Description: 
Hygrometer__EnabledPropertyDescriptions=If enabled, then device will listen for changes.

# Description: 
IconProperties=Icon

# Description: 
IconPropertyDescriptions=The image used for your App''s display icon should be a square png or jpeg image with dimensions up to 1024x1024 pixels. Larger images may cause compiling or installing the app to fail. The build server will generate images of standard dimensions for Android devices.

# Description: 
IgnoreSslErrorsProperties=IgnoreSslErrors

# Description: 
IgnoreSslErrorsPropertyDescriptions=Determine whether or not to ignore SSL errors. Set to true to ignore errors. Use this to accept self signed certificates from websites.

# Description: 
ImageAssetProperties=ImageAsset

# Description: 
ImageAssetPropertyDescriptions=Specifies the image shown for the `Marker`. If set to the empty string "", then the default marker icon will be used.

# Description: 
ImageHeightProperties=ImageHeight

# Description: 
ImageHeightPropertyDescriptions=The image height of the listview image stringItems.

# Description: 
ImageHelpStringComponentPallette=Component for displaying images. The picture to display, and other aspects of the Image''s appearance, can be specified in the Designer or in the Blocks Editor.

# Description: 
ImagePickerHelpStringComponentPallette=A special-purpose button. When the user taps an image picker, the device''s image gallery appears, and the user can choose an image. After an image is picked, it is saved, and the <code>Selected</code> property will be the name of the file where the image is stored. In order to not fill up storage, a maximum of 10 images will be stored. Picking more images will delete previous images, in order from oldest to newest.

# Description: 
ImagePicker__AfterPickingEventDescriptions=Event to be raised after the `ImagePicker` activity returns its result and the properties have been filled in.

# Description: 
ImagePicker__BackgroundColorPropertyDescriptions=Returns the button''s background color

# Description: 
ImagePicker__BeforePickingEventDescriptions=Event to raise when the `ImagePicker` is clicked or the picker is shown using the

# Description: 
ImagePicker__EnabledPropertyDescriptions=If set, user can tap ImagePicker to cause action.

# Description: 
ImagePicker__FontBoldPropertyDescriptions=If set, ImagePicker text is displayed in bold.

# Description: 
ImagePicker__FontItalicPropertyDescriptions=If set, ImagePicker text is displayed in italics.

# Description: 
ImagePicker__FontSizePropertyDescriptions=Point size for ImagePicker text.

# Description: 
ImagePicker__FontTypefacePropertyDescriptions=Font family for ImagePicker text.

# Description: 
ImagePicker__GotFocusEventDescriptions=Indicates the cursor moved over the ImagePicker so it is now possible to click it.

# Description: 
ImagePicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the ImagePicker as a percentage of the height of the Screen.

# Description: 
ImagePicker__HeightPropertyDescriptions=Specifies the vertical height of the ImagePicker, measured in pixels.

# Description: 
ImagePicker__ImagePropertyDescriptions=Image to display on button.

# Description: 
ImagePicker__LostFocusEventDescriptions=Indicates the cursor moved away from the ImagePicker so it is now no longer possible to click it.

# Description: 
ImagePicker__OpenMethodDescriptions=Opens the ImagePicker, as though the user clicked on it.

# Description: 
ImagePicker__SelectionPropertyDescriptions=Path to the file containing the image that was selected.

# Description: 
ImagePicker__ShapePropertyDescriptions=Returns the style of the `ImagePicker`.

# Description: 
ImagePicker__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a ImagePicker that has an image as background.

# Description: 
ImagePicker__TextAlignmentPropertyDescriptions=Left, center, or right.

# Description: 
ImagePicker__TextColorPropertyDescriptions=Color for button text.

# Description: 
ImagePicker__TextPropertyDescriptions=Text to display on ImagePicker.

# Description: 
ImagePicker__TouchDownEventDescriptions=Indicates that the ImagePicker was pressed down.

# Description: 
ImagePicker__TouchUpEventDescriptions=Indicates that the ImagePicker has been released.

# Description: 
ImagePicker__VisiblePropertyDescriptions=Specifies whether the ImagePicker should be visible on the screen. Value is true if the ImagePicker is showing and false if hidden.

# Description: 
ImagePicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the ImagePicker as a percentage of the width of the Screen.

# Description: 
ImagePicker__WidthPropertyDescriptions=Specifies the horizontal width of the ImagePicker, measured in pixels.

# Description: 
ImageProperties=Image

# Description: 
ImageSpriteHelpStringComponentPallette=<p>A ''sprite'' that can be placed on a <code>Canvas</code>, where it can react to touches and drags, interact with other sprites (<code>Ball</code>s and other <code>ImageSprite</code>s) and the edge of the Canvas, and move according to its property values. Its appearance is that of the image specified in its <code>Picture</code> property (unless its <code>Visible</code> property is <code>False</code>).</p> <p>To have an <code>ImageSprite</code> move 10 pixels to the left every 1000 milliseconds (one second), for example, you would set the <code>Speed</code> property to 10 [pixels], the <code>Interval</code> property to 1000 [milliseconds], the <code>Heading</code> property to 180 [degrees], and the <code>Enabled</code> property to <code>True</code>. A sprite whose <code>Rotates</code> property is <code>True</code> will rotate its image as the sprite''s <code>Heading</code> changes. Checking for collisions with a rotated sprite currently checks the sprite''s unrotated position so that collision checking will be inaccurate for tall narrow or short wide sprites that are rotated. Any of the sprite properties can be changed at any time under program control.</p>

# Description: 
ImageSprite__BounceMethodDescriptions=Makes the ImageSprite bounce, as if off a wall. For normal bouncing, the edge argument should be the one returned by EdgeReached.

# Description: 
ImageSprite__CollidingWithMethodDescriptions=Indicates whether a collision has been registered between this ImageSprite and the passed sprite (Ball or ImageSprite).

# Description: 
ImageSprite__DraggedEventDescriptions=Event handler called when a ImageSprite is dragged. On all calls, the starting coordinates are where the screen was first touched, and the "current" coordinates describe the endpoint of the current line segment. On the first call within a given drag, the "previous" coordinates are the same as the starting coordinates; subsequently, they are the "current" coordinates from the prior call. Note that the ImageSprite won''t actually move anywhere in response to the Dragged event unless MoveTo is explicitly called. For smooth movement, each of its coordinates should be set to the sum of its initial value and the difference between its current and previous values.

# Description: 
ImageSprite__EdgeReachedEventDescriptions=Event handler called when the ImageSprite reaches an edge of the screen. If Bounce is then called with that edge, the ImageSprite will appear to bounce off of the edge it reached. Edge here is represented as an integer that indicates one of eight directions north (1), northeast (2), east (3), southeast (4), south (-1), southwest (-2), west (-3), and northwest (-4).

# Description: 
ImageSprite__EnabledPropertyDescriptions=Controls whether the ImageSprite moves and can be interacted with through collisions, dragging, touching, and flinging.

# Description: 
ImageSprite__FlungEventDescriptions=Event handler called when a fling gesture (quick swipe) is made on an enabled ImageSprite. This provides the x and y coordinates of the start of the fling (relative to the upper left of the canvas), the speed (pixels per millisecond), the heading (0-360 degrees), and the x and y velocity components of the fling''s vector.

# Description: 
ImageSprite__HeadingPropertyDescriptions=Returns the ImageSprite''s heading in degrees above the positive x-axis. Zero degrees is toward the right of the screen; 90 degrees is toward the top of the screen.

# Description: 
ImageSprite__HeightPropertyDescriptions=The height of the ImageSprite in pixels.

# Description: 
ImageSprite__IntervalPropertyDescriptions=The interval in milliseconds at which the ImageSprite''s position is updated. For example, if the interval is 50 and the speed is 10, then every 50 milliseconds the sprite will move 10 pixels in the heading direction.

# Description: 
ImageSprite__MoveIntoBoundsMethodDescriptions=Moves the ImageSprite back in bounds if part of it extends out of bounds, having no effect otherwise. If the ImageSprite is too wide to fit on the canvas, this aligns the left side of the ImageSprite with the left side of the canvas. If the ImageSprite is too tall to fit on the canvas, this aligns the top side of the ImageSprite with the top side of the canvas.

# Description: 
ImageSprite__MoveToMethodDescriptions=Moves the ImageSprite so that its left top corner is at the specified x and y coordinates.

# Description: 
ImageSprite__MoveToPointMethodDescriptions=Moves the origin of ImageSprite to the position of the cooordinates given by the list formatted as [x-coordinate, y-coordinate].

# Description: 
ImageSprite__PicturePropertyDescriptions=The picture that determines the ImageSprite''s appearance.

# Description: 
ImageSprite__PointInDirectionMethodDescriptions=Sets the heading of the ImageSprite toward the point with the coordinates (x, y).

# Description: 
ImageSprite__PointTowardsMethodDescriptions=Turns the ImageSprite to point towards a designated target sprite (Ball or ImageSprite). The new heading will be parallel to the line joining the centerpoints of the two sprites.

# Description: 
ImageSprite__SpeedPropertyDescriptions=The number of pixels that the ImageSprite should move every interval, if enabled.

# Description: 
ImageSprite__TouchDownEventDescriptions=Event handler called when the user begins touching an enabled ImageSprite (placing their finger on a ImageSprite and leaving it there). This provides the x and y coordinates of the touch, relative to the upper left of the canvas.

# Description: 
ImageSprite__TouchUpEventDescriptions=Event handler called when the user stops touching an enabled ImageSprite (lifting their finger after a TouchDown event). This provides the x and y coordinates of the touch, relative to the upper left of the canvas.

# Description: 
ImageSprite__TouchedEventDescriptions=Event handler called when the user touches an enabled ImageSprite and then immediately lifts their finger. The provided x and y coordinates are relative to the upper left of the canvas.

# Description: 
ImageSprite__VisiblePropertyDescriptions=Whether the ImageSprite is visible.

# Description: 
ImageSprite__WidthPropertyDescriptions=The width of the ImageSprite in pixels.

# Description: 
ImageSprite__XPropertyDescriptions=The horizontal coordinate of the left edge of the ImageSprite, increasing as the ImageSprite moves right.

# Description: 
ImageSprite__YPropertyDescriptions=The vertical coordinate of the top edge of the ImageSprite, increasing as the ImageSprite moves down.

# Description: 
ImageSprite__ZPropertyDescriptions=How the `ImageSprite` should be layered relative to other

# Description: 
ImageWidthProperties=ImageWidth

# Description: 
ImageWidthPropertyDescriptions=The image width of the listview image.

# Description: 
Image__ClickEventDescriptions=An event that occurs when an image is clicked.

# Description: 
Image__HeightPercentPropertyDescriptions=Specifies the vertical height of the Image as a percentage of the height of the Screen.

# Description: 
Image__HeightPropertyDescriptions=Specifies the vertical height of the Image, measured in pixels.

# Description: 
Image__PicturePropertyDescriptions=Returns the path of the image''s picture.

# Description: 
Image__VisiblePropertyDescriptions=Specifies whether the Image should be visible on the screen. Value is true if the Image is showing and false if hidden.

# Description: 
Image__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Image as a percentage of the width of the Screen.

# Description: 
Image__WidthPropertyDescriptions=Specifies the horizontal width of the Image, measured in pixels.

# Description: 
IncomingCallAnsweredEventDescriptions=Event indicating that an incoming phone call is answered. phoneNumber is the incoming call phone number.

# Description: 
IncomingCallAnsweredEvents=IncomingCallAnswered

# Description: 
InfoEventDescriptions=Indicates that something has occurred which the player should know about.

# Description: 
InfoEvents=Info

# Description: 
InitializeEventDescriptions=The Initialize event is run when the Screen starts and is only run once per screen.

# Description: 
InitializeEvents=Initialize

# Description: 
InitializeSerialMethodDescriptions=Initializes serial connection.

# Description: 
InitializeSerialMethods=InitializeSerial

# Description: 
InsertRowMethodDescriptions=Inserts a row into the specified fusion table. The tableId field is the id of thefusion table. The columns is a comma-separated list of the columns to insert values into. The values field specifies what values to insert into each column.

# Description: 
InsertRowMethods=InsertRow

# Description: 
InstallationIdMethodDescriptions=Return the ACRA Installation ID

# Description: 
InstallationIdMethods=InstallationId

# Description: 
InstanceIdChangedEventDescriptions=Indicates that the InstanceId property has changed as a result of calling MakeNewInstance or SetInstance.

# Description: 
InstanceIdChangedEvents=InstanceIdChanged

# Description: 
InstanceIdProperties=InstanceId

# Description: 
InstanceIdPropertyDescriptions=The game instance id. Taken together,the game ID and the instance ID uniquely identify the game.

# Description: 
InstantInTimeParams=InstantInTime

# Description: 
InstantMethods=Instant

# Description: 
InstantProperties=Instant

# Description: 
IntervalProperties=Interval

# Description: 
InvalidPointEventDescriptions=An invalid coordinate was supplied during a maps operation. The message parameter will have more details about the issue.

# Description: 
InvalidPointEvents=InvalidPoint

# Description: 
InviteMethodDescriptions=Invites a player to this game instance.

# Description: 
InviteMethods=Invite

# Description: 
InvitedEventDescriptions=Indicates that a user has been invited to this game instance.

# Description: 
InvitedEvents=Invited

# Description: 
InvitedInstancesProperties=InvitedInstances

# Description: 
InvitedInstancesPropertyDescriptions=The set of game instances to which this player has been invited but has not yet joined. To ensure current values are returned, first invoke GetInstanceLists.

# Description: 
IsAcceptingProperties=IsAccepting

# Description: 
IsAcceptingPropertyDescriptions=Returns true if this BluetoothServer component is accepting an incoming connection.

# Description: 
IsAuthorizedEventDescriptions=This event is raised after the program calls <code>Authorize</code> if the authorization was successful. It is also called after a call to <code>CheckAuthorized</code> if we already have a valid access token. After this event has been raised, any other method for this component can be called.

# Description: 
IsAuthorizedEvents=IsAuthorized

# Description: 
IsConnectedProperties=IsConnected

# Description: 
IsConnectedPropertyDescriptions=On devices with API level 14 (LEVEL_ICE_CREAM_SANDWICH) or higher, this property returned is accurate. But on old devices with API level lower than 14, it may not return the current state of connection(e.g., it might be disconnected but you may not know until you attempt to read/write the socket.

# Description: 
IsDevicePairedMethodDescriptions=Checks whether the Bluetooth device with the specified address is paired.

# Description: 
IsDevicePairedMethods=IsDevicePaired

# Description: 
IsDirectoryMethodDescriptions=Tests whether the path named in the given scope is a directory.

# Description: 
IsDirectoryMethods=IsDirectory

# Description: 
IsInitializedProperties=IsInitialized

# Description: 
IsInitializedPropertyDescriptions=Returns true when the Serial has been initialized.

# Description: 
IsOpenProperties=IsOpen

# Description: 
IsOpenPropertyDescriptions=Returns true when the Serial connection is open.

# Description: 
IsPlayingProperties=IsPlaying

# Description: 
IsPlayingPropertyDescriptions=Reports whether the media is playing

# Description: 
IsPressedMethodDescriptions=Returns true if the touch sensor is pressed.

# Description: 
IsPressedMethods=IsPressed

# Description: 
ItemBackgroundColorProperties=ItemBackgroundColor

# Description: 
ItemBackgroundColorPropertyDescriptions=The background color of the ListPicker items.

# Description: 
ItemTextColorProperties=ItemTextColor

# Description: 
ItemTextColorPropertyDescriptions=The text color of the ListPicker items.

# Description: 
JoinedInstancesProperties=JoinedInstances

# Description: 
JoinedInstancesPropertyDescriptions=The set of game instances in which this player is participating. To ensure current values are returned, first invoke GetInstanceLists.

# Description: 
JsonObjectEncodeMethodDescriptions=Returns the value of a built-in type (i.e., boolean, number, text, list, dictionary) in its JavaScript Object Notation representation. If the value cannot be represented as JSON, the Screen''s ErrorOccurred event will be run, if any, and the Web component will return the empty string.

# Description: 
JsonObjectEncodeMethods=JsonObjectEncode

# Description: 
JsonTextDecodeMethodDescriptions=Decodes the given JSON encoded value to produce a corresponding AppInventor value. A JSON list `[x, y, z]` decodes to a list `(x y z)`, A JSON object with key A and value B, (denoted as `

# Description: 
JsonTextDecodeMethods=JsonTextDecode

# Description: 
JsonTextDecodeWithDictionariesMethodDescriptions=Decodes the given JSON encoded value to produce a corresponding App Inventor value. A JSON list [x, y, z] decodes to a list (x y z). A JSON Object with name A and value B, denoted as \\

# Description: 
JsonTextDecodeWithDictionariesMethods=JsonTextDecodeWithDictionaries

# Description: 
KeepAliveMethods=KeepAlive

# Description: 
KeepRunningWhenOnPauseProperties=KeepRunningWhenOnPause

# Description: 
KeepRunningWhenOnPausePropertyDescriptions=Returns value of keepRunningWhenOnPause

# Description: 
KeyFileProperties=KeyFile

# Description: 
KeyFilePropertyDescriptions=Specifies the path of the private key file. This key file is used to get access to the FusionTables API.

# Description: 
LabelHelpStringComponentPallette=A Label displays a piece of text, which is specified through the <code>Text</code> property. Other properties, all of which can be set in the Designer or Blocks Editor, control the appearance and placement of the text.

# Description: 
Label__BackgroundColorPropertyDescriptions=Returns the label''s background color as an alpha-red-green-blue integer.

# Description: 
Label__FontBoldPropertyDescriptions=Returns true if the label''s text should be bold. If bold has been requested, this property will return true, even if the font does not support bold.

# Description: 
Label__FontItalicPropertyDescriptions=Returns true if the label''s text should be italic. If italic has been requested, this property will return true, even if the font does not support italic.

# Description: 
Label__FontSizePropertyDescriptions=Returns the label''s text''s font size, measured in sp(scale-independent pixels).

# Description: 
Label__FontTypefacePropertyDescriptions=Returns the label''s text''s font face as default, serif, sans serif, or monospace.

# Description: 
Label__HeightPercentPropertyDescriptions=Specifies the vertical height of the Label as a percentage of the height of the Screen.

# Description: 
Label__HeightPropertyDescriptions=Specifies the vertical height of the Label, measured in pixels.

# Description: 
Label__TextAlignmentPropertyDescriptions=Returns the alignment of the label''s text\: center, normal (e.g., left-justified if text is written left to right), or opposite (e.g., right-justified if text is written left to right).

# Description: 
Label__TextColorPropertyDescriptions=Returns the label''s text color as an alpha-red-green-blue integer.

# Description: 
Label__TextPropertyDescriptions=Returns the text displayed by the label.

# Description: 
Label__VisiblePropertyDescriptions=Specifies whether the Label should be visible on the screen. Value is true if the Label is showing and false if hidden.

# Description: 
Label__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Label as a percentage of the width of the Screen.

# Description: 
Label__WidthPropertyDescriptions=Specifies the horizontal width of the Label, measured in pixels.

# Description: 
LanguageProperties=Language

# Description: 
LastMessageProperties=LastMessage

# Description: 
LastMessagePropertyDescriptions=Returns the content of the most recently received tag.

# Description: 
LatitudeFromAddressMethodDescriptions=Derives latitude of given address

# Description: 
LatitudeFromAddressMethods=LatitudeFromAddress

# Description: 
LatitudeProperties=Latitude

# Description: 
LaunchPickerMethods=LaunchPicker

# Description: 
LeaderProperties=Leader

# Description: 
LeaderPropertyDescriptions=The game''s leader. At any time, each game instance has only one leader, but the leader may change with time. Initially, the leader is the game instance creator. Application writers determine special properties of the leader. The leader value is updated each time a successful communication is made with the server.

# Description: 
LeaveInstanceMethodDescriptions=Leaves the current instance.

# Description: 
LeaveInstanceMethods=LeaveInstance

# Description: 
LegacyModeProperties=LegacyMode

# Description: 
LightChangedEventDescriptions=Called when a change is detected in the light level.

# Description: 
LightChangedEvents=LightChanged

# Description: 
LightSensorHelpStringComponentPallette=A sensor component that can measure the light level.

# Description: 
LightSensor__AvailablePropertyDescriptions=Specifies whether or not the device has the hardware to support the LightSensor component.

# Description: 
LightSensor__EnabledPropertyDescriptions=If enabled, then device will listen for changes.

# Description: 
LineStringHelpStringComponentPallette=LineString

# Description: 
LineString__ClickEventDescriptions=The user clicked on the LineString.

# Description: 
LineString__DescriptionPropertyDescriptions=The description displayed in the info window that appears when the user clicks on the LineString.

# Description: 
LineString__DistanceToPointMethodDescriptions=Compute the distance, in meters, between a LineString and a latitude, longitude point.

# Description: 
LineString__DragEventDescriptions=The user dragged the LineString.

# Description: 
LineString__DraggablePropertyDescriptions=The Draggable property is used to set whether or not the user can drag the LineString by long-pressing and then dragging the LineString to a new location.

# Description: 
LineString__EnableInfoboxPropertyDescriptions=Enable or disable the infobox window display when the user taps the LineString.

# Description: 
LineString__LongClickEventDescriptions=The user long-pressed on the LineString. This event will only trigger if Draggable is false.

# Description: 
LineString__PointsFromStringPropertyDescriptions=Set the points of the LineString from a specially-coded character string of the form\: [[latitude1, longitude1], [latitude2, longitude2], ...]

# Description: 
LineString__PointsPropertyDescriptions=The list of points, as pairs of latitudes and longitudes, in the `LineString`.

# Description: 
LineString__ShowInfoboxMethodDescriptions=Show the infobox for the LineString. This will show the infobox even if EnableInfobox is set to false.

# Description: 
LineString__StrokeColorPropertyDescriptions=The paint color used to outline the LineString.

# Description: 
LineString__StrokeWidthPropertyDescriptions=Sets or gets the width of the stroke used to outline the `LineString`.

# Description: 
LineString__TitlePropertyDescriptions=The title displayed in the info window that appears when the user clicks on the LineString.

# Description: 
LineString__TypePropertyDescriptions=Returns the type of the map feature. For LineString, this returns MapFeature.LineString ("LineString").

# Description: 
LineString__VisiblePropertyDescriptions=Specifies whether the LineString should be visible on the screen. Value is true if the component is showing and false if hidden.

# Description: 
LineWidthProperties=LineWidth

# Description: 
LineWidthPropertyDescriptions=The width of lines drawn on the canvas.

# Description: 
ListDataProperties=ListData

# Description: 
ListDataPropertyDescriptions=Returns the data to be displayed in the ListView as a JsonString. Designer only property.

# Description: 
ListDirectoryMethodDescriptions=Get a list of files and directories in the given directory.

# Description: 
ListDirectoryMethods=ListDirectory

# Description: 
ListFilesMethodDescriptions=Returns a list containing the names of matching files found on the robot.

# Description: 
ListFilesMethods=ListFiles

# Description: 
ListPickerHelpStringComponentPallette=<p>A button that, when clicked on, displays a list of texts for the user to choose among. The texts can be specified through the Designer or Blocks Editor by setting the <code>ElementsFromString</code> property to their string-separated concatenation (for example, <em>choice 1, choice 2, choice 3</em>) or by setting the <code>Elements</code> property to a List in the Blocks editor.</p><p>Setting property ShowFilterBar to true, will make the list searchable. Other properties affect the appearance of the button (<code>TextAlignment</code>, <code>BackgroundColor</code>, etc.) and whether it can be clicked on (<code>Enabled</code>).</p>

# Description: 
ListPicker__AfterPickingEventDescriptions=Event to be raised after the `ListPicker` activity returns its result and the properties have been filled in.

# Description: 
ListPicker__BackgroundColorPropertyDescriptions=Returns the button''s background color

# Description: 
ListPicker__BeforePickingEventDescriptions=Event to raise when the `ListPicker` is clicked or the picker is shown using the

# Description: 
ListPicker__ElementsFromStringPropertyDescriptions=Set the list of choices from a string of comma-separated values.

# Description: 
ListPicker__ElementsPropertyDescriptions=Specifies the list of choices to display.

# Description: 
ListPicker__EnabledPropertyDescriptions=If set, user can tap ListPicker to cause action.

# Description: 
ListPicker__FontBoldPropertyDescriptions=If set, ListPicker text is displayed in bold.

# Description: 
ListPicker__FontItalicPropertyDescriptions=If set, ListPicker text is displayed in italics.

# Description: 
ListPicker__FontSizePropertyDescriptions=Point size for ListPicker text.

# Description: 
ListPicker__FontTypefacePropertyDescriptions=Font family for ListPicker text.

# Description: 
ListPicker__GotFocusEventDescriptions=Indicates the cursor moved over the ListPicker so it is now possible to click it.

# Description: 
ListPicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the ListPicker as a percentage of the height of the Screen.

# Description: 
ListPicker__HeightPropertyDescriptions=Specifies the vertical height of the ListPicker, measured in pixels.

# Description: 
ListPicker__ImagePropertyDescriptions=Image to display on button.

# Description: 
ListPicker__LostFocusEventDescriptions=Indicates the cursor moved away from the ListPicker so it is now no longer possible to click it.

# Description: 
ListPicker__OpenMethodDescriptions=Opens the ListPicker, as though the user clicked on it.

# Description: 
ListPicker__SelectionIndexPropertyDescriptions=The index of the currently selected item, starting at 1. If no item is selected, the value will be 0. If an attempt is made to set this to a number less than 1 or greater than the number of items in the ListPicker, SelectionIndex will be set to 0, and Selection will be set to the empty text.

# Description: 
ListPicker__SelectionPropertyDescriptions=The selected item. When directly changed by the programmer, the SelectionIndex property is also changed to the first item in the ListPicker with the given value. If the value does not appear, SelectionIndex will be set to 0.

# Description: 
ListPicker__ShapePropertyDescriptions=Returns the style of the `ListPicker`.

# Description: 
ListPicker__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a ListPicker that has an image as background.

# Description: 
ListPicker__ShowFilterBarPropertyDescriptions=Returns current state of ShowFilterBar indicating if Search Filter Bar will be displayed on ListPicker or not

# Description: 
ListPicker__TextAlignmentPropertyDescriptions=Left, center, or right.

# Description: 
ListPicker__TextColorPropertyDescriptions=Color for button text.

# Description: 
ListPicker__TextPropertyDescriptions=Text to display on ListPicker.

# Description: 
ListPicker__TitlePropertyDescriptions=Optional title displayed at the top of the list of choices.

# Description: 
ListPicker__TouchDownEventDescriptions=Indicates that the ListPicker was pressed down.

# Description: 
ListPicker__TouchUpEventDescriptions=Indicates that the ListPicker has been released.

# Description: 
ListPicker__VisiblePropertyDescriptions=Specifies whether the ListPicker should be visible on the screen. Value is true if the ListPicker is showing and false if hidden.

# Description: 
ListPicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the ListPicker as a percentage of the width of the Screen.

# Description: 
ListPicker__WidthPropertyDescriptions=Specifies the horizontal width of the ListPicker, measured in pixels.

# Description: 
ListViewHelpStringComponentPallette=<p>This is a visible component that displays a list of text and image elements.</p> <p>Simple lists of strings may be set using the ElementsFromString property. More complex lists of elements containing multiple strings and/or images can be created using the ListData and ListViewLayout properties. </p>

# Description: 
ListViewLayoutProperties=ListViewLayout

# Description: 
ListViewLayoutPropertyDescriptions=Returns type of layout selected to display. Designer only property.

# Description: 
ListView__AfterPickingEventDescriptions=Simple event to be raised after the an element has been chosen in the list. The selected element is available in the Selection property.

# Description: 
ListView__BackgroundColorPropertyDescriptions=The color of the listview background.

# Description: 
ListView__ElementsFromStringPropertyDescriptions=The TextView elements specified as a string with the stringItems separated by commas such as\: Cheese,Fruit,Bacon,Radish. Each word before the comma will be an element in the list.

# Description: 
ListView__ElementsPropertyDescriptions=List of elements to show in the ListView. Depending on the ListView, this may be a list of strings or a list of 3-element sub-lists containing Text, Description, and Image file name.

# Description: 
ListView__FontSizePropertyDescriptions=The text size of the listview stringItems.

# Description: 
ListView__FontTypefacePropertyDescriptions=Returns the label''s text''s font face as default, serif, sans serif, or monospace.

# Description: 
ListView__HeightPercentPropertyDescriptions=Specifies the vertical height of the ListView as a percentage of the height of the Screen.

# Description: 
ListView__HeightPropertyDescriptions=Determines the height of the list on the view.

# Description: 
ListView__SelectionIndexPropertyDescriptions=The index of the currently selected item, starting at 1. If no item is selected, the value will be 0. If an attempt is made to set this to a number less than 1 or greater than the number of stringItems in the ListView, SelectionIndex will be set to 0, and Selection will be set to the empty text.

# Description: 
ListView__SelectionPropertyDescriptions=Returns the text last selected in the ListView.

# Description: 
ListView__ShowFilterBarPropertyDescriptions=Sets visibility of ShowFilterBar. True will show the bar, False will hide it.

# Description: 
ListView__TextColorPropertyDescriptions=The text color of the listview stringItems.

# Description: 
ListView__VisiblePropertyDescriptions=Specifies whether the ListView should be visible on the screen. Value is true if the ListView is showing and false if hidden.

# Description: 
ListView__WidthPercentPropertyDescriptions=Specifies the horizontal width of the ListView as a percentage of the width of the Screen.

# Description: 
ListView__WidthPropertyDescriptions=Determines the width of the list on the view.

# Description: 
LoadErrorEventDescriptions=An error was encountered while processing a GeoJSON document at the given url. The responseCode parameter will contain an HTTP status code and the errorMessage parameter will contain a detailed error message.

# Description: 
LoadErrorEvents=LoadError

# Description: 
LoadFromURLMethodDescriptions=<p>Load a feature collection in <a href\="https\://en.wikipedia.org/wiki/GeoJSON">GeoJSON</a> format from the given url. On success, the event GotFeatures will be raised with the given url and a list of the features parsed from the GeoJSON as a list of (key, value) pairs. On failure, the LoadError event will be raised with any applicable HTTP response code and error message.</p>

# Description: 
LoadFromURLMethods=LoadFromURL

# Description: 
LoadingDialogMessageProperties=LoadingDialogMessage

# Description: 
LoadingDialogMessagePropertyDescriptions=Setter for the loading dialog''s message.

# Description: 
LocationChangedEventDescriptions=Indicates that a new location has been detected.

# Description: 
LocationChangedEvents=LocationChanged

# Description: 
LocationSensorHelpStringComponentPallette=Non-visible component providing location information, including longitude, latitude, altitude (if supported by the device), speed (if supported by the device), and address. This can also perform "geocoding", converting a given address (not necessarily the current one) to a latitude (with the <code>LatitudeFromAddress</code> method) and a longitude (with the <code>LongitudeFromAddress</code> method).</p><p>In order to function, the component must have its <code>Enabled</code> property set to True, and the device must have location sensing enabled through wireless networks or GPS satellites (if outdoors).</p>Location information might not be immediately available when an app starts. You''ll have to wait a short time for a location provider to be found and used, or wait for the LocationChanged event

# Description: 
LocationSensorProperties=LocationSensor

# Description: 
LocationSensorPropertyDescriptions=Uses the provided LocationSensor for user location data rather than the built-in location provider.

# Description: 
LocationSensor__EnabledPropertyDescriptions=Indicates whether the user has specified that the sensor should listen for location changes and raise the corresponding events.

# Description: 
LocationSensor__LatitudePropertyDescriptions=The most recently available latitude value in degrees reported to 5 decimal places. If no value is available, 0 will be returned. Latitude is a value between 90 (north) and -90 (south), where 0 marks the Equator.

# Description: 
LocationSensor__LongitudePropertyDescriptions=The most recent available longitude value in degrees reported to 5 decimal places. If no value is available, 0 will be returned. Longitude is a value between 180 (east) and -180 (west), where 0 marks the Prime Meridian.

# Description: 
LogErrorMethodDescriptions=Writes an error message to the Android system log. See the Google Android documentation for how to access the log.

# Description: 
LogErrorMethods=LogError

# Description: 
LogInfoMethodDescriptions=Writes an information message to the Android log.

# Description: 
LogInfoMethods=LogInfo

# Description: 
LogWarningMethodDescriptions=Writes a warning message to the Android log. See the Google Android documentation for how to access the log.

# Description: 
LogWarningMethods=LogWarning

# Description: 
LoginMethodDescriptions=Twitter''s API no longer supports login via username and password. Use the Authorize call instead.

# Description: 
LongClickEvents=LongClick

# Description: 
LongPressAtPointEventDescriptions=The user long-pressed at a point on the map.

# Description: 
LongPressAtPointEvents=LongPressAtPoint

# Description: 
LongitudeFromAddressMethodDescriptions=Derives longitude of given address

# Description: 
LongitudeFromAddressMethods=LongitudeFromAddress

# Description: 
LongitudeProperties=Longitude

# Description: 
LoopProperties=Loop

# Description: 
LoopPropertyDescriptions=If true, the player will loop when it plays. Setting Loop while the player is playing will affect the current playing.

# Description: 
LostFocusEvents=LostFocus

# Description: 
LsGetStatusMethodDescriptions=Returns the count of available bytes to read.

# Description: 
LsGetStatusMethods=LsGetStatus

# Description: 
LsReadMethodDescriptions=Reads unsigned low speed data from an input sensor on the robot. Assumes sensor type has been configured via SetInputMode.

# Description: 
LsReadMethods=LsRead

# Description: 
LsWriteMethodDescriptions=Writes low speed data to an input sensor on the robot. Assumes sensor type has been configured via SetInputMode.

# Description: 
LsWriteMethods=LsWrite

# Description: 
LuxProperties=Lux

# Description: 
LuxPropertyDescriptions=The most recent light level, in lux, if the sensor is available and enabled.

# Description: 
MagneticChangedEventDescriptions=Triggers when magnetic field has changed, setting the new values in parameters.

# Description: 
MagneticChangedEvents=MagneticChanged

# Description: 
MagneticFieldSensorHelpStringComponentPallette=<p>Non-visible component that measures the ambient geomagnetic field for all three physical axes (x, y, z) in Tesla https\://en.wikipedia.org/wiki/Tesla_(unit).</p>

# Description: 
MagneticFieldSensor__AvailablePropertyDescriptions=Indicates that there is a magnetic field sensor in the device and it is available.

# Description: 
MagneticFieldSensor__EnabledPropertyDescriptions=Indicates whether or not the magnetic field sensor is enabled and working.

# Description: 
MagneticFieldSensor__MaximumRangePropertyDescriptions=Indicates the maximum range the magnetic sensor can reach.

# Description: 
MagnitudeProperties=Magnitude

# Description: 
MagnitudePropertyDescriptions=Returns a number between 0 and 1 indicating how much the device is tilted. It gives the magnitude of the force that would be felt by a ball rolling on the surface of the device. For the angle of tilt, use

# Description: 
MakeDateMethodDescriptions=Returns an instant in time specified by year, month, date in UTC.Valid values for the month field are 1-12 and 1-31 for the day field.

# Description: 
MakeDateMethods=MakeDate

# Description: 
MakeDirectoryMethodDescriptions=Create a new directory for storing files. The semantics of this method are such that it will return true if the directory exists at its completion. This can mean that the directory already existed prior to the call.

# Description: 
MakeDirectoryMethods=MakeDirectory

# Description: 
MakeFullPathMethodDescriptions=Converts the scope and path into a single string for other components.

# Description: 
MakeFullPathMethods=MakeFullPath

# Description: 
MakeInstantFromMillisMethodDescriptions=Returns an instant in time specified by the milliseconds since 1970 in UTC.

# Description: 
MakeInstantFromMillisMethods=MakeInstantFromMillis

# Description: 
MakeInstantFromPartsMethodDescriptions=Returns an instant in time specified by year, month, date, hour, minute, second in UTC.

# Description: 
MakeInstantFromPartsMethods=MakeInstantFromParts

# Description: 
MakeInstantMethodDescriptions=Returns an instant in time specified by MM/dd/YYYY hh\:mm\:ss or MM/dd/YYYY or hh\:mm.

# Description: 
MakeInstantMethods=MakeInstant

# Description: 
MakeNewInstanceMethodDescriptions=Asks the server to create a new instance of this game.

# Description: 
MakeNewInstanceMethods=MakeNewInstance

# Description: 
MakePhoneCallDirectMethodDescriptions=Directly initiates a phone call using the number in the PhoneNumber property.

# Description: 
MakePhoneCallDirectMethods=MakePhoneCallDirect

# Description: 
MakePhoneCallMethodDescriptions=Launches the default dialer app set to start a phone call usingthe number in the PhoneNumber property.

# Description: 
MakePhoneCallMethods=MakePhoneCall

# Description: 
MakeTimeMethodDescriptions=Returns an instant in time specified by hour, minute, second in UTC.

# Description: 
MakeTimeMethods=MakeTime

# Description: 
MapHelpStringComponentPallette=<p>A two-dimensional container that renders map tiles in the background and allows for multiple Marker elements to identify points on the map. Map tiles are supplied by OpenStreetMap contributors and the United States Geological Survey.</p><p>The Map component provides three utilities for manipulating its boundaries within App Inventor. First, a locking mechanism is provided to allow the map to be moved relative to other components on the Screen. Second, when unlocked, the user can pan the Map to any location. At this new location, the &quot;Set Initial Boundary&quot; button can be pressed to save the current Map coordinates to its properties. Lastly, if the Map is moved to a different location, for example to add Markers off-screen, then the &quot;Reset Map to Initial Bounds&quot; button can be used to re-center the Map at the starting location.</p>

# Description: 
MapTypeProperties=MapType

# Description: 
MapTypePropertyDescriptions=Set the type of map tile used for the base tile layer. Valid values are\: 1. Roads 2. Aerial 3. Terrain

# Description: 
Map__FeaturesPropertyDescriptions=The list of features placed on this Map. This list also includes any features created by calls to FeatureFromDescription

# Description: 
Map__HeightPercentPropertyDescriptions=Specifies the vertical height of the Map as a percentage of the height of the Screen.

# Description: 
Map__HeightPropertyDescriptions=Specifies the vertical height of the Map, measured in pixels.

# Description: 
Map__LatitudePropertyDescriptions=The latitude of the center of the map.

# Description: 
Map__LongitudePropertyDescriptions=The longitude of the center of the map.

# Description: 
Map__SaveMethodDescriptions=Save the contents of the Map to the specified path.

# Description: 
Map__VisiblePropertyDescriptions=Specifies whether the Map should be visible on the screen. Value is true if the Map is showing and false if hidden.

# Description: 
Map__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Map as a percentage of the width of the Screen.

# Description: 
Map__WidthPropertyDescriptions=Specifies the horizontal width of the Map, measured in pixels.

# Description: 
MarkerHelpStringComponentPallette=<p>An icon positioned at a point to indicate information on a map. Markers can be used to provide an info window, custom fill and stroke colors, and custom images to convey information to the user.</p>

# Description: 
Marker__ClickEventDescriptions=The user clicked on the Marker.

# Description: 
Marker__DescriptionPropertyDescriptions=The description displayed in the info window that appears when the user clicks on the Marker.

# Description: 
Marker__DistanceToPointMethodDescriptions=Compute the distance, in meters, between a Marker and a latitude, longitude point.

# Description: 
Marker__DragEventDescriptions=The user dragged the Marker.

# Description: 
Marker__DraggablePropertyDescriptions=The Draggable property is used to set whether or not the user can drag the Marker by long-pressing and then dragging the Marker to a new location.

# Description: 
Marker__EnableInfoboxPropertyDescriptions=Enable or disable the infobox window display when the user taps the Marker.

# Description: 
Marker__FillColorPropertyDescriptions=The paint color used to fill in the Marker.

# Description: 
Marker__HeightPercentPropertyDescriptions=Specifies the `Marker`''s vertical height as a percentage of the [`Screen`''s `Height`](userinterface.html\#Screen.Height).

# Description: 
Marker__HeightPropertyDescriptions=Specifies the `Marker`''s vertical height, measured in pixels.

# Description: 
Marker__LatitudePropertyDescriptions=Sets or gets the latitude of the `Marker`, in degrees, with positive values representing north of the equator and negative values representing south of the equator. To update the `Latitude` and

# Description: 
Marker__LongClickEventDescriptions=The user long-pressed on the Marker. This event will only trigger if Draggable is false.

# Description: 
Marker__LongitudePropertyDescriptions=Sets or gets the longitude of the `Marker`, in degrees, with positive values representing east of the prime meridian and negative values representing west of the prime meridian. To update the

# Description: 
Marker__SetLocationMethodDescriptions=Set the location of the marker.

# Description: 
Marker__ShowInfoboxMethodDescriptions=Show the infobox for the Marker. This will show the infobox even if EnableInfobox is set to false.

# Description: 
Marker__StrokeColorPropertyDescriptions=The paint color used to outline the Marker.

# Description: 
Marker__StrokeWidthPropertyDescriptions=The width of the stroke used to outline the Marker.

# Description: 
Marker__TitlePropertyDescriptions=The title displayed in the info window that appears when the user clicks on the Marker.

# Description: 
Marker__TypePropertyDescriptions=Returns the type of the feature. For Markers, this returns MapFeature.Marker ("Marker").

# Description: 
Marker__VisiblePropertyDescriptions=Specifies whether the Marker should be visible on the screen. Value is true if the component is showing and false if hidden.

# Description: 
Marker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the `Marker` as a percentage of the [`Screen`''s `Width`](userinterface.html\#Screen.Width).

# Description: 
Marker__WidthPropertyDescriptions=Specifies the horizontal width of the `Marker`, measured in pixels.

# Description: 
MaxValueProperties=MaxValue

# Description: 
MaxValuePropertyDescriptions=Sets the maximum value of slider. Changing the maximum value also resets Thumbposition to be halfway between the minimum and the (new) maximum. If the new maximum is less than the current minimum, then minimum and maximum will both be set to this value. Setting MaxValue resets the thumb position to halfway between MinValue and MaxValue and signals the PositionChanged event.

# Description: 
MaximumRangeMethods=MaximumRangeMethods

# Description: 
MaximumRangeProperties=MaximumRange

# Description: 
MediaStoreHelpStringComponentPallette=Non-visible component that communicates with a Web service and stores media files.

# Description: 
MediaStore__ServiceURLPropertyDescriptions=Returns the URL of the MediaStore web service.

# Description: 
MediaStore__WebServiceErrorEventDescriptions=Indicates that the communication with the Web service signaled an error

# Description: 
MediaStoredEventDescriptions=Indicates that a MediaStored server request has succeeded.

# Description: 
MediaStoredEvents=MediaStored

# Description: 
MentionsProperties=Mentions

# Description: 
MentionsPropertyDescriptions=This property contains a list of mentions of the logged-in user. Initially, the list is empty. To set it, the program must\: <ol> <li> Call the <code>Authorize</code> method.</li> <li> Wait for the <code>IsAuthorized</code> event.</li> <li> Call the <code>RequestMentions</code> method.</li> <li> Wait for the <code>MentionsReceived</code> event.</li></ol>The value of this property will then be set to the list of mentions (and will maintain its value until any subsequent calls to <code>RequestMentions</code>).

# Description: 
MentionsReceivedEventDescriptions=This event is raised when the mentions of the logged-in user requested through <code>RequestMentions</code> have been retrieved. A list of the mentions can then be found in the <code>mentions</code> parameter or the <code>Mentions</code> property.

# Description: 
MentionsReceivedEvents=MentionsReceived

# Description: 
MessageProperties=Message

# Description: 
MessagePropertyDescriptions=The message that will be sent when the SendMessage method is called.

# Description: 
MessageReadMethodDescriptions=Read a message from a mailbox (1-10) on the robot.

# Description: 
MessageReadMethods=MessageRead

# Description: 
MessageReceivedEventDescriptions=Event that''s raised when a text message is received by the phone. **Using this block will add [dangerous permissions](//developer.android.com/guide/topics/permissions/overview\#dangerous_permissions) that will require additional approval if your app is submitted to the Google Play Store.**

# Description: 
MessageReceivedEvents=MessageReceived

# Description: 
MessageWriteMethodDescriptions=Write a message to a mailbox (1-10) on the robot.

# Description: 
MessageWriteMethods=MessageWrite

# Description: 
MinValueProperties=MinValue

# Description: 
MinValuePropertyDescriptions=Sets the minimum value of slider. Changing the minimum value also resets Thumbposition to be halfway between the (new) minimum and the maximum. If the new minimum is greater than the current maximum, then minimum and maximum will both be set to this value. Setting MinValue resets the thumb position to halfway between MinValue and MaxValue and signals the PositionChanged event.

# Description: 
MinimumIntervalProperties=MinimumInterval

# Description: 
MinuteMethodDescriptions=Returns the minute of the hour (0-59) from the instant.

# Description: 
MinuteMethods=Minute

# Description: 
MinuteProperties=Minute

# Description: 
MinutePropertyDescriptions=The minute of the last time set using the time picker

# Description: 
MockSpinnerAddItems=add items...

# Description: 
ModeProperties=Mode

# Description: 
ModePropertyDescriptions=Specifies the mode of the sensor.

# Description: 
MonthInTextProperties=MonthInText

# Description: 
MonthInTextPropertyDescriptions=Returns the name of the Month that was last picked using the DatePicker, in textual format.

# Description: 
MonthMethodDescriptions=Returns the month of the year represented as a number from 1 to 12).

# Description: 
MonthMethods=Month

# Description: 
MonthNameMethodDescriptions=Returns the name of the month from the instant, e.g., January, February, March...

# Description: 
MonthNameMethods=MonthName

# Description: 
MonthProperties=Month

# Description: 
MonthPropertyDescriptions=the number of the Month that was last picked using the DatePicker. Note that months start in 1 \= January, 12 \= December.

# Description: 
MotorPortsProperties=MotorPorts

# Description: 
MotorPortsPropertyDescriptions=The motor ports that the motors are connected to. The ports are specified by a sequence of port letters.

# Description: 
MoveBackwardIndefinitelyMethodDescriptions=Move the robot backward indefinitely, with the specified percentage of maximum power, by powering both drive motors backward.

# Description: 
MoveBackwardIndefinitelyMethods=MoveBackwardIndefinitely

# Description: 
MoveBackwardMethodDescriptions=Move the robot backward the given distance, with the specified percentage of maximum power, by powering both drive motors backward.

# Description: 
MoveBackwardMethods=MoveBackward

# Description: 
MoveFileMethodDescriptions=Move a file from one location to another.

# Description: 
MoveFileMethods=MoveFile

# Description: 
MoveForwardIndefinitelyMethodDescriptions=Move the robot forward indefinitely, with the specified percentage of maximum power, by powering both drive motors forward.

# Description: 
MoveForwardIndefinitelyMethods=MoveForwardIndefinitely

# Description: 
MoveForwardMethodDescriptions=Move the robot forward the given distance, with the specified percentage of maximum power, by powering both drive motors forward.

# Description: 
MoveForwardMethods=MoveForward

# Description: 
MoveIntoBoundsMethods=MoveIntoBounds

# Description: 
MoveToMethods=MoveTo

# Description: 
MoveToPointMethods=MoveToPoint

# Description: 
MovingProperties=Moving

# Description: 
MovingPropertyDescriptions=This property has been deprecated.

# Description: 
MultiLineProperties=MultiLine

# Description: 
MultiLinePropertyDescriptions=If true, then this text box accepts multiple lines of input, which are entered using the return key. For single line text boxes there is a Done key instead of a return key, and pressing Done hides the keyboard. The app should call the HideKeyboard method to hide the keyboard for a mutiline text box.

# Description: 
NamespaceProperties=Namespace

# Description: 
NamespacePropertyDescriptions=Namespace for storing data.

# Description: 
NavigationHelpStringComponentPallette=Navigation

# Description: 
Navigation__ApiKeyPropertyDescriptions=API Key for Open Route Service.

# Description: 
Navigation__LanguagePropertyDescriptions=The language to use for textual directions.

# Description: 
Navigation__ServiceURLPropertyDescriptions=Reserved for future use in case we decide to run our own service some day.

# Description: 
NearFieldHelpStringComponentPallette=<p>Non-visible component to provide NFC capabilities. For now this component supports the reading and writing of text tags only (if supported by the device)</p><p>In order to read and write text tags, the component must have its <code>ReadMode</code> property set to True or False respectively.</p><p><strong>Note\:</strong> This component will only work on Screen1 of any App Inventor app.</p>

# Description: 
NewInstanceMadeEventDescriptions=Indicates that a new instance was successfully created after calling MakeNewInstance.

# Description: 
NewInstanceMadeEvents=NewInstanceMade

# Description: 
NewLeaderEventDescriptions=Indicates that this game has a new leader as specified through SetLeader

# Description: 
NewLeaderEvents=NewLeader

# Description: 
NoLongerCollidingWithEventDescriptions=Event handler called when a pair of sprites (Balls and ImageSprites) are no longer colliding.

# Description: 
NoLongerCollidingWithEvents=NoLongerCollidingWith

# Description: 
NoOpenPollEventDescriptions=Event indicating that the service has no open poll.

# Description: 
NoOpenPollEvents=NoOpenPoll

# Description: 
NorthLatitudeProperties=NorthLatitude

# Description: 
NorthLatitudePropertyDescriptions=The north edge of the rectangle, in decimal degrees north of the equator.

# Description: Title for the Warning Dialog Box
NoticeTitle=Notice\!

# Description: 
NotifierHelpStringComponentPallette=The Notifier component displays alert dialogs, messages, and temporary alerts, and creates Android log entries through the following methods\: <ul><li> ShowMessageDialog\: displays a message which the user must dismiss by pressing a button.</li><li> ShowChooseDialog\: displays a message two buttons to let the user choose one of two responses, for example, yes or no, after which the AfterChoosing event is raised.</li><li> ShowTextDialog\: lets the user enter text in response to the message, after which the AfterTextInput event is raised. <li> ShowPasswordDialog\: lets the user enter password in response to the message, after which the AfterTextInput event is raised. <li> ShowAlert\: displays a temporary alert that goes away by itself after a short time.</li><li> ShowProgressDialog\: displays an alert with a loading spinner that cannot be dismissed by the user. It can only be dismissed by using the DismissProgressDialog block.</li><li> DismissProgressDialog\: Dismisses the progress dialog displayed by ShowProgressDialog.</li><li> LogError\: logs an error message to the Android log. </li><li> LogInfo\: logs an info message to the Android log.</li><li> LogWarning\: logs a warning message to the Android log.</li><li>The messages in the dialogs (but not the alert) can be formatted using the following HTML tags\:&lt;b&gt;, &lt;big&gt;, &lt;blockquote&gt;, &lt;br&gt;, &lt;cite&gt;, &lt;dfn&gt;, &lt;div&gt;, &lt;em&gt;, &lt;small&gt;, &lt;strong&gt;, &lt;sub&gt;, &lt;sup&gt;, &lt;tt&gt;. &lt;u&gt;</li><li>You can also use the font tag to specify color, for example, &lt;font color\="blue"&gt;. Some of the available color names are aqua, black, blue, fuchsia, green, grey, lime, maroon, navy, olive, purple, red, silver, teal, white, and yellow</li></ul>

# Description: 
NotifierLengthProperties=NotifierLength

# Description: 
NotifierLengthPropertyDescriptions=Specifies the length of time that the alert is shown -- either "short" or "long".

# Description: 
Notifier__BackgroundColorPropertyDescriptions=Specifies the background color for alerts (not dialogs).

# Description: 
Notifier__TextColorPropertyDescriptions=Specifies the text color for alerts (not dialogs).

# Description: 
NowMethodDescriptions=Returns the current instant in time read from phone''s clock.

# Description: 
NowMethods=Now

# Description: 
NumbersOnlyProperties=NumbersOnly

# Description: 
NxtColorSensorHelpStringComponentPallette=A component that provides a high-level interface to a color sensor on a LEGO MINDSTORMS NXT robot.

# Description: 
NxtColorSensor__AboveRangeEventDescriptions=Light level has gone above the range. The AboveRange event will not occur if the DetectColor property is set to True or if the AboveRangeEventEnabled property is set to False.

# Description: 
NxtColorSensor__AboveRangeEventEnabledPropertyDescriptions=Whether the AboveRange event should fire when the DetectColor property is set to False and the light level goes above the TopOfRange.

# Description: 
NxtColorSensor__BelowRangeEventDescriptions=Light level has gone below the range. The BelowRange event will not occur if the DetectColor property is set to True or if the BelowRangeEventEnabled property is set to False.

# Description: 
NxtColorSensor__BelowRangeEventEnabledPropertyDescriptions=Whether the BelowRange event should fire when the DetectColor property is set to False and the light level goes below the BottomOfRange.

# Description: 
NxtColorSensor__ColorChangedEventDescriptions=Detected color has changed. The ColorChanged event will not occur if the DetectColor property is set to False or if the ColorChangedEventEnabled property is set to False.

# Description: 
NxtColorSensor__ColorChangedEventEnabledPropertyDescriptions=Whether the ColorChanged event should fire when the DetectColor property is set to True and the detected color changes.

# Description: 
NxtColorSensor__GetLightLevelMethodDescriptions=Returns the current light level as a value between 0 and 1023, or -1 if the light level can not be read or if the DetectColor property is set to True.

# Description: 
NxtColorSensor__WithinRangeEventDescriptions=Light level has gone within the range. The WithinRange event will not occur if the DetectColor property is set to True or if the WithinRangeEventEnabled property is set to False.

# Description: 
NxtColorSensor__WithinRangeEventEnabledPropertyDescriptions=Whether the WithinRange event should fire when the DetectColor property is set to False and the light level goes between the BottomOfRange and the TopOfRange.

# Description: 
NxtDirectCommandsHelpStringComponentPallette=A component that provides a low-level interface to a LEGO MINDSTORMS NXT robot, with functions to send NXT Direct Commands.

# Description: 
NxtDirectCommands__GetFirmwareVersionMethodDescriptions=Get the firmware and protocol version numbers for the robot as a list where the first element is the firmware version number and the second element is the protocol version number.

# Description: 
NxtDirectCommands__KeepAliveMethodDescriptions=Keep Alive. Returns the current sleep time limit in milliseconds.

# Description: 
NxtDriveHelpStringComponentPallette=A component that provides a high-level interface to a LEGO MINDSTORMS NXT robot, with functions that can move and turn the robot.

# Description: 
NxtDrive__StopBeforeDisconnectPropertyDescriptions=Whether to stop the drive motors before disconnecting.

# Description: 
NxtDrive__StopMethodDescriptions=Stop the drive motors of the robot.

# Description: 
NxtDrive__WheelDiameterPropertyDescriptions=The diameter of the wheels used for driving.

# Description: 
NxtLightSensorHelpStringComponentPallette=A component that provides a high-level interface to a light sensor on a LEGO MINDSTORMS NXT robot.

# Description: 
NxtLightSensor__AboveRangeEventDescriptions=Light level has gone above the range.

# Description: 
NxtLightSensor__AboveRangeEventEnabledPropertyDescriptions=Whether the AboveRange event should fire when the light level goes above the TopOfRange.

# Description: 
NxtLightSensor__BelowRangeEventDescriptions=Light level has gone below the range.

# Description: 
NxtLightSensor__BelowRangeEventEnabledPropertyDescriptions=Whether the BelowRange event should fire when the light level goes below the BottomOfRange.

# Description: 
NxtLightSensor__GetLightLevelMethodDescriptions=Returns the current light level as a value between 0 and 1023, or -1 if the light level can not be read.

# Description: 
NxtLightSensor__WithinRangeEventDescriptions=Light level has gone within the range.

# Description: 
NxtLightSensor__WithinRangeEventEnabledPropertyDescriptions=Whether the WithinRange event should fire when the light level goes between the BottomOfRange and the TopOfRange.

# Description: 
NxtSoundSensorHelpStringComponentPallette=A component that provides a high-level interface to a sound sensor on a LEGO MINDSTORMS NXT robot.

# Description: 
NxtSoundSensor__AboveRangeEventDescriptions=Sound level has gone above the range.

# Description: 
NxtSoundSensor__AboveRangeEventEnabledPropertyDescriptions=Whether the AboveRange event should fire when the sound level goes above the TopOfRange.

# Description: 
NxtSoundSensor__BelowRangeEventDescriptions=Sound level has gone below the range.

# Description: 
NxtSoundSensor__BelowRangeEventEnabledPropertyDescriptions=Whether the BelowRange event should fire when the sound level goes below the BottomOfRange.

# Description: 
NxtSoundSensor__WithinRangeEventDescriptions=Sound level has gone within the range.

# Description: 
NxtSoundSensor__WithinRangeEventEnabledPropertyDescriptions=Whether the WithinRange event should fire when the sound level goes between the BottomOfRange and the TopOfRange.

# Description: 
NxtTouchSensorHelpStringComponentPallette=A component that provides a high-level interface to a touch sensor on a LEGO MINDSTORMS NXT robot.

# Description: 
NxtTouchSensor__PressedEventDescriptions=Touch sensor has been pressed.

# Description: 
NxtTouchSensor__PressedEventEnabledPropertyDescriptions=Whether the Pressed event should fire when the touch sensor is pressed.

# Description: 
NxtTouchSensor__ReleasedEventDescriptions=Touch sensor has been released.

# Description: 
NxtUltrasonicSensorHelpStringComponentPallette=A component that provides a high-level interface to an ultrasonic sensor on a LEGO MINDSTORMS NXT robot.

# Description: 
NxtUltrasonicSensor__AboveRangeEventDescriptions=Distance has gone above the range.

# Description: 
NxtUltrasonicSensor__AboveRangeEventEnabledPropertyDescriptions=Whether the AboveRange event should fire when the distance goes above the TopOfRange.

# Description: 
NxtUltrasonicSensor__BelowRangeEventDescriptions=Distance has gone below the range.

# Description: 
NxtUltrasonicSensor__BelowRangeEventEnabledPropertyDescriptions=Whether the BelowRange event should fire when the distance goes below the BottomOfRange.

# Description: 
NxtUltrasonicSensor__WithinRangeEventDescriptions=Distance has gone within the range.

# Description: 
NxtUltrasonicSensor__WithinRangeEventEnabledPropertyDescriptions=Whether the WithinRange event should fire when the distance goes between the BottomOfRange and the TopOfRange.

# Description: 
OnProperties=On

# Description: 
OnPropertyDescriptions=Returns true if the `Switch` is on.

# Description: 
OnSettingsEventDescriptions=This event is fired when the "settings" menu item is selected (only available in the Companion App, defined in ReplForm.java).

# Description: 
OnSettingsEvents=OnSettings

# Description: 
OpenMethods=Open

# Description: 
OpenScreenAnimationMethods=OpenScreenAnimation

# Description: 
OpenScreenAnimationProperties=OpenScreenAnimation

# Description: 
OpenScreenAnimationPropertyDescriptions=The animation for switching to another screen. Valid options are default, fade, zoom, slidehorizontal, slidevertical, and none

# Description: 
OpenSerialMethodDescriptions=Opens serial connection. Returns true when opened.

# Description: 
OpenSerialMethods=OpenSerial

# Description: 
OrientationChangedEventDescriptions=Called when the orientation has changed.

# Description: 
OrientationChangedEvents=OrientationChanged

# Description: 
OrientationProperties=Orientation

# Description: 
OrientationPropertyDescriptions=Returns the style of the button.

# Description: 
OrientationSensorHelpStringComponentPallette=<p>Non-visible component providing information about the device''s physical orientation in three dimensions\: <ul> <li> <strong>Roll</strong>\: 0 degrees when the device is level, increases to 90 degrees as the device is tilted up on its left side, and decreases to -90 degrees when the device is tilted up on its right side. </li> <li> <strong>Pitch</strong>\: 0 degrees when the device is level, up to 90 degrees as the device is tilted so its top is pointing down, up to 180 degrees as it gets turned over. Similarly, as the device is tilted so its bottom points down, pitch decreases to -90 degrees, then further decreases to -180 degrees as it gets turned all the way over.</li> <li> <strong>Azimuth</strong>\: 0 degrees when the top of the device is pointing north, 90 degrees when it is pointing east, 180 degrees when it is pointing south, 270 degrees when it is pointing west, etc.</li></ul> These measurements assume that the device itself is not moving.</p>

# Description: 
OrientationSensor__AvailablePropertyDescriptions=Indicates whether the orientation sensor is present on the device.

# Description: 
OrientationSensor__EnabledPropertyDescriptions=Specifies whether the orientation sensor is enabled.

# Description: 
OrientationSensor__PitchPropertyDescriptions=Returns the pitch angle of the device. To return meaningful values the sensor must be enabled.

# Description: 
OriginAtCenterProperties=OriginAtCenter

# Description: 
OriginAtCenterPropertyDescriptions=Whether the x- and y-coordinates should represent the center of the Ball (true) or its left and top edges (false).

# Description: 
OtherPlayerStartedEventDescriptions=This event is signaled when another player has started (and the current player is playing or paused, but not stopped).

# Description: 
OtherPlayerStartedEvents=OtherPlayerStarted

# Description: 
OtherScreenClosedEventDescriptions=Event raised when another screen has closed and control has returned to this screen.

# Description: 
OtherScreenClosedEvents=OtherScreenClosed

# Description: Text for the Package SDK 26 Warning Dialog Box (HTML)
Package26Notice=Use this option to create applications that can be submitted to the Google Play Store.<br/>These applications will not run on Android versions older than 4.0.

# Description: Text for the Package non-SDK 26 Warning Dialog Box (HTML)
PackageNotice=Use this option to build apps that that will work back to Android version 2.1 (Eclair),<br/>but will not be publishable in the Google Play Store.

# Description: 
PageLoadedEventDescriptions=When a page is finished loading this event is run.

# Description: 
PageLoadedEvents=PageLoaded

# Description: 
PaintColorProperties=PaintColor

# Description: 
PanToMethodDescriptions=Pans the map center to the given latitude and longitude and adjust the zoom level to the specified zoom.

# Description: 
PanToMethods=PanTo

# Description: 
PasswordTextBoxHelpStringComponentPallette=<p>A box for entering passwords. This is the same as the ordinary <code>TextBox</code> component except this does not display the characters typed by the user.</p><p>The value of the text in the box can be found or set through the <code>Text</code> property. If blank, the <code>Hint</code> property, which appears as faint text in the box, can provide the user with guidance as to what to type.</p> <p>Text boxes are usually used with the <code>Button</code> component, with the user clicking on the button when text entry is complete.</p>

# Description: 
PasswordTextBox__BackgroundColorPropertyDescriptions=The background color of the input box. You can choose a color by name in the Designer or in the Blocks Editor. The default background color is ''default'' (shaded 3-D look).

# Description: 
PasswordTextBox__EnabledPropertyDescriptions=Whether the user can enter text into the PasswordTextBox. By default, this is true.

# Description: 
PasswordTextBox__FontBoldPropertyDescriptions=Whether the font for the text should be bold. By default, it is not.

# Description: 
PasswordTextBox__FontItalicPropertyDescriptions=Whether the text should appear in italics. By default, it does not.

# Description: 
PasswordTextBox__FontSizePropertyDescriptions=The font size for the text. By default, it is 14.0 points.

# Description: 
PasswordTextBox__FontTypefacePropertyDescriptions=The font for the text. The value can be changed in the Designer.

# Description: 
PasswordTextBox__GotFocusEventDescriptions=Event raised when the PasswordTextBox is selected for input, such as by the user touching it.

# Description: 
PasswordTextBox__HeightPercentPropertyDescriptions=Specifies the vertical height of the PasswordTextBox as a percentage of the height of the Screen.

# Description: 
PasswordTextBox__HeightPropertyDescriptions=Specifies the vertical height of the PasswordTextBox, measured in pixels.

# Description: 
PasswordTextBox__HintPropertyDescriptions=Text that should appear faintly in the PasswordTextBox to provide a hint as to what the user should enter. This can only be seen if the Text property is empty.

# Description: 
PasswordTextBox__LostFocusEventDescriptions=Event raised when the PasswordTextBox is no longer selected for input, such as if the user touches a different text box.

# Description: 
PasswordTextBox__NumbersOnlyPropertyDescriptions=If true, then this password text box accepts only numbers as keyboard input. Numbers can include a decimal point and an optional leading minus sign. This applies to keyboard input only. Even if NumbersOnly is true, you can use [set Text to] to enter any text at all.

# Description: 
PasswordTextBox__RequestFocusMethodDescriptions=Sets the PasswordTextBox active.

# Description: 
PasswordTextBox__TextAlignmentPropertyDescriptions=Whether the text should be left justified, centered, or right justified. By default, text is left justified.

# Description: 
PasswordTextBox__TextColorPropertyDescriptions=The color for the text. You can choose a color by name in the Designer or in the Blocks Editor. The default text color is black.

# Description: 
PasswordTextBox__TextPropertyDescriptions=Returns the textbox contents.

# Description: 
PasswordTextBox__VisiblePropertyDescriptions=Specifies whether the PasswordTextBox should be visible on the screen. Value is true if the PasswordTextBox is showing and false if hidden.

# Description: 
PasswordTextBox__WidthPercentPropertyDescriptions=Specifies the horizontal width of the PasswordTextBox as a percentage of the width of the Screen.

# Description: 
PasswordTextBox__WidthPropertyDescriptions=Specifies the horizontal width of the PasswordTextBox, measured in pixels.

# Description: 
PasswordVisibleProperties=PasswordVisible

# Description: 
PasswordVisiblePropertyDescriptions=Visibility of password.

# Description: 
PatchFileMethodDescriptions=Performs an HTTP PATCH request using the Url property and data from the specified file.<br>If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The ResponseFileName property can be used to specify the name of the file.<br>If the SaveResponse property is false, the GotText event will be triggered.

# Description: 
PatchFileMethods=PatchFile

# Description: 
PatchTextMethodDescriptions=Performs an HTTP PATCH request using the Url property and the specified text.<br>The characters of the text are encoded using UTF-8 encoding.<br>If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The responseFileName property can be used to specify the name of the file.<br>If the SaveResponse property is false, the GotText event will be triggered.

# Description: 
PatchTextMethods=PatchText

# Description: 
PatchTextWithEncodingMethodDescriptions=Performs an HTTP PATCH request using the Url property and the specified text.<br>The characters of the text are encoded using the given encoding.<br>If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The ResponseFileName property can be used to specify the name of the file.<br>If the SaveResponse property is false, the GotText event will be triggered.

# Description: 
PatchTextWithEncodingMethods=PatchTextWithEncoding

# Description: 
PauseMethods=Pause

# Description: 
PedometerHelpStringComponentPallette=A Component that acts like a Pedometer. It senses motion via the Accelerometer and attempts to determine if a step has been taken. Using a configurable stride length, it can estimate the distance traveled as well.

# Description: 
Pedometer__DistancePropertyDescriptions=The approximate distance traveled in meters.

# Description: 
Pedometer__PauseMethodDescriptions=Pause counting of steps and distance.

# Description: 
Pedometer__ResumeMethodDescriptions=Resumes counting, synonym of Start.

# Description: 
Pedometer__SaveMethodDescriptions=Saves the pedometer state to the phone. Permits permits accumulation of steps and distance between invocations of an App that uses the pedometer. Different Apps will have their own saved state.

# Description: 
Pedometer__StartMethodDescriptions=Start counting steps

# Description: 
Pedometer__StopMethodDescriptions=Stop counting steps

# Description: 
PermissionDeniedEventDescriptions=Event to handle when the app user has denied a needed permission.

# Description: The name of the event handler for when the app is denied a dangerous permission by the user.
PermissionDeniedEvents=PermissionDenied

# Description: 
PermissionGrantedEventDescriptions=Event to handle when the app user has granted a needed permission. This event is only run when permission is granted in response to the AskForPermission method.

# Description: The name of the event handler for when the app is granted a dangerous permission by the user.
PermissionGrantedEvents=PermissionGranted

# Description: 
PersistProperties=Persist

# Description: 
PersistPropertyDescriptions=If true, variables will retain their values when off-line and the App exits. Values will be uploaded to Firebase the next time the App is run while connected to the network. This is useful for applications which will gather data while not connected to the network. Note\: AppendValue and RemoveFirst will not work correctly when off-line, they require a network connection.<br/><br/> <i>Note</i>\: If you set Persist on any Firebase component, on any screen, it makes all Firebase components on all screens persistent. This is a limitation of the low level Firebase library. Also be aware that if you want to set persist to true, you should do so before connecting the Companion for incremental development.

# Description: 
PhoneCallEndedEventDescriptions=Event indicating that a phone call has ended. If status is 1, incoming call is missed or rejected; if status is 2, incoming call is answered before hanging up; if status is 3, outgoing call is hung up. phoneNumber is the ended call phone number.

# Description: 
PhoneCallEndedEvents=PhoneCallEnded

# Description: 
PhoneCallHelpStringComponentPallette=<p>A non-visible component that makes a phone call to the number specified in the <code>PhoneNumber</code> property, which can be set either in the Designer or Blocks Editor. The component has a <code>MakePhoneCall</code> method, enabling the program to launch a phone call.</p><p>Often, this component is used with the <code>ContactPicker</code> component, which lets the user select a contact from the ones stored on the phone and sets the <code>PhoneNumber</code> property to the contact''s phone number.</p><p>To directly specify the phone number (e.g., 650-555-1212), set the <code>PhoneNumber</code> property to a Text with the specified digits (e.g., "6505551212"). Dashes, dots, and parentheses may be included (e.g., "(650)-555-1212") but will be ignored; spaces may not be included.</p>

# Description: 
PhoneCallStartedEventDescriptions=Event indicating that a phonecall has started. If status is 1, incoming call is ringing; if status is 2, outgoing call is dialled. phoneNumber is the incoming/outgoing phone number.

# Description: 
PhoneCallStartedEvents=PhoneCallStarted

# Description: 
PhoneCall__PhoneNumberPropertyDescriptions=PhoneNumber property getter method.

# Description: 
PhoneNumberListProperties=PhoneNumberList

# Description: 
PhoneNumberListPropertyDescriptions=Returns a list of phone numbers associated with the selected contact.

# Description: 
PhoneNumberPickerHelpStringComponentPallette=A button that, when clicked on, displays a list of the contacts'' phone numbers to choose among. After the user has made a selection, the following properties will be set to information about the chosen contact\: <ul><li> <code>ContactName</code>\: the contact''s name </li> <li> <code>PhoneNumber</code>\: the contact''s phone number </li> <li> <code>EmailAddress</code>\: the contact''s email address </li> <li> <code>Picture</code>\: the name of the file containing the contact''s image, which can be used as a <code>Picture</code> property value for the <code>Image</code> or <code>ImageSprite</code> component.</li></ul></p><p>Other properties affect the appearance of the button (<code>TextAlignment</code>, <code>BackgroundColor</code>, etc.) and whether it can be clicked on (<code>Enabled</code>).</p><p>The PhoneNumberPicker component may not work on all Android devices. For example, on Android systems before system 3.0, the returned lists of phone numbers and email addresses will be empty.

# Description: 
PhoneNumberPicker__AfterPickingEventDescriptions=Event to be raised after the `ContactPicker` activity returns its result and the properties have been filled in.

# Description: 
PhoneNumberPicker__BackgroundColorPropertyDescriptions=Returns the button''s background color

# Description: 
PhoneNumberPicker__BeforePickingEventDescriptions=Event to raise when the `ContactPicker` is clicked or the picker is shown using the

# Description: 
PhoneNumberPicker__EnabledPropertyDescriptions=If set, user can tap ContactPicker to cause action.

# Description: 
PhoneNumberPicker__FontBoldPropertyDescriptions=If set, ContactPicker text is displayed in bold.

# Description: 
PhoneNumberPicker__FontItalicPropertyDescriptions=If set, ContactPicker text is displayed in italics.

# Description: 
PhoneNumberPicker__FontSizePropertyDescriptions=Point size for ContactPicker text.

# Description: 
PhoneNumberPicker__FontTypefacePropertyDescriptions=Font family for ContactPicker text.

# Description: 
PhoneNumberPicker__GotFocusEventDescriptions=Indicates the cursor moved over the ContactPicker so it is now possible to click it.

# Description: 
PhoneNumberPicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the ContactPicker as a percentage of the height of the Screen.

# Description: 
PhoneNumberPicker__HeightPropertyDescriptions=Specifies the vertical height of the ContactPicker, measured in pixels.

# Description: 
PhoneNumberPicker__ImagePropertyDescriptions=Image to display on button.

# Description: 
PhoneNumberPicker__LostFocusEventDescriptions=Indicates the cursor moved away from the ContactPicker so it is now no longer possible to click it.

# Description: 
PhoneNumberPicker__OpenMethodDescriptions=Opens the ContactPicker, as though the user clicked on it.

# Description: 
PhoneNumberPicker__PhoneNumberPropertyDescriptions=Returns the primary phone number associated with the selected contact, or the empty string if no phone number is associated with the contact.

# Description: 
PhoneNumberPicker__PicturePropertyDescriptions=Returns a picture URI for the selected contact, which can be used to retrieve the contact''s photo and other fields.

# Description: 
PhoneNumberPicker__ShapePropertyDescriptions=Returns the style of the `ContactPicker`.

# Description: 
PhoneNumberPicker__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a ContactPicker that has an image as background.

# Description: 
PhoneNumberPicker__TextAlignmentPropertyDescriptions=Left, center, or right.

# Description: 
PhoneNumberPicker__TextColorPropertyDescriptions=Color for button text.

# Description: 
PhoneNumberPicker__TextPropertyDescriptions=Text to display on ContactPicker.

# Description: 
PhoneNumberPicker__TouchDownEventDescriptions=Indicates that the ContactPicker was pressed down.

# Description: 
PhoneNumberPicker__TouchUpEventDescriptions=Indicates that the ContactPicker has been released.

# Description: 
PhoneNumberPicker__VisiblePropertyDescriptions=Specifies whether the ContactPicker should be visible on the screen. Value is true if the ContactPicker is showing and false if hidden.

# Description: 
PhoneNumberPicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the ContactPicker as a percentage of the width of the Screen.

# Description: 
PhoneNumberPicker__WidthPropertyDescriptions=Specifies the horizontal width of the ContactPicker, measured in pixels.

# Description: 
PhoneNumberProperties=PhoneNumber

# Description: 
PhoneStatusHelpStringComponentPallette=Component that returns information about the phone.

# Description: 
PictureProperties=Picture

# Description: 
PitchProperties=Pitch

# Description: 
PlatformProperties=Platform

# Description: 
PlatformPropertyDescriptions=The platform the app is running on, for example "Android" or "iOS".

# Description: 
PlatformVersionProperties=PlatformVersion

# Description: 
PlatformVersionPropertyDescriptions=The dotted version number of the platform, such as 4.2.2 or 10.0. This is platform specific and there is no guarantee that it has a particular format.

# Description: 
PlayMethodDescriptions=Plays the sound specified by the Source property.

# Description: 
PlayMethods=Play

# Description: 
PlayOnlyInForegroundProperties=PlayOnlyInForeground

# Description: 
PlayOnlyInForegroundPropertyDescriptions=If true, the player will pause playing when leaving the current screen; if false (default option), the player continues playing whenever the current screen is displaying or not.

# Description: 
PlaySoundFileMethodDescriptions=Play a sound file on the robot.

# Description: 
PlaySoundFileMethods=PlaySoundFile

# Description: 
PlayToneMethodDescriptions=Make the robot play a tone.

# Description: 
PlayToneMethods=PlayTone

# Description: 
PlayerErrorEventDescriptions=The PlayerError event is no longer used. Please use the Screen.ErrorOccurred event instead.

# Description: 
PlayerHelpStringComponentPallette=Multimedia component that plays audio and controls phone vibration. The name of a multimedia field is specified in the <code>Source</code> property, which can be set in the Designer or in the Blocks Editor. The length of time for a vibration is specified in the Blocks Editor in milliseconds (thousandths of a second).<p>For supported audio formats, see <a href\="http\://developer.android.com/guide/appendix/media-formats.html" target\="_blank">Android Supported Media Formats</a>.</p><p>This component is best for long sound files, such as songs, while the <code>Sound</code> component is more efficient for short files, such as sound effects.</p>

# Description: 
PlayerJoinedEventDescriptions=Indicates that a new player has joined this game instance.

# Description: 
PlayerJoinedEvents=PlayerJoined

# Description: 
PlayerLeftEventDescriptions=Indicates that a player has left this game instance.

# Description: 
PlayerLeftEvents=PlayerLeft

# Description: 
Player__CompletedEventDescriptions=Indicates that the media has reached the end

# Description: 
Player__PauseMethodDescriptions=Suspends playing the media if it is playing.

# Description: 
Player__SourcePropertyDescriptions=Returns the path to the audio source

# Description: 
Player__StartMethodDescriptions=Plays the media. If it was previously paused, the playing is resumed. If it was previously stopped, it starts from the beginning.

# Description: 
Player__StopMethodDescriptions=Stops playing the media and seeks to the beginning of the song.

# Description: 
Player__VibrateMethodDescriptions=Vibrates for specified number of milliseconds.

# Description: 
Player__VolumePropertyDescriptions=Sets the volume to a number between 0 and 100

# Description: 
PlayersProperties=Players

# Description: 
PlayersPropertyDescriptions=The current set of players for this game instance. Each player is designated by an email address, which is a string. The list of players is updated each time a successful communication is made with the game server.

# Description: 
PointInDirectionMethods=PointInDirection

# Description: 
PointTowardsMethods=PointTowards

# Description: 
PointsFromStringProperties=PointsFromString

# Description: 
PointsProperties=Points

# Description: 
PolygonHelpStringComponentPallette=Polygon

# Description: 
Polygon__ClickEventDescriptions=The user clicked on the Polygon.

# Description: 
Polygon__DescriptionPropertyDescriptions=The description displayed in the info window that appears when the user clicks on the Polygon.

# Description: 
Polygon__DistanceToPointMethodDescriptions=Compute the distance, in meters, between a Polygon and a latitude, longitude point.

# Description: 
Polygon__DragEventDescriptions=The user dragged the Polygon.

# Description: 
Polygon__DraggablePropertyDescriptions=The Draggable property is used to set whether or not the user can drag the Polygon by long-pressing and then dragging the Polygon to a new location.

# Description: 
Polygon__EnableInfoboxPropertyDescriptions=Enable or disable the infobox window display when the user taps the Polygon.

# Description: 
Polygon__FillColorPropertyDescriptions=The paint color used to fill in the Polygon.

# Description: 
Polygon__LongClickEventDescriptions=The user long-pressed on the Polygon. This event will only trigger if Draggable is false.

# Description: 
Polygon__PointsFromStringPropertyDescriptions=Constructs a polygon from the given list of coordinates.

# Description: 
Polygon__PointsPropertyDescriptions=Specifies the Points used for drawing the `Polygon`. The Points are specified as a list of lists containing latitude and longitude values, such as `[[lat1, long1], [lat2, long2], ...]`.

# Description: 
Polygon__ShowInfoboxMethodDescriptions=Show the infobox for the Polygon. This will show the infobox even if EnableInfobox is set to false.

# Description: 
Polygon__StrokeColorPropertyDescriptions=The paint color used to outline the Polygon.

# Description: 
Polygon__StrokeWidthPropertyDescriptions=The width of the stroke used to outline the Polygon.

# Description: 
Polygon__TitlePropertyDescriptions=The title displayed in the info window that appears when the user clicks on the Polygon.

# Description: 
Polygon__TypePropertyDescriptions=Returns the type of the feature. For polygons, this returns MapFeature.Polygon ("Polygon").

# Description: 
Polygon__VisiblePropertyDescriptions=Specifies whether the Polygon should be visible on the screen. Value is true if the component is showing and false if hidden.

# Description: 
PositionChangedEventDescriptions=Indicates that position of the slider thumb has changed.

# Description: 
PositionChangedEvents=PositionChanged

# Description: 
PostFileMethodDescriptions=Performs an HTTP POST request using the Url property and data from the specified file.<br>If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The ResponseFileName property can be used to specify the name of the file.<br>If the SaveResponse property is false, the GotText event will be triggered.

# Description: 
PostFileMethods=PostFile

# Description: 
PostMediaMethodDescriptions=Asks the Web service to store the given media file.

# Description: 
PostMediaMethods=PostMedia

# Description: 
PostTextMethodDescriptions=Performs an HTTP POST request using the Url property and the specified text.<br>The characters of the text are encoded using UTF-8 encoding.<br>If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The responseFileName property can be used to specify the name of the file.<br>If the SaveResponse property is false, the GotText event will be triggered.

# Description: 
PostTextMethods=PostText

# Description: 
PostTextWithEncodingMethodDescriptions=Performs an HTTP POST request using the Url property and the specified text.<br>The characters of the text are encoded using the given encoding.<br>If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The ResponseFileName property can be used to specify the name of the file.<br>If the SaveResponse property is false, the GotText event will be triggered.

# Description: 
PostTextWithEncodingMethods=PostTextWithEncoding

# Description: 
PressedEventEnabledProperties=PressedEventEnabled

# Description: 
PressedEvents=Pressed

# Description: 
PrimaryColorDarkProperties=PrimaryColorDark

# Description: 
PrimaryColorDarkPropertyDescriptions=This is the primary color used for darker elements in Material UI.

# Description: 
PrimaryColorProperties=PrimaryColor

# Description: 
PrimaryColorPropertyDescriptions=This is the primary color used for Material UI elements, such as the ActionBar.

# Description: 
PrintSerialMethodDescriptions=Writes given data to serial, and appends a new line at the end.

# Description: 
PrintSerialMethods=PrintSerial

# Description: 
ProgressBarFor=Progress Bar

# Description: 
ProjectBucketProperties=ProjectBucket

# Description: 
ProjectBucketPropertyDescriptions=Sets the ProjectBucket for this FirebaseDB.

# Description: 
ProjectIDProperties=ProjectID

# Description: 
ProjectIDPropertyDescriptions=Gets the ProjectID for this CloudDB project.

# Description: 
PromptProperties=Prompt

# Description: 
PromptPropertyDescriptions=Text with the current title for the Spinner window

# Description: 
PromptforPermissionProperties=PromptforPermission

# Description: 
PromptforPermissionPropertyDescriptions=If True, then prompt the user of the WebView to give permission to access the geolocation API. If False, then assume permission is granted.

# Description: 
ProviderLockedProperties=ProviderLocked

# Description: 
ProviderLockedPropertyDescriptions=The device will not change the service provider. It is possible for a device to switch service providers when the current provider is unable to provide adequate location information. `ProviderLocked` is a Boolean value\: true/false. Set to `true

# Description: 
ProviderNameProperties=ProviderName

# Description: 
ProviderNamePropertyDescriptions=Indicates the source of the location information. If there is no provider, the string "NO PROVIDER" is returned. This is useful primarily for debugging.

# Description: 
ProximityChangedEventDescriptions=Triggered when distance (in cm) of the object to the device changes.

# Description: 
ProximityChangedEvents=ProximityChanged

# Description: 
ProximityChangedMethods=ProximityChanged

# Description: 
ProximityChangedPropertiesProperties=ProximityChangedProperties

# Description: 
ProximitySensorHelpStringComponentPallette=<p>Non-visible component that can measures the proximity of an object in cm relative to the view screen of a device. This sensor is typically used to determine whether a handset is being held up to a persons ear; i.e. lets you determine how far away an object is from a device. Many devices return the absolute distance, in cm, but some return only near and far values. In this case, the sensor usually reports its maximum range value in the far state and a lesser value in the near state.</p>

# Description: 
ProximitySensor__AvailablePropertyDescriptions=Reports whether or not the device has a proximity sensor.

# Description: 
ProximitySensor__DistancePropertyDescriptions=Returns the distance from the object to the device

# Description: 
ProximitySensor__EnabledPropertyDescriptions=If true, the sensor will generate events. Otherwise, no events are generated.

# Description: 
ProximitySensor__MaximumRangePropertyDescriptions=Reports the Maximum Range of the device''s ProximitySensor

# Description: 
PublicInstancesProperties=PublicInstances

# Description: 
PublicInstancesPropertyDescriptions=The set of game instances that have been marked public. To ensure current values are returned, first invoke

# Description: 
PutFileMethodDescriptions=Performs an HTTP PUT request using the Url property and data from the specified file.<br>If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The ResponseFileName property can be used to specify the name of the file.<br>If the SaveResponse property is false, the GotText event will be triggered.

# Description: 
PutFileMethods=PutFile

# Description: 
PutTextMethodDescriptions=Performs an HTTP PUT request using the Url property and the specified text.<br>The characters of the text are encoded using UTF-8 encoding.<br>If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The responseFileName property can be used to specify the name of the file.<br>If the SaveResponse property is false, the GotText event will be triggered.

# Description: 
PutTextMethods=PutText

# Description: 
PutTextWithEncodingMethodDescriptions=Performs an HTTP PUT request using the Url property and the specified text.<br>The characters of the text are encoded using the given encoding.<br>If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The ResponseFileName property can be used to specify the name of the file.<br>If the SaveResponse property is false, the GotText event will be triggered.

# Description: 
PutTextWithEncodingMethods=PutTextWithEncoding

# Description: 
QueryProperties=Query

# Description: 
QueryPropertyDescriptions=The query to send to the Fusion Tables API. <p>For legal query formats and examples, see the <a href\="https\://developers.google.com/fusiontables/docs/v2/getting_started" target\="_blank">Fusion Tables API v2.0 reference manual</a>.</p> <p>Note that you do not need to worry about UTF-encoding the query. But you do need to make sure it follows the syntax described in the reference manual, which means that things like capitalization for names of columns matters, and that single quotes need to be used around column names if there are spaces in them.</p>

# Description: 
RadiusProperties=Radius

# Description: 
ReadFromMethodDescriptions=Reads text from a file in storage. Prefix the filename with / to read from a specific file on the SD card. for instance /myFile.txt will read the file /sdcard/myFile.txt. To read assets packaged with an application (also works for the Companion) start the filename with // (two slashes). If a filename does not start with a slash, it will be read from the applications private storage (for packaged apps) and from /sdcard/AppInventor/data for the Companion.

# Description: 
ReadFromMethods=ReadFrom

# Description: 
ReadModeProperties=ReadMode

# Description: 
ReadModePropertyDescriptions=Returns true if in read mode, false if in write mode.

# Description: 
ReadOnlyProperties=ReadOnly

# Description: 
ReadOnlyPropertyDescriptions=Whether the TextBox is read-only. By default, this is true.

# Description: 
ReadPermissionProperties=ReadPermission

# Description: 
ReadPermissionPropertyDescriptions=A designer-only property that can be used to enable read access to file storage outside of the app-specific directories.

# Description: 
ReadSerialMethodDescriptions=Reads data from serial.

# Description: 
ReadSerialMethods=ReadSerial

# Description: 
ReadyEventDescriptions=Map has been initialized and is ready for user interaction.

# Description: 
ReadyEvents=Ready

# Description: 
ReceiveSigned1ByteNumberMethodDescriptions=Receive a signed 1-byte number from the connected Bluetooth device.

# Description: 
ReceiveSigned1ByteNumberMethods=ReceiveSigned1ByteNumber

# Description: 
ReceiveSigned2ByteNumberMethodDescriptions=Receive a signed 2-byte number from the connected Bluetooth device.

# Description: 
ReceiveSigned2ByteNumberMethods=ReceiveSigned2ByteNumber

# Description: 
ReceiveSigned4ByteNumberMethodDescriptions=Receive a signed 4-byte number from the connected Bluetooth device.

# Description: 
ReceiveSigned4ByteNumberMethods=ReceiveSigned4ByteNumber

# Description: 
ReceiveSignedBytesMethodDescriptions=Receive multiple signed byte values from the connected Bluetooth device. If numberOfBytes is less than 0, read until a delimiter byte value is received.

# Description: 
ReceiveSignedBytesMethods=ReceiveSignedBytes

# Description: 
ReceiveTextMethodDescriptions=Receive text from the connected Bluetooth device. If numberOfBytes is less than 0, read until a delimiter byte value is received.

# Description: 
ReceiveTextMethods=ReceiveText

# Description: 
ReceiveUnsigned1ByteNumberMethodDescriptions=Receive an unsigned 1-byte number from the connected Bluetooth device.

# Description: 
ReceiveUnsigned1ByteNumberMethods=ReceiveUnsigned1ByteNumber

# Description: 
ReceiveUnsigned2ByteNumberMethodDescriptions=Receive a unsigned 2-byte number from the connected Bluetooth device.

# Description: 
ReceiveUnsigned2ByteNumberMethods=ReceiveUnsigned2ByteNumber

# Description: 
ReceiveUnsigned4ByteNumberMethodDescriptions=Receive a unsigned 4-byte number from the connected Bluetooth device.

# Description: 
ReceiveUnsigned4ByteNumberMethods=ReceiveUnsigned4ByteNumber

# Description: 
ReceiveUnsignedBytesMethodDescriptions=Receive multiple unsigned byte values from the connected Bluetooth device. If numberOfBytes is less than 0, read until a delimiter byte value is received.

# Description: 
ReceiveUnsignedBytesMethods=ReceiveUnsignedBytes

# Description: 
ReceivingEnabledProperties=ReceivingEnabled

# Description: 
ReceivingEnabledPropertyDescriptions=If set to 1 (OFF) no messages will be received. If set to 2 (FOREGROUND) or3 (ALWAYS) the component will respond to messages if it is running. If the app is not running then the message will be discarded if set to 2 (FOREGROUND). If set to 3 (ALWAYS) and the app is not running the phone will show a notification. Selecting the notification will bring up the app and signal the MessageReceived event. Messages received when the app is dormant will be queued, and so several MessageReceived events might appear when the app awakens. As an app developer, it would be a good idea to give your users control over this property, so they can make their phones ignore text messages when your app is installed.

# Description: 
RecordVideoMethodDescriptions=Records a video, then raises the

# Description: 
RecordVideoMethods=RecordVideo

# Description: 
RectangleHelpStringComponentPallette=Rectangle

# Description: 
Rectangle__ClickEventDescriptions=The user clicked on the Rectangle.

# Description: 
Rectangle__DescriptionPropertyDescriptions=The description displayed in the info window that appears when the user clicks on the Rectangle.

# Description: 
Rectangle__DistanceToPointMethodDescriptions=Compute the distance, in meters, between a Rectangle and a latitude, longitude point.

# Description: 
Rectangle__DragEventDescriptions=The user dragged the Rectangle.

# Description: 
Rectangle__DraggablePropertyDescriptions=The Draggable property is used to set whether or not the user can drag the Rectangle by long-pressing and then dragging the Rectangle to a new location.

# Description: 
Rectangle__EnableInfoboxPropertyDescriptions=Enable or disable the infobox window display when the user taps the Rectangle.

# Description: 
Rectangle__FillColorPropertyDescriptions=The paint color used to fill in the Rectangle.

# Description: 
Rectangle__LongClickEventDescriptions=The user long-pressed on the Rectangle. This event will only trigger if Draggable is false.

# Description: 
Rectangle__ShowInfoboxMethodDescriptions=Show the infobox for the Rectangle. This will show the infobox even if EnableInfobox is set to false.

# Description: 
Rectangle__StrokeColorPropertyDescriptions=The paint color used to outline the Rectangle.

# Description: 
Rectangle__StrokeWidthPropertyDescriptions=The width of the stroke used to outline the Rectangle.

# Description: 
Rectangle__TitlePropertyDescriptions=The title displayed in the info window that appears when the user clicks on the Rectangle.

# Description: 
Rectangle__TypePropertyDescriptions=Returns the type of the feature. For rectangles, this returns MapFeature.Rectangle ("Rectangle").

# Description: 
Rectangle__VisiblePropertyDescriptions=Specifies whether the Rectangle should be visible on the screen. Value is true if the component is showing and false if hidden.

# Description: 
RedisPortProperties=RedisPort

# Description: 
RedisPortPropertyDescriptions=The Redis Server port to use. Defaults to 6381

# Description: 
RedisServerProperties=RedisServer

# Description: 
RedisServerPropertyDescriptions=The Redis Server to use to store data. A setting of "DEFAULT" means that the MIT server will be used.

# Description: 
RefreshMethodDescriptions=Reload the ListView to reflect any changes in the data.

# Description: 
RefreshMethods=Refresh

# Description: 
RefreshTimeProperties=RefreshTime

# Description: 
RefreshTimePropertyDescriptions=The requested minimum time in milliseconds between changes in readings being reported. Android is not guaranteed to honor the request. Setting this property has no effect on pre-Gingerbread devices.

# Description: 
ReleasedEventEnabledProperties=ReleasedEventEnabled

# Description: 
ReleasedEventEnabledPropertyDescriptions=Whether the Released event should fire when the touch sensor is released.

# Description: 
ReleasedEvents=Released

# Description: 
ReloadMethodDescriptions=Reload the current page.

# Description: 
ReloadMethods=Reload

# Description: 
RemoveDirectoryMethodDescriptions=Remove a directory from the file system. If recursive is true, then everything is removed. If recursive is false, only the directory is removed and only if it is empty.

# Description: 
RemoveDirectoryMethods=RemoveDirectory

# Description: 
RemoveFirstFromListMethodDescriptions=Return the first element of a list and atomically remove it. If two devices use this function simultaneously, one will get the first element and the the other will get the second element, or an error if there is no available element. When the element is available, the "FirstRemoved" event will be triggered.

# Description: 
RemoveFirstFromListMethods=RemoveFirstFromList

# Description: 
RemoveFirstMethodDescriptions=Return the first element of a list and atomically remove it. If two devices use this function simultaneously, one will get the first element and the the other will get the second element, or an error if there is no available element. When the element is available, the "FirstRemoved" event will be triggered.

# Description: 
RemoveFirstMethods=RemoveFirst

# Description: 
RequestBallotMethodDescriptions=Send a request for a ballot to the Web service specified by the property <code>ServiceURL</code>. When the completes, one of the following events will be raised\: <code>GotBallot</code>, <code>NoOpenPoll</code>, or <code>WebServiceError</code>.

# Description: 
RequestBallotMethods=RequestBallot

# Description: 
RequestDirectMessagesMethodDescriptions=Requests the 20 most recent direct messages sent to the logged-in user. When the messages have been retrieved, the system will raise the <code>DirectMessagesReceived</code> event and set the <code>DirectMessages</code> property to the list of messages.<p><u>Requirements</u>\: This should only be called after the <code>IsAuthorized</code> event has been raised, indicating that the user has successfully logged in to Twitter.</p>

# Description: 
RequestDirectMessagesMethods=RequestDirectMessages

# Description: 
RequestDirectionsMethodDescriptions=Request directions from the routing service.

# Description: 
RequestDirectionsMethods=RequestDirections

# Description: 
RequestFocusMethods=RequestFocus

# Description: 
RequestFollowersMethodDescriptions=Gets who is following you.

# Description: 
RequestFollowersMethods=RequestFollowers

# Description: 
RequestFriendTimelineMethodDescriptions=Gets the most recent 20 messages in the user''s timeline.

# Description: 
RequestFriendTimelineMethods=RequestFriendTimeline

# Description: 
RequestHeadersProperties=RequestHeaders

# Description: 
RequestHeadersPropertyDescriptions=The request headers, as a list of two-element sublists. The first element of each sublist represents the request header field name. The second element of each sublist represents the request header field values, either a single value or a list containing multiple values.

# Description: 
RequestMentionsMethodDescriptions=Requests the 20 most recent mentions of the logged-in user. When the mentions have been retrieved, the system will raise the <code>MentionsReceived</code> event and set the <code>Mentions</code> property to the list of mentions.<p><u>Requirements</u>\: This should only be called after the <code>IsAuthorized</code> event has been raised, indicating that the user has successfully logged in to Twitter.</p>

# Description: 
RequestMentionsMethods=RequestMentions

# Description: 
RequestTranslationMethodDescriptions=By providing a target language to translate to (for instance, ''es'' for Spanish, ''en'' for English, or ''ru'' for Russian), and a word or sentence to translate, this method will request a translation to the Yandex.Translate service.Once the text is translated by the external service, the event GotTranslation will be executed.Note\: Yandex.Translate will attempt to detect the source language. You can also specify prepending it to the language translation. I.e., es-ru will specify Spanish to Russian translation.

# Description: 
RequestTranslationMethods=RequestTranslation

# Description: 
ResetInputScaledValueMethodDescriptions=Reset the scaled value of an input sensor on the robot.

# Description: 
ResetInputScaledValueMethods=ResetInputScaledValue

# Description: 
ResetMethodDescriptions=Resets the step counter, distance measure and time running.

# Description: 
ResetMethods=Reset

# Description: 
ResetMotorPositionMethodDescriptions=Reset motor position.

# Description: 
ResetMotorPositionMethods=ResetMotorPosition

# Description: 
ResetTachoCountMethodDescriptions=Set the current tacho count to zero.

# Description: 
ResetTachoCountMethods=ResetTachoCount

# Description: 
ResolveActivityMethodDescriptions=Returns the name of the activity that corresponds to this ActivityStarter, or an empty string if no corresponding activity can be found.

# Description: 
ResolveActivityMethods=ResolveActivity

# Description: 
ResponseContentProperties=ResponseContent

# Description: 
ResponseContentPropertyDescriptions=Content of the last response as a dictionary.

# Description: 
ResponseFileNameProperties=ResponseFileName

# Description: 
ResponseFileNamePropertyDescriptions=The name of the file where the response should be saved. If SaveResponse is true and ResponseFileName is empty, then a new file name will be generated.

# Description: 
ResultNameProperties=ResultName

# Description: 
ResultNamePropertyDescriptions=Returns the name that will be used to retrieve a result from the activity.

# Description: 
ResultProperties=Result

# Description: 
ResultTypeProperties=ResultType

# Description: 
ResultTypePropertyDescriptions=Returns the MIME type from the activity.

# Description: 
ResultUriProperties=ResultUri

# Description: 
ResultUriPropertyDescriptions=Returns the URI from the activity.

# Description: 
ResumeMethods=Resume

# Description: 
ReverseDirectionProperties=ReverseDirection

# Description: 
ReverseDirectionPropertyDescriptions=Set whether the direction of motors is reversed or not.

# Description: 
RollProperties=Roll

# Description: 
RollPropertyDescriptions=Returns the roll angle of the device. To return meaningful values the sensor must be enabled.

# Description: 
RotateInDistanceMethodDescriptions=Rotate the motors in a distance.

# Description: 
RotateInDistanceMethods=RotateInDistance

# Description: 
RotateInDurationMethodDescriptions=Rotate the motors in a period of time.

# Description: 
RotateInDurationMethods=RotateInDuration

# Description: 
RotateInTachoCountsMethodDescriptions=Rotate the motors in a number of tacho counts.

# Description: 
RotateInTachoCountsMethods=RotateInTachoCounts

# Description: 
RotateIndefinitelyMethodDescriptions=Start to rotate the motors.

# Description: 
RotateIndefinitelyMethods=RotateIndefinitely

# Description: 
RotateSyncInDistanceMethodDescriptions=Rotate the motors at the same speed for a distance in cm.

# Description: 
RotateSyncInDistanceMethods=RotateSyncInDistance

# Description: 
RotateSyncInDurationMethodDescriptions=Rotate the motors at the same speed in a period of time.

# Description: 
RotateSyncInDurationMethods=RotateSyncInDuration

# Description: 
RotateSyncInTachoCountsMethodDescriptions=Rotate the motors at the same speed in a number of tacho counts.

# Description: 
RotateSyncInTachoCountsMethods=RotateSyncInTachoCounts

# Description: 
RotateSyncIndefinitelyMethodDescriptions=Start to rotate the motors at the same speed.

# Description: 
RotateSyncIndefinitelyMethods=RotateSyncIndefinitely

# Description: 
RotatesProperties=Rotates

# Description: 
RotatesPropertyDescriptions=Whether the image should rotate to match the ImageSprite''s heading. The sprite rotates around its centerpoint.

# Description: 
RotationAngleProperties=RotationAngle

# Description: 
RotationAnglePropertyDescriptions=Specifies the angle, in degrees, at which the image picture appears rotated.

# Description: 
RotationProperties=Rotation

# Description: 
RotationPropertyDescriptions=Sets or gets the rotation of the map in decimal degrees if any

# Description: 
RowPropertyDescriptions=Row property getter method.

# Description: 
RowsProperties=Rows

# Description: 
RowsPropertyDescriptions=Rows property getter method.

# Description: 
RunJavaScriptMethodDescriptions=Run JavaScript in the current page.

# Description: 
RunJavaScriptMethods=RunJavaScript

# Description: 
SaveAsMethodDescriptions=Saves a picture of this Canvas to the device''s external storage in the file named fileName. fileName must end with one of .jpg, .jpeg, or .png, which determines the file type.

# Description: 
SaveAsMethods=SaveAs

# Description: 
SaveFileMethodDescriptions=Saves text to a file. If the filename begins with a slash (/) the file is written to the sdcard. For example writing to /myFile.txt will write the file to /sdcard/myFile.txt. If the filename does not start with a slash, it will be written in the programs private data directory where it will not be accessible to other programs on the phone. There is a special exception for the AI Companion where these files are written to /sdcard/AppInventor/data to facilitate debugging. Note that this block will overwrite a file if it already exists.If you want to add content to a file use the append block.

# Description: 
SaveFileMethods=SaveFile

# Description: 
SaveMethods=Save

# Description: 
SaveResponseProperties=SaveResponse

# Description: 
SaveResponsePropertyDescriptions=Whether the response should be saved in a file.

# Description: 
SavedRecordingProperties=SavedRecording

# Description: 
SavedRecordingPropertyDescriptions=Specifies the path to the file where the recording should be stored. If this property is the empty string, then starting a recording will create a file in an appropriate location. If the property is not the empty string, it should specify a complete path to a file in an existing directory, including a file name with the extension .3gp.

# Description: 
ScalePictureToFitProperties=ScalePictureToFit

# Description: 
ScalePictureToFitPropertyDescriptions=Specifies whether the image should be resized to match the size of the ImageView.

# Description: 
ScaleUnitsProperties=ScaleUnits

# Description: 
ScaleUnitsPropertyDescriptions=Specifies the units used for the scale overlay. 1 (the default) will give metric units (km, m) whereas 2 will give imperial units (mi, ft).

# Description: A property for scaling images
ScalingProperties=Scaling

# Description: 
ScalingPropertyDescriptions=This property determines how the picture scales according to the Height or Width of the Image. Scale proportionally (0) preserves the picture aspect ratio. Scale to fit (1) matches the Image area, even if the aspect ratio changes.

# Description: 
ScopeProperties=Scope

# Description: 
ScopePropertyDescriptions=Indicates the current scope for operations such as ReadFrom and SaveFile.

# Description: 
ScreenHelpStringComponentPallette=Top-level component containing all other components in the program

# Description: 
ScreenOrientationChangedEventDescriptions=Screen orientation changed

# Description: 
ScreenOrientationChangedEvents=ScreenOrientationChanged

# Description: 
ScreenOrientationProperties=ScreenOrientation

# Description: 
ScreenOrientationPropertyDescriptions=The requested screen orientation, specified as a text value. Commonly used values are landscape, portrait, sensor, user and unspecified. See the Android developer documentation for ActivityInfo.Screen_Orientation for the complete list of possible settings.

# Description: 
Screen__AlignHorizontalPropertyDescriptions=A number that encodes how contents of the screen are aligned horizontally. The choices are\: 1 \= left aligned, 3 \= horizontally centered, 2 \= right aligned.

# Description: 
Screen__AlignVerticalPropertyDescriptions=A number that encodes how the contents of the arrangement are aligned vertically. The choices are\: 1 \= aligned at the top, 2 \= vertically centered, 3 \= aligned at the bottom. Vertical alignment has no effect if the screen is scrollable.

# Description: 
Screen__BackgroundColorPropertyDescriptions=BackgroundColor property getter method.

# Description: 
Screen__BackgroundImagePropertyDescriptions=The screen background image.

# Description: 
Screen__ErrorOccurredEventDescriptions=Event raised when an error occurs. Only some errors will raise this condition. For those errors, the system will show a notification by default. You can use this event handler to prescribe an error behavior different than the default.

# Description: 
Screen__HeightPropertyDescriptions=Screen height (y-size).

# Description: 
Screen__HideKeyboardMethodDescriptions=Hide the onscreen soft keyboard.

# Description: 
Screen__TitlePropertyDescriptions=The caption for the form, which apears in the title bar

# Description: 
Screen__WidthPropertyDescriptions=Screen width (x-size).

# Description: 
ScrollableProperties=Scrollable

# Description: 
ScrollablePropertyDescriptions=When checked, there will be a vertical scrollbar on the screen, and the height of the application can exceed the physical height of the device. When unchecked, the application height is constrained to the height of the device.

# Description: 
SdkLevelMethodDescriptions=Get the current Android SDK Level

# Description: 
SdkLevelMethods=SdkLevel

# Description: 
SearchResultsProperties=SearchResults

# Description: 
SearchResultsPropertyDescriptions=This property, which is initially empty, is set to a list of search results after the program\: <ol><li>Calls the <code>SearchTwitter</code> method.</li> <li>Waits for the <code>SearchSuccessful</code> event.</li></ol>The value of the property will then be the same as the parameter to <code>SearchSuccessful</code>. Note that it is not necessary to call the <code>Authorize</code> method before calling <code>SearchTwitter</code>.

# Description: 
SearchSuccessfulEventDescriptions=This event is raised when the results of the search requested through <code>SearchSuccessful</code> have been retrieved. A list of the results can then be found in the <code>results</code> parameter or the <code>Results</code> property.

# Description: 
SearchSuccessfulEvents=SearchSuccessful

# Description: 
SearchTwitterMethodDescriptions=This searches Twitter for the given String query.<p><u>Requirements</u>\: This should only be called after the <code>IsAuthorized</code> event has been raised, indicating that the user has successfully logged in to Twitter.</p>

# Description: 
SearchTwitterMethods=SearchTwitter

# Description: 
SecondMethodDescriptions=Returns the second of the minute (0-59) from the instant.

# Description: 
SecondMethods=Second

# Description: 
SecureProperties=Secure

# Description: 
SecurePropertyDescriptions=Whether to invoke SSP (Simple Secure Pairing), which is supported on devices with Bluetooth v2.1 or higher. When working with embedded Bluetooth devices, this property may need to be set to False. For Android 2.0-2.2, this property setting will be ignored.

# Description: 
SeekToMethodDescriptions=Seeks to the requested time (specified in milliseconds) in the video. If the video is paused, the frame shown will not be updated by the seek. The player can jump only to key frames in the video, so seeking to times that differ by short intervals may not actually move to different frames.

# Description: 
SeekToMethods=SeekTo

# Description: 
SelectionColorProperties=SelectionColor

# Description: 
SelectionColorPropertyDescriptions=The color of the item when it is selected.

# Description: 
SelectionDetailTextProperties=SelectionDetailText

# Description: 
SelectionDetailTextPropertyDescriptions=Returns the secondary text of the selected row in the ListView.

# Description: 
SelectionIndexProperties=SelectionIndex

# Description: 
SelectionProperties=Selection

# Description: 
Send1ByteNumberMethodDescriptions=Send a 1-byte number to the connected Bluetooth device.

# Description: 
Send1ByteNumberMethods=Send1ByteNumber

# Description: 
Send2ByteNumberMethodDescriptions=Send a 2-byte number to the connected Bluetooth device.

# Description: 
Send2ByteNumberMethods=Send2ByteNumber

# Description: 
Send4ByteNumberMethodDescriptions=Send a 4-byte number to the connected Bluetooth device.

# Description: 
Send4ByteNumberMethods=Send4ByteNumber

# Description: 
SendBallotMethodDescriptions=Send a completed ballot to the Web service. This should not be called until the properties <code>UserId</code> and <code>UserChoice</code> have been set by the application.

# Description: 
SendBallotMethods=SendBallot

# Description: 
SendBytesMethodDescriptions=Send a list of byte values to the connected Bluetooth device.

# Description: 
SendBytesMethods=SendBytes

# Description: 
SendMessageDirectMethodDescriptions=Send a text message. **Using this block will add [dangerous permissions](https\://developer.android.com/guide/topics/permissions/overview\#dangerous_permissions) that will require additional approval if your app is submitted to the Google Play Store.**

# Description: 
SendMessageDirectMethods=SendMessageDirect

# Description: 
SendMessageEvents=SendMessage

# Description: 
SendMessageMethods=SendMessage

# Description: 
SendQueryMethodDescriptions=Send the query to the Fusiontables server.

# Description: 
SendQueryMethods=SendQuery

# Description: 
SendTextMethodDescriptions=Send text to the connected Bluetooth device.

# Description: 
SendTextMethods=SendText

# Description: 
SensitivityProperties=Sensitivity

# Description: 
SensitivityPropertyDescriptions=A number that encodes how sensitive the accelerometer is. The choices are\: 1 \= weak, 2 \= moderate, 3 \= strong.

# Description: 
SensorPortProperties=SensorPort

# Description: 
SensorPortPropertyDescriptions=The sensor port that the sensor is connected to.

# Description: 
SensorValueChangedEventDescriptions=Called then the sensor value changed.

# Description: 
SensorValueChangedEventEnabledProperties=SensorValueChangedEventEnabled

# Description: 
SensorValueChangedEventEnabledPropertyDescriptions=Whether the SensorValueChanged event should fire when the sensor value changed.

# Description: 
SensorValueChangedEvents=SensorValueChanged

# Description: 
SerialHelpStringComponentPallette=Serial component which can be used to connect to devices like Arduino

# Description: 
ServerCommandFailureEventDescriptions=Indicates that a server command failed.

# Description: 
ServerCommandFailureEvents=ServerCommandFailure

# Description: 
ServerCommandMethodDescriptions=Sends the specified command to the game server.

# Description: 
ServerCommandMethods=ServerCommand

# Description: 
ServerCommandSuccessEventDescriptions=Indicates that a server command returned successfully.

# Description: 
ServerCommandSuccessEvents=ServerCommandSuccess

# Description: 
ServiceAccountEmailProperties=ServiceAccountEmail

# Description: 
ServiceAccountEmailPropertyDescriptions=The Service Account Email Address when service account authentication is in use.

# Description: 
ServiceURLProperties=ServiceURL

# Description: 
ServiceUrlProperties=ServiceUrl

# Description: 
ServiceUrlPropertyDescriptions=The URL of the game server.

# Description: 
SetAmbientModeMethodDescriptions=Make the sensor read the light level without reflected light.

# Description: 
SetAmbientModeMethods=SetAmbientMode

# Description: 
SetAngleModeMethodDescriptions=Measures the orientation of the sensor.

# Description: 
SetAngleModeMethods=SetAngleMode

# Description: 
SetBackgroundPixelColorMethodDescriptions=Sets the color of the specified point. This differs from DrawPoint by having an argument for color.

# Description: 
SetBackgroundPixelColorMethods=SetBackgroundPixelColor

# Description: 
SetBrickNameMethodDescriptions=Set the brick name of the robot.

# Description: 
SetBrickNameMethods=SetBrickName

# Description: 
SetCenterMethodDescriptions=Moves the Rectangle so that it is centered on the given latitude and longitude while attempting to maintain the width and height of the Rectangle as measured from the center to the edges.

# Description: 
SetCenterMethods=SetCenter

# Description: 
SetCmUnitMethodDescriptions=Measure the distance in centimeters.

# Description: 
SetCmUnitMethods=SetCmUnit

# Description: 
SetColorModeMethodDescriptions=Enter the color detection mode.

# Description: 
SetColorModeMethods=SetColorMode

# Description: 
SetDateToDisplayFromInstantMethodDescriptions=Allows the user to set the date from the instant to be displayed when the date picker opens.

# Description: 
SetDateToDisplayFromInstantMethods=SetDateToDisplayFromInstant

# Description: 
SetDateToDisplayMethodDescriptions=Allows the user to set the date to be displayed when the date picker opens.Valid values for the month field are 1-12 and 1-31 for the day field.

# Description: 
SetDateToDisplayMethods=SetDateToDisplay

# Description: 
SetInchUnitMethodDescriptions=Measure the distance in inches.

# Description: 
SetInchUnitMethods=SetInchUnit

# Description: 
SetInputModeMethodDescriptions=Configure an input sensor on the robot.

# Description: 
SetInputModeMethods=SetInputMode

# Description: 
SetInstanceMethodDescriptions=Sets InstanceId and joins the specified instance.

# Description: 
SetInstanceMethods=SetInstance

# Description: 
SetLeaderMethodDescriptions=Tells the server to set the leader to playerId. Only the current leader may successfully set a new leader.

# Description: 
SetLeaderMethods=SetLeader

# Description: 
SetLocationMethods=SetLocation

# Description: 
SetOutputStateMethodDescriptions=Sets the output state of a motor on the robot.

# Description: 
SetOutputStateMethods=SetOutputState

# Description: 
SetRateModeMethodDescriptions=Measures the angular velocity of the sensor.

# Description: 
SetRateModeMethods=SetRateMode

# Description: 
SetReflectedModeMethodDescriptions=Make the sensor read the light level with reflected light.

# Description: 
SetReflectedModeMethods=SetReflectedMode

# Description: 
SetStatusMethods=SetStatus

# Description: 
SetTimeToDisplayFromInstantMethodDescriptions=Set the time from the instant to be shown in the Time Picker dialog. Current time is shown by default.

# Description: 
SetTimeToDisplayFromInstantMethods=SetTimeToDisplayFromInstant

# Description: 
SetTimeToDisplayMethodDescriptions=Set the time to be shown in the Time Picker popup. Current time is shown by default.

# Description: 
SetTimeToDisplayMethods=SetTimeToDisplay

# Description: 
ShakingEventDescriptions=Indicates the device started being shaken or continues to be shaken.

# Description: 
ShakingEvents=Shaking

# Description: 
ShapeProperties=Shape

# Description: 
ShareFileMethodDescriptions=Shares a file through any capable application installed on the phone by displaying a list of the available apps and allowing the user to choose one from the list. The selected app will open with the file inserted on it.

# Description: 
ShareFileMethods=ShareFile

# Description: 
ShareFileWithMessageMethodDescriptions=Shares both a file and a message through any capable application installed on the phone by displaying a list of available apps and allowing the user to choose one from the list. The selected app will open with the file and message inserted on it.

# Description: 
ShareFileWithMessageMethods=ShareFileWithMessage

# Description: 
ShareMessageMethodDescriptions=Shares a message through any capable application installed on the phone by displaying a list of the available apps and allowing the user to choose one from the list. The selected app will open with the message inserted on it.

# Description: 
ShareMessageMethods=ShareMessage

# Description: 
SharingHelpStringComponentPallette=Sharing is a non-visible component that enables sharing files and/or messages between your app and other apps installed on a device. The component will display a list of the installed apps that can handle the information provided, and will allow the user to choose one to share the content with, for instance a mail app, a social network app, a texting app, and so on.<br>The file path can be taken directly from other components such as the Camera or the ImagePicker, but can also be specified directly to read from storage. Be aware that different devices treat storage differently, so a few things to try if, for instance, you have a file called arrow.gif in the folder <code>Appinventor/assets</code>, would be\: <ul><li><code>"file\:///sdcard/Appinventor/assets/arrow.gif"</code></li> or <li><code>"/storage/Appinventor/assets/arrow.gif"</code></li></ul>

# Description: 
ShowAlertMethodDescriptions=Display a temporary notification.

# Description: 
ShowAlertMethods=ShowAlert

# Description: 
ShowChooseDialogMethodDescriptions=Shows a dialog box with two buttons, from which the user can choose. If cancelable is true there will be an additional CANCEL button. Pressing a button will raise the AfterChoosing event. The "choice" parameter to AfterChoosing will be the text on the button that was pressed, or "Cancel" if the CANCEL button was pressed.

# Description: 
ShowChooseDialogMethods=ShowChooseDialog

# Description: 
ShowCompassProperties=ShowCompass

# Description: 
ShowCompassPropertyDescriptions=Show a compass on the map. If the device provides a digital compass, orientation changes will be used to rotate the compass icon.

# Description: 
ShowFeedbackProperties=ShowFeedback

# Description: 
ShowFilterBarProperties=ShowFilterBar

# Description: 
ShowInfoboxMethods=ShowInfobox

# Description: 
ShowListsAsJsonProperties=ShowListsAsJson

# Description: 
ShowListsAsJsonPropertyDescriptions=If false, lists will be converted to strings using Lisp notation, i.e., as symbols separated by spaces, e.g., (a 1 b2 (c d). If true, lists will appear as in Json or Python, e.g. ["a", 1, "b", 2, ["c", "d"]]. This property appears only in Screen 1, and the value for Screen 1 determines the behavior for all screens. The property defaults to "true" meaning that the App Inventor programmer must explicitly set it to "false" if Lisp syntax is desired. In older versions of App Inventor, this setting defaulted to false. Older projects should not have been affected by this default settings update.

# Description: 
ShowLoadingDialogProperties=ShowLoadingDialog

# Description: 
ShowLoadingDialogPropertyDescriptions=Setter for the loading dialog''s visibility.

# Description: 
ShowMessageDialogMethodDescriptions=Display an alert dialog with a single button that dismisses the alert.

# Description: 
ShowMessageDialogMethods=ShowMessageDialog

# Description: 
ShowPasswordDialogMethodDescriptions=Shows a dialog box where the user can enter password (input is masked), after which the AfterTextInput event will be raised. If cancelable is true there will be an additional CANCEL button. Entering password will raise the AfterTextInput event. The "response" parameter to AfterTextInput will be the entered password, or "Cancel" if CANCEL button was pressed.

# Description: 
ShowPasswordDialogMethods=ShowPasswordDialog

# Description: 
ShowProgressDialogMethodDescriptions=Shows a dialog box with an optional title and message (use empty strings if they are not wanted). This dialog box contains a spinning artifact to indicate that the program is working. It cannot be canceled by the user but must be dismissed by the App Inventor Program by using the DismissProgressDialog block.

# Description: 
ShowProgressDialogMethods=ShowProgressDialog

# Description: 
ShowScaleProperties=ShowScale

# Description: 
ShowScalePropertyDescriptions=Shows or hides a scale overlay on the

# Description: 
ShowShadowPropertyDescriptions=Gets whether or not the shadow of the Marker is shown.

# Description: 
ShowStatusBarProperties=ShowStatusBar

# Description: 
ShowStatusBarPropertyDescriptions=The status bar is the topmost bar on the screen. This property reports whether the status bar is visible.

# Description: 
ShowTextDialogMethodDescriptions=Shows a dialog box where the user can enter text, after which the AfterTextInput event will be raised. If cancelable is true there will be an additional CANCEL button. Entering text will raise the AfterTextInput event. The "response" parameter to AfterTextInput will be the text that was entered, or "Cancel" if the CANCEL button was pressed.

# Description: 
ShowTextDialogMethods=ShowTextDialog

# Description: 
ShowUserProperties=ShowUser

# Description: 
ShowUserPropertyDescriptions=Shows or hides an icon indicating the user''s current location on the

# Description: 
ShowZoomProperties=ShowZoom

# Description: 
ShowZoomPropertyDescriptions=Shows or hides an icon indicating the user''s current location on the

# Description: 
SimpleStepEventDescriptions=This event is run when a raw step is detected.

# Description: 
SimpleStepEvents=SimpleStep

# Description: 
SimpleStepsProperties=SimpleSteps

# Description: 
SimpleStepsPropertyDescriptions=The number of simple steps taken since the pedometer has started.

# Description: 
SizingProperties=Sizing

# Description: 
SizingPropertyDescriptions=If set to fixed, screen layouts will be created for a single fixed-size screen and autoscaled. If set to responsive, screen layouts will use the actual resolution of the device. See the documentation on responsive design in App Inventor for more information. This property appears on Screen1 only and controls the sizing for all screens in the app.

# Description: 
SliderHelpStringComponentPallette=A Slider is a progress bar that adds a draggable thumb. You can touch the thumb and drag left or right to set the slider thumb position. As the Slider thumb is dragged, it will trigger the PositionChanged event, reporting the position of the Slider thumb. The reported position of the Slider thumb can be used to dynamically update another component attribute, such as the font size of a TextBox or the radius of a Ball.

# Description: 
Slider__HeightPercentPropertyDescriptions=Specifies the vertical height of the Slider as a percentage of the height of the Screen.

# Description: 
Slider__VisiblePropertyDescriptions=Specifies whether the Slider should be visible on the screen. Value is true if the Slider is showing and false if hidden.

# Description: 
Slider__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Slider as a percentage of the width of the Screen.

# Description: 
Slider__WidthPropertyDescriptions=Specifies the horizontal width of the Slider, measured in pixels.

# Description: 
SoundErrorEventDescriptions=The SoundError event is no longer used. Please use the Screen.ErrorOccurred event instead.

# Description: 
SoundHelpStringComponentPallette=<p>A multimedia component that plays sound files and optionally vibrates for the number of milliseconds (thousandths of a second) specified in the Blocks Editor. The name of the sound file to play can be specified either in the Designer or in the Blocks Editor.</p> <p>For supported sound file formats, see <a href\="http\://developer.android.com/guide/appendix/media-formats.html" target\="_blank">Android Supported Media Formats</a>.</p><p>This <code>Sound</code> component is best for short sound files, such as sound effects, while the <code>Player</code> component is more efficient for longer sounds, such as songs.</p><p>You might get an error if you attempt to play a sound immeditely after setting the source.</p>

# Description: 
SoundRecorderHelpStringComponentPallette=<p>Multimedia component that records audio.</p>

# Description: 
SoundRecorder__StartMethodDescriptions=Starts recording.

# Description: 
SoundRecorder__StopMethodDescriptions=Stops recording.

# Description: 
Sound__MinimumIntervalPropertyDescriptions=The minimum interval, in milliseconds, between sounds. If you play a sound, all further Play() calls will be ignored until the interval has elapsed.

# Description: 
Sound__PauseMethodDescriptions=Pauses playing the sound if it is being played.

# Description: 
Sound__ResumeMethodDescriptions=Resumes playing the sound after a pause.

# Description: 
Sound__SourcePropertyDescriptions=The name of the sound file. Only certain formats are supported. See http\://developer.android.com/guide/appendix/media-formats.html.

# Description: 
Sound__StopMethodDescriptions=Stops playing the sound if it is being played.

# Description: 
Sound__VibrateMethodDescriptions=Vibrates for the specified number of milliseconds.

# Description: 
SourceProperties=Source

# Description: 
SouthLatitudeProperties=SouthLatitude

# Description: 
SouthLatitudePropertyDescriptions=The south edge of the rectangle, in decimal degrees north of the equator.

# Description: 
SpeakMethodDescriptions=Speaks the given message.

# Description: 
SpeakMethods=Speak

# Description: 
SpeechRateProperties=SpeechRate

# Description: 
SpeechRatePropertyDescriptions=Sets the SpeechRate for TextToSpeech. The values should be between 0 and 2 where lower values slow down the pitch and greater values accelerate it.

# Description: 
SpeechRecognizerHelpStringComponentPallette=Component for using Voice Recognition to convert from speech to text

# Description: 
SpeechRecognizer__LanguagePropertyDescriptions=Suggests the language to use for recognizing speech. An empty string (the default) will use the system''s default language. Language is specified using an IETF language tag, such as en-US or es-MX.

# Description: 
SpeechRecognizer__ResultPropertyDescriptions=Returns the last text produced by the recognizer.

# Description: 
SpeechRecognizer__StopMethodDescriptions=Function used to forcefully stop listening speech in cases where SpeechRecognizer cannot stop automatically. This function works only when the

# Description: 
SpeedProperties=Speed

# Description: 
SpinnerHelpStringComponentPallette=<p>A spinner component that displays a pop-up with a list of elements. These elements can be set in the Designer or Blocks Editor by setting the<code>ElementsFromString</code> property to a string-separated concatenation (for example, <em>choice 1, choice 2, choice 3</em>) or by setting the <code>Elements</code> property to a List in the Blocks editor. Spinners are created with the first item already selected. So selecting it does not generate an After Picking event. Consequently it''s useful to make the first Spinner item be a non-choice like "Select from below...". </p>

# Description: 
Spinner__ElementsFromStringPropertyDescriptions=Sets the Spinner list to the elements passed in the comma-separated string

# Description: 
Spinner__ElementsPropertyDescriptions=returns a list of text elements to be picked from.

# Description: 
Spinner__HeightPercentPropertyDescriptions=Specifies the vertical height of the Spinner as a percentage of the height of the Screen.

# Description: 
Spinner__HeightPropertyDescriptions=Specifies the vertical height of the Spinner, measured in pixels.

# Description: 
Spinner__SelectionIndexPropertyDescriptions=The index of the currently selected item, starting at 1. If no item is selected, the value will be 0.

# Description: 
Spinner__SelectionPropertyDescriptions=Returns the current selected item in the spinner

# Description: 
Spinner__VisiblePropertyDescriptions=Specifies whether the Spinner should be visible on the screen. Value is true if the Spinner is showing and false if hidden.

# Description: 
Spinner__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Spinner as a percentage of the width of the Screen.

# Description: 
Spinner__WidthPropertyDescriptions=Specifies the horizontal width of the Spinner, measured in pixels.

# Description: 
StartActivityMethodDescriptions=Start the activity corresponding to this ActivityStarter.

# Description: 
StartActivityMethods=StartActivity

# Description: 
StartDragEventDescriptions=The user started a drag operation.

# Description: 
StartDragEvents=StartDrag

# Description: 
StartLatitudeProperties=StartLatitude

# Description: 
StartLatitudePropertyDescriptions=The latitude of the start location.

# Description: 
StartLocationProperties=StartLocation

# Description: 
StartLocationPropertyDescriptions=Set the start location.

# Description: 
StartLongitudeProperties=StartLongitude

# Description: 
StartLongitudePropertyDescriptions=The longitude of the start location.

# Description: 
StartMethods=Start

# Description: 
StartProgramMethodDescriptions=Start execution of a previously downloaded program on the robot.

# Description: 
StartProgramMethods=StartProgram

# Description: 
StartedMovingEventDescriptions=This event has been deprecated.

# Description: 
StartedMovingEvents=StartedMoving

# Description: 
StartedRecordingEventDescriptions=Indicates that the recorder has started, and can be stopped.

# Description: 
StartedRecordingEvents=StartedRecording

# Description: 
StatusChangedEventDescriptions=Indicates that the status of the location provider service has changed, such as when a provider is lost or a new provider starts being used.

# Description: 
StatusChangedEvents=StatusChanged

# Description: 
StopAcceptingMethodDescriptions=Stop accepting an incoming connection.

# Description: 
StopAcceptingMethods=StopAccepting

# Description: 
StopBeforeDisconnectProperties=StopBeforeDisconnect

# Description: 
StopDetectionTimeoutProperties=StopDetectionTimeout

# Description: 
StopDetectionTimeoutPropertyDescriptions=The duration in milliseconds of idleness (no steps detected) after which to go into a "stopped" state

# Description: 
StopDragEventDescriptions=The user stopped a drag operation.

# Description: 
StopDragEvents=StopDrag

# Description: 
StopFollowingMethodDescriptions=Stops following a user.

# Description: 
StopFollowingMethods=StopFollowing

# Description: 
StopLoadingMethodDescriptions=Stop loading a page.

# Description: 
StopLoadingMethods=StopLoading

# Description: 
StopMethods=Stop

# Description: 
StopProgramMethodDescriptions=Stop execution of the currently running program on the robot.

# Description: 
StopProgramMethods=StopProgram

# Description: 
StopSoundMethodDescriptions=Stop any sound on the robot.

# Description: 
StopSoundMethods=StopSound

# Description: 
StopSoundPlaybackMethodDescriptions=Stop sound playback.

# Description: 
StopSoundPlaybackMethods=StopSoundPlayback

# Description: 
StoppedMovingEventDescriptions=This event has been deprecated.

# Description: 
StoppedMovingEvents=StoppedMoving

# Description: 
StoppedRecordingEventDescriptions=Indicates that the recorder has stopped, and can be started again.

# Description: 
StoppedRecordingEvents=StoppedRecording

# Description: 
StoreValueMethods=StoreValue

# Description: 
StrideLengthProperties=StrideLength

# Description: 
StrideLengthPropertyDescriptions=Set the average stride length in meters.

# Description: 
StrokeColorProperties=StrokeColor

# Description: 
StrokeOpacityProperties=StrokeOpacity

# Description: 
StrokeOpacityPropertyDescriptions=The opacity of the stroke used to outline the map feature.

# Description: 
StrokeWidthProperties=StrokeWidth

# Description: 
SwitchHelpStringComponentPallette=Toggle switch that raises an event when the user clicks on it. There are many properties affecting its appearance that can be set in the Designer or Blocks Editor.

# Description: 
Switch__BackgroundColorPropertyDescriptions=The background color of the Switch as an alpha-red-green-blue integer.

# Description: 
Switch__ChangedEventDescriptions=User change the state of the `Switch` from On to Off or back.

# Description: 
Switch__EnabledPropertyDescriptions=True if the Switch is active and clickable.

# Description: 
Switch__FontBoldPropertyDescriptions=Set to true if the text of the Switch should be bold.

# Description: 
Switch__FontItalicPropertyDescriptions=Set to true if the text of the Switch should be italic.

# Description: 
Switch__FontSizePropertyDescriptions=Specifies the text font size of the Switch in scale-independent pixels.

# Description: 
Switch__FontTypefacePropertyDescriptions=Specifies the text font face of the Switch.

# Description: 
Switch__GotFocusEventDescriptions=Switch became the focused component.

# Description: 
Switch__HeightPercentPropertyDescriptions=Specifies the vertical height of the Switch as a percentage of the height of the Screen.

# Description: 
Switch__HeightPropertyDescriptions=Specifies the vertical height of the Switch, measured in pixels.

# Description: 
Switch__LostFocusEventDescriptions=Switch stopped being the focused component.

# Description: 
Switch__TextColorPropertyDescriptions=Specifies the text color of the Switch as an alpha-red-green-blue integer.

# Description: 
Switch__TextPropertyDescriptions=Specifies the text displayed by the Switch.

# Description: 
Switch__VisiblePropertyDescriptions=Specifies whether the Switch should be visible on the screen. Value is true if the Switch is showing and false if hidden.

# Description: 
Switch__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Switch as a percentage of the width of the Screen.

# Description: 
Switch__WidthPropertyDescriptions=Specifies the horizontal width of the Switch, measured in pixels.

# Description: 
SystemTimeMethodDescriptions=Returns the phone''s internal time.

# Description: 
SystemTimeMethods=SystemTime

# Description: 
TableArrangementHelpStringComponentPallette=<p>A formatting element in which to place components that should be displayed in tabular form.</p>

# Description: 
TableArrangement__HeightPercentPropertyDescriptions=Specifies the vertical height of the TableArrangement as a percentage of the height of the Screen.

# Description: 
TableArrangement__HeightPropertyDescriptions=Specifies the vertical height of the TableArrangement, measured in pixels.

# Description: 
TableArrangement__VisiblePropertyDescriptions=Specifies whether the TableArrangement should be visible on the screen. Value is true if the TableArrangement is showing and false if hidden.

# Description: 
TableArrangement__WidthPercentPropertyDescriptions=Specifies the horizontal width of the TableArrangement as a percentage of the width of the Screen.

# Description: 
TableArrangement__WidthPropertyDescriptions=Specifies the horizontal width of the TableArrangement, measured in pixels.

# Description: 
TachoCountChangedEventDescriptions=Called when the tacho count has changed.

# Description: 
TachoCountChangedEventEnabledProperties=TachoCountChangedEventEnabled

# Description: 
TachoCountChangedEventEnabledPropertyDescriptions=Whether the TachoCountChanged event should fire when the angle is changed.

# Description: 
TachoCountChangedEvents=TachoCountChanged

# Description: 
TagListEventDescriptions=Event triggered when we have received the list of known tags. Used with the "GetTagList" Function.

# Description: 
TagListEvents=TagList

# Description: 
TagReadEventDescriptions=Indicates that a new tag has been detected. Currently this is only a plain text tag, as specified in the manifest.

# Description: 
TagReadEvents=TagRead

# Description: 
TagWrittenEventDescriptions=Indicates that a tag has come into range of the NFC sensor and has been written.

# Description: 
TagWrittenEvents=TagWritten

# Description: 
TakePictureMethodDescriptions=Takes a picture, then raises the

# Description: 
TakePictureMethods=TakePicture

# Description: 
TapAtPointEventDescriptions=The user tapped at a point on the map.

# Description: 
TapAtPointEvents=TapAtPoint

# Description: 
TapThresholdProperties=TapThreshold

# Description: 
TapThresholdPropertyDescriptions=Set the number of pixels right, left, up or down, a sequence of drags mustmove from the starting point to be considered a drag (instead of a touch).

# Description: 
TemperatureChangedEventDescriptions=Called when a change is detected in the temperature (in degrees Celsius).

# Description: 
TemperatureChangedEvents=TemperatureChanged

# Description: 
TemperatureProperties=Temperature

# Description: 
TemperaturePropertyDescriptions=The temperature in degrees Celsius, if the sensor is available and enabled

# Description: 
TextAlignmentProperties=TextAlignment

# Description: 
TextBoxHelpStringComponentPallette=<p>A box for the user to enter text. The initial or user-entered text value is in the <code>Text</code> property. If blank, the <code>Hint</code> property, which appears as faint text in the box, can provide the user with guidance as to what to type.</p><p>The <code>MultiLine</code> property determines if the text can havemore than one line. For a single line text box, the keyboard will closeautomatically when the user presses the Done key. To close the keyboard for multiline text boxes, the app should use the HideKeyboard method or rely on the user to press the Back key.</p><p>The <code> NumbersOnly</code> property restricts the keyboard to acceptnumeric input only.</p><p>Other properties affect the appearance of the text box (<code>TextAlignment</code>, <code>BackgroundColor</code>, etc.) and whether it can be used (<code>Enabled</code>).</p><p>Text boxes are usually used with the <code>Button</code> component, with the user clicking on the button when text entry is complete.</p><p>If the text entered by the user should not be displayed, use <code>PasswordTextBox</code> instead.</p>

# Description: 
TextBox__BackgroundColorPropertyDescriptions=The background color of the input box. You can choose a color by name in the Designer or in the Blocks Editor. The default background color is ''default'' (shaded 3-D look).

# Description: 
TextBox__EnabledPropertyDescriptions=Whether the user can enter text into the TextBox. By default, this is true.

# Description: 
TextBox__FontBoldPropertyDescriptions=Whether the font for the text should be bold. By default, it is not.

# Description: 
TextBox__FontItalicPropertyDescriptions=Whether the text should appear in italics. By default, it does not.

# Description: 
TextBox__FontSizePropertyDescriptions=The font size for the text. By default, it is 14.0 points.

# Description: 
TextBox__FontTypefacePropertyDescriptions=The font for the text. The value can be changed in the Designer.

# Description: 
TextBox__GotFocusEventDescriptions=Event raised when the TextBox is selected for input, such as by the user touching it.

# Description: 
TextBox__HeightPercentPropertyDescriptions=Specifies the vertical height of the TextBox as a percentage of the height of the Screen.

# Description: 
TextBox__HeightPropertyDescriptions=Specifies the vertical height of the TextBox, measured in pixels.

# Description: 
TextBox__HideKeyboardMethodDescriptions=Hide the keyboard. Only multiline text boxes need this. Single line text boxes close the keyboard when the users presses the Done key.

# Description: 
TextBox__HintPropertyDescriptions=Text that should appear faintly in the TextBox to provide a hint as to what the user should enter. This can only be seen if the Text property is empty.

# Description: 
TextBox__LostFocusEventDescriptions=Event raised when the TextBox is no longer selected for input, such as if the user touches a different text box.

# Description: 
TextBox__NumbersOnlyPropertyDescriptions=If true, then this text box accepts only numbers as keyboard input. Numbers can include a decimal point and an optional leading minus sign. This applies to keyboard input only. Even if NumbersOnly is true, you can use [set Text to] to enter any text at all.

# Description: 
TextBox__RequestFocusMethodDescriptions=Sets the TextBox active.

# Description: 
TextBox__TextAlignmentPropertyDescriptions=Whether the text should be left justified, centered, or right justified. By default, text is left justified.

# Description: 
TextBox__TextColorPropertyDescriptions=The color for the text. You can choose a color by name in the Designer or in the Blocks Editor. The default text color is black.

# Description: 
TextBox__TextPropertyDescriptions=Returns the textbox contents.

# Description: 
TextBox__VisiblePropertyDescriptions=Specifies whether the TextBox should be visible on the screen. Value is true if the TextBox is showing and false if hidden.

# Description: 
TextBox__WidthPercentPropertyDescriptions=Specifies the horizontal width of the TextBox as a percentage of the width of the Screen.

# Description: 
TextBox__WidthPropertyDescriptions=Specifies the horizontal width of the TextBox, measured in pixels.

# Description: 
TextColorDetailProperties=TextColorDetail

# Description: 
TextColorDetailPropertyDescriptions=The text color of DetailText of listview stringItems.

# Description: 
TextColorProperties=TextColor

# Description: 
TextInputCanceledEventDescriptions=Event raised when the user canceled ShowTextDialog.

# Description: 
TextInputCanceledEvents=TextInputCanceled

# Description: 
TextProperties=Text

# Description: 
TextSizeProperties=TextSize

# Description: 
TextSizePropertyDescriptions=The text size of the listview items.

# Description: 
TextToSpeechHelpStringComponentPallette=The TextToSpeech component speaks a given text aloud. You can set the pitch and the rate of speech. <p>You can also set a language by supplying a language code. This changes the pronunciation of words, not the actual language spoken. For example, setting the language to French and speaking English text will sound like someone speaking English (en) with a French accent.</p> <p>You can also specify a country by supplying a country code. This can affect the pronunciation. For example, British English (GBR) will sound different from US English (USA). Not every country code will affect every language.</p> <p>The languages and countries available depend on the particular device, and can be listed with the AvailableLanguages and AvailableCountries properties.</p>

# Description: 
TextToSpeech__LanguagePropertyDescriptions=Sets the language for TextToSpeech. This changes the way that words are pronounced, not the actual language that is spoken. For example setting the language to and speaking English text with sound like someone speaking English with a French accent.

# Description: 
TextToSpeech__PitchPropertyDescriptions=Sets the Pitch for TextToSpeech The values should be between 0 and 2 where lower values lower the tone of synthesized voice and greater values raise it.

# Description: 
TextToSpeech__ResultPropertyDescriptions=Returns `true

# Description: 
TextToWriteProperties=TextToWrite

# Description: 
TextToWritePropertyDescriptions=Returns the content of the text that''s going to be written to the tag.

# Description: 
TextingHelpStringComponentPallette=<p>A component that will, when the <code>SendMessage</code> method is called, send the text message specified in the <code>Message</code> property to the phone number specified in the <code>PhoneNumber</code> property.</p> <p>If the <code>ReceivingEnabled</code> property is set to 1 messages will <b>not</b> be received. If <code>ReceivingEnabled</code> is set to 2 messages will be received only when the application is running. Finally if <code>ReceivingEnabled</code> is set to 3, messages will be received when the application is running <b>and</b> when the application is not running they will be queued and a notification displayed to the user.</p> <p>When a message arrives, the <code>MessageReceived</code> event is raised and provides the sending number and message.</p> <p> An app that includes this component will receive messages even when it is in the background (i.e. when it''s not visible on the screen) and, moreso, even if the app is not running, so long as it''s installed on the phone. If the phone receives a text message when the app is not in the foreground, the phone will show a notification in the notification bar. Selecting the notification will bring up the app. As an app developer, you''ll probably want to give your users the ability to control ReceivingEnabled so that they can make the phone ignore text messages.</p> <p>If the GoogleVoiceEnabled property is true, messages can be sent over Wifi using Google Voice. This option requires that the user have a Google Voice account and that the mobile Voice app is installed on the phone. The Google Voice option works only on phones that support Android 2.0 (Eclair) or higher.</p> <p>To specify the phone number (e.g., 650-555-1212), set the <code>PhoneNumber</code> property to a Text string with the specified digits (e.g., 6505551212). Dashes, dots, and parentheses may be included (e.g., (650)-555-1212) but will be ignored; spaces may not be included.</p> <p>Another way for an app to specify a phone number would be to include a <code>PhoneNumberPicker</code> component, which lets the users select a phone numbers from the ones stored in the the phone''s contacts.</p>

# Description: 
Texting__PhoneNumberPropertyDescriptions=Sets the phone number to send the text message to when the SendMessage function is called.

# Description: 
Texting__SendMessageMethodDescriptions=Launch the phone''s default text messaging app with the message and phone number prepopulated.

# Description: 
ThemeProperties=Theme

# Description: 
ThemePropertyDescriptions=Sets the theme used by the application.

# Description: 
ThermometerHelpStringComponentPallette=A sensor component that can measure the ambient (external) temperature. Most Android devices do not have this sensor.

# Description: 
Thermometer__AvailablePropertyDescriptions=Specifies whether or not the device has the hardware to support the Thermometer component.

# Description: 
Thermometer__EnabledPropertyDescriptions=If enabled, then device will listen for changes.

# Description: 
ThumbColorActiveProperties=ThumbColorActive

# Description: 
ThumbColorActivePropertyDescriptions=Returns the `Switch`''s thumb color (button that toggles back and forth) when the switch is ON/Checked

# Description: 
ThumbColorInactiveProperties=ThumbColorInactive

# Description: 
ThumbColorInactivePropertyDescriptions=Returns the `Switch`''s thumb color (button that toggles back and forth) when the switch is Off/Unchecked

# Description: 
ThumbEnabledProperties=ThumbEnabled

# Description: 
ThumbEnabledPropertyDescriptions=Sets whether or not to display the slider thumb.

# Description: 
ThumbPositionProperties=ThumbPosition

# Description: 
ThumbPositionPropertyDescriptions=Sets the position of the slider thumb. If this value is greater than MaxValue, then it will be set to same value as MaxValue. If this value is less than MinValue, then it will be set to same value as MinValue.

# Description: 
TimeIntervalProperties=TimeInterval

# Description: 
TimeIntervalPropertyDescriptions=Determines the minimum time interval, in milliseconds, that the sensor will try to use for sending out location updates. However, location updates will only be received when the location of the phone actually changes, and use of the specified time interval is not guaranteed. For example, if 1000 is used as the time interval, location updates will never be fired sooner than 1000ms, but they may be fired anytime after.

# Description: 
TimePickerHelpStringComponentPallette=<p>A button that, when clicked on, launches a popup dialog to allow the user to select a time.</p>

# Description: 
TimePicker__BackgroundColorPropertyDescriptions=Returns the button''s background color

# Description: 
TimePicker__EnabledPropertyDescriptions=If set, user can tap TimePicker to cause action.

# Description: 
TimePicker__FontBoldPropertyDescriptions=If set, TimePicker text is displayed in bold.

# Description: 
TimePicker__FontItalicPropertyDescriptions=If set, TimePicker text is displayed in italics.

# Description: 
TimePicker__FontSizePropertyDescriptions=Point size for TimePicker text.

# Description: 
TimePicker__FontTypefacePropertyDescriptions=Font family for TimePicker text.

# Description: 
TimePicker__GotFocusEventDescriptions=Indicates the cursor moved over the TimePicker so it is now possible to click it.

# Description: 
TimePicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the TimePicker as a percentage of the height of the Screen.

# Description: 
TimePicker__HeightPropertyDescriptions=Specifies the vertical height of the TimePicker, measured in pixels.

# Description: 
TimePicker__ImagePropertyDescriptions=Image to display on button.

# Description: 
TimePicker__InstantPropertyDescriptions=The instant of the last time set using the time picker

# Description: 
TimePicker__LaunchPickerMethodDescriptions=Launches the TimePicker dialog.

# Description: 
TimePicker__LostFocusEventDescriptions=Indicates the cursor moved away from the TimePicker so it is now no longer possible to click it.

# Description: 
TimePicker__ShapePropertyDescriptions=Returns the style of the `TimePicker`.

# Description: 
TimePicker__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a TimePicker that has an image as background.

# Description: 
TimePicker__TextAlignmentPropertyDescriptions=Left, center, or right.

# Description: 
TimePicker__TextColorPropertyDescriptions=Color for button text.

# Description: 
TimePicker__TextPropertyDescriptions=Text to display on TimePicker.

# Description: 
TimePicker__TouchDownEventDescriptions=Indicates that the TimePicker was pressed down.

# Description: 
TimePicker__TouchUpEventDescriptions=Indicates that the TimePicker has been released.

# Description: 
TimePicker__VisiblePropertyDescriptions=Specifies whether the TimePicker should be visible on the screen. Value is true if the TimePicker is showing and false if hidden.

# Description: 
TimePicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the TimePicker as a percentage of the width of the Screen.

# Description: 
TimePicker__WidthPropertyDescriptions=Specifies the horizontal width of the TimePicker, measured in pixels.

# Description: 
TimedOutEventDescriptions=Event indicating that a request has timed out.

# Description: 
TimedOutEvents=TimedOut

# Description: 
TimeoutProperties=Timeout

# Description: 
TimeoutPropertyDescriptions=The number of milliseconds that a web request will wait for a response before giving up. If set to 0, then there is no time limit on how long the request will wait.

# Description: 
TimerAlwaysFiresProperties=TimerAlwaysFires

# Description: 
TimerAlwaysFiresPropertyDescriptions=Will fire even when application is not showing on the screen if true

# Description: 
TimerEnabledProperties=TimerEnabled

# Description: 
TimerEnabledPropertyDescriptions=Fires timer if true

# Description: 
TimerEventDescriptions=The Timer event runs when the timer has gone off.

# Description: 
TimerEvents=Timer

# Description: 
TimerIntervalProperties=TimerInterval

# Description: 
TimerIntervalPropertyDescriptions=Interval between timer events in ms

# Description: 
TinyDBHelpStringComponentPallette=TinyDB is a non-visible component that stores data for an app. <p> Apps created with App Inventor are initialized each time they run\: If an app sets the value of a variable and the user then quits the app, the value of that variable will not be remembered the next time the app is run. In contrast, TinyDB is a <em> persistent </em> data store for the app, that is, the data stored there will be available each time the app is run. An example might be a game that saves the high score and retrieves it each time the game is played. </<p> <p> Data items are strings stored under <em>tags</em> . To store a data item, you specify the tag it should be stored under. Subsequently, you can retrieve the data that was stored under a given tag. </p><p> There is only one data store per app. Even if you have multiple TinyDB components, they will use the same data store. To get the effect of separate stores, use different keys. Also each app has its own data store. You cannot use TinyDB to pass data between two different apps on the phone, although you <em>can</em> use TinyDb to shares data between the different screens of a multi-screen app. </p> <p>When you are developing apps using the AI Companion, all the apps using that companion will share the same TinyDb. That sharing will disappear once the apps are packaged. But, during development, you should be careful to clear the TinyDb each time you start working on a new app.</p>

# Description: 
TinyDB__ClearTagMethodDescriptions=Clear the entry with the given tag.

# Description: 
TinyDB__GetValueMethodDescriptions=Retrieve the value stored under the given tag. If there''s no such tag, then return valueIfTagNotThere.

# Description: 
TinyDB__StoreValueMethodDescriptions=Store the given value under the given tag. The storage persists on the phone when the app is restarted.

# Description: 
TinyWebDBHelpStringComponentPallette=Non-visible component that communicates with a Web service to store and retrieve information.

# Description: 
TinyWebDB__GetValueMethodDescriptions=Sends a request to the Web service to get the value stored under the given tag. The Web service must decide what to return if there is no value stored under the tag. This component accepts whatever is returned.

# Description: 
TinyWebDB__GotValueEventDescriptions=Indicates that a GetValue server request has succeeded.

# Description: 
TinyWebDB__ServiceURLPropertyDescriptions=The URL of the web service database.

# Description: 
TinyWebDB__StoreValueMethodDescriptions=Asks the Web service to store the given value under the given tag

# Description: 
TinyWebDB__WebServiceErrorEventDescriptions=Indicates that the communication with the Web service signaled an error.

# Description: 
TitleProperties=Title

# Description: 
TitleVisibleProperties=TitleVisible

# Description: 
TitleVisiblePropertyDescriptions=The title bar is the top gray bar on the screen. This property reports whether the title bar is visible.

# Description: 
ToggleDirectionMethodDescriptions=Toggle the direction of motors.

# Description: 
ToggleDirectionMethods=ToggleDirection

# Description: 
TokenProperties=Token

# Description: 
TokenPropertyDescriptions=This field contains the authentication token used to login to the backed Redis server. For the "DEFAULT" server, do not edit this value, the system will fill it in for you. A system administrator may also provide a special value to you which can be used to share data between multiple projects from multiple people. If using your own Redis server, set a password in the server''s config and enter it here.

# Description: 
TopOfRangeProperties=TopOfRange

# Description: 
TopOfRangePropertyDescriptions=The top of the range used for the BelowRange, WithinRange, and AboveRange events.

# Description: 
TouchDownEvents=TouchDown

# Description: 
TouchUpEvents=TouchUp

# Description: 
TouchedEvents=Touched

# Description: 
TrackColorActiveProperties=TrackColorActive

# Description: 
TrackColorActivePropertyDescriptions=Returns the `Switch`''s track color

# Description: 
TrackColorInactiveProperties=TrackColorInactive

# Description: 
TrackColorInactivePropertyDescriptions=Color of the toggle track when switched off

# Description: 
TransportationMethodProperties=TransportationMethod

# Description: 
TransportationMethodPropertyDescriptions=The transportation method used for determining the route.

# Description: 
TurnClockwiseIndefinitelyMethodDescriptions=Turn the robot clockwise indefinitely, with the specified percentage of maximum power, by powering the left drive motor forward and the right drive motor backward.

# Description: 
TurnClockwiseIndefinitelyMethods=TurnClockwiseIndefinitely

# Description: 
TurnCounterClockwiseIndefinitelyMethodDescriptions=Turn the robot counterclockwise indefinitely, with the specified percentage of maximum power, by powering the right drive motor forward and the left drive motor backward.

# Description: 
TurnCounterClockwiseIndefinitelyMethods=TurnCounterClockwiseIndefinitely

# Description: 
TutorialURLProperties=TutorialURL

# Description: 
TutorialURLPropertyDescriptions=A URL to use to populate the Tutorial Sidebar while editing a project. Used as a teaching aid.

# Description: 
TweetMethodDescriptions=This sends a tweet as the logged-in user with the specified Text, which will be trimmed if it exceeds 160 characters. <p><u>Requirements</u>\: This should only be called after the <code>IsAuthorized</code> event has been raised, indicating that the user has successfully logged in to Twitter.</p>

# Description: 
TweetMethods=Tweet

# Description: 
TweetWithImageMethodDescriptions=This sends a tweet as the logged-in user with the specified Text and a path to the image to be uploaded, which will be trimmed if it exceeds 160 characters. If an image is not found or invalid, only the text will be tweeted.<p><u>Requirements</u>\: This should only be called after the <code>IsAuthorized</code> event has been raised, indicating that the user has successfully logged in to Twitter.</p>

# Description: 
TweetWithImageMethods=TweetWithImage

# Description: 
TwitPic_API_KeyProperties=TwitPic_API_Key

# Description: 
TwitPic_API_KeyPropertyDescriptions=TwitPicAPIkey property getter method.

# Description: 
TwitterHelpStringComponentPallette=A non-visible component that enables communication with <a href\="http\://www.twitter.com" target\="_blank">Twitter</a>. Once a user has logged into their Twitter account (and the authorization has been confirmed successful by the <code>IsAuthorized</code> event), many more operations are available\:<ul><li> Searching Twitter for tweets or labels (<code>SearchTwitter</code>)</li><li> Sending a Tweet (<code>Tweet</code>) </li><li> Sending a Tweet with an Image (<code>TweetWithImage</code>) </li><li> Directing a message to a specific user (<code>DirectMessage</code>)</li> <li> Receiving the most recent messages directed to the logged-in user (<code>RequestDirectMessages</code>)</li> <li> Following a specific user (<code>Follow</code>)</li><li> Ceasing to follow a specific user (<code>StopFollowing</code>)</li><li> Getting a list of users following the logged-in user (<code>RequestFollowers</code>)</li> <li> Getting the most recent messages of users followed by the logged-in user (<code>RequestFriendTimeline</code>)</li> <li> Getting the most recent mentions of the logged-in user (<code>RequestMentions</code>)</li></ul></p> <p>You must obtain a Consumer Key and Consumer Secret for Twitter authorization specific to your app from http\://twitter.com/oauth_clients/new

# Description: 
TypeProperties=Type

# Description: 
UnauthenticateMethodDescriptions=If you are having difficulty with the Companion and you are switching between different Firebase accounts, you may need to use this function to clear internal Firebase caches. You can just use the "Do It" function on this block in the blocks editor. Note\: You should not normally need to use this block as part of an application.

# Description: 
UnauthenticateMethods=Unauthenticate

# Description: 
UnitProperties=Unit

# Description: 
UnitPropertyDescriptions=Specifies the unit of distance.

# Description: 
UnspecifiedPropertyCategory=Unspecified

# Description: 
UpdateDoneEventDescriptions=Indicates that operations that store data to CloudDB have completed.

# Description: 
UpdateDoneEvents=UpdateDone

# Description: 
UriDecodeMethodDescriptions=Decodes the encoded text value so that the values aren''t URL encoded anymore.

# Description: 
UriDecodeMethods=UriDecode

# Description: 
UriEncodeMethodDescriptions=Encodes the given text value so that it can be used in a URL.

# Description: 
UriEncodeMethods=UriEncode

# Description: 
UrlProperties=Url

# Description: 
UrlPropertyDescriptions=The URL for the web request.

# Description: 
UseExternalScannerProperties=UseExternalScanner

# Description: 
UseExternalScannerPropertyDescriptions=If true App Inventor will look for and use an external scanning program such as "Bar Code Scanner."

# Description: 
UseFrontProperties=UseFront

# Description: 
UseFrontPropertyDescriptions=Returns true if the front-facing camera is to be used (when available)

# Description: 
UseGPSProperties=UseGPS

# Description: 
UseGPSPropertyDescriptions=This property has been deprecated.

# Description: 
UseLegacyProperties=UseLegacy

# Description: 
UseLegacyPropertyDescriptions=If true, an app can retain their older behaviour.

# Description: 
UseSSLProperties=UseSSL

# Description: 
UseSSLPropertyDescriptions=Set to true to use SSL to talk to CloudDB/Redis server. This should be set to True for the "DEFAULT" server.

# Description: 
UseServiceAuthenticationProperties=UseServiceAuthentication

# Description: 
UseServiceAuthenticationPropertyDescriptions=Indicates whether a service account should be used for authentication

# Description: 
UserChoiceProperties=UserChoice

# Description: 
UserChoicePropertyDescriptions=The ballot choice to send to the server, which must be set before <code>SendBallot</code> is called. This must be one of <code>BallotOptions</code>.

# Description: 
UserEmailAddressProperties=UserEmailAddress

# Description: 
UserEmailAddressSetEventDescriptions=Indicates that the user email address has been set.

# Description: 
UserEmailAddressSetEvents=UserEmailAddressSet

# Description: 
UserIdProperties=UserId

# Description: 
UserIdPropertyDescriptions=A text identifying the voter that is sent to the Voting server along with the vote. This must be set before <code>SendBallot</code> is called.

# Description: 
UserLatitudeProperties=UserLatitude

# Description: 
UserLatitudePropertyDescriptions=Returns the user''s latitude if ShowUser is enabled.

# Description: 
UserLongitudeProperties=UserLongitude

# Description: 
UserLongitudePropertyDescriptions=Returns the user''s longitude if ShowUser is enabled.

# Description: 
UsernameProperties=Username

# Description: 
UsernamePropertyDescriptions=The user name of the authorized user. Empty if there is no authorized user.

# Description: 
UsesLocationProperties=UsesLocation

# Description: 
UsesLocationPropertyDescriptions=Whether or not to give the application permission to use the Javascript geolocation API. This property is available only in the designer.

# Description: 
ValueStoredEventDescriptions=Event indicating that a StoreValue server request has succeeded.

# Description: 
ValueStoredEvents=ValueStored

# Description: 
VersionCodeProperties=VersionCode

# Description: 
VersionCodePropertyDescriptions=An integer value which must be incremented each time a new Android Application Package File (APK) is created for the Google Play Store.

# Description: 
VersionNameProperties=VersionName

# Description: 
VersionNamePropertyDescriptions=A string which can be changed to allow Google Play Store users to distinguish between different versions of the App.

# Description: 
VerticalArrangementHelpStringComponentPallette=<p>A formatting element in which to place components that should be displayed one below another. (The first child component is stored on top, the second beneath it, etc.) If you wish to have components displayed next to one another, use <code>HorizontalArrangement</code> instead.</p>

# Description: 
VerticalArrangement__AlignHorizontalPropertyDescriptions=A number that encodes how contents of the VerticalArrangement are aligned horizontally. The choices are\: 1 \= left aligned, 2 \= right aligned, 3 \= horizontally centered. Alignment has no effect if the arrangement''s width is automatic.

# Description: 
VerticalArrangement__AlignVerticalPropertyDescriptions=A number that encodes how the contents of the VerticalArrangement are aligned vertically. The choices are\: 1 \= aligned at the top, 2 \= vertically centered, 3 \= aligned at the bottom. Alignment has no effect if the arrangement''s height is automatic.

# Description: 
VerticalArrangement__BackgroundColorPropertyDescriptions=Returns the background color of the VerticalArrangement

# Description: 
VerticalArrangement__HeightPercentPropertyDescriptions=Specifies the vertical height of the VerticalArrangement as a percentage of the height of the Screen.

# Description: 
VerticalArrangement__HeightPropertyDescriptions=Specifies the vertical height of the VerticalArrangement, measured in pixels.

# Description: 
VerticalArrangement__ImagePropertyDescriptions=Returns the path of the background image of the `VerticalArrangement`.

# Description: 
VerticalArrangement__VisiblePropertyDescriptions=Specifies whether the VerticalArrangement should be visible on the screen. Value is true if the VerticalArrangement is showing and false if hidden.

# Description: 
VerticalArrangement__WidthPercentPropertyDescriptions=Specifies the horizontal width of the VerticalArrangement as a percentage of the width of the Screen.

# Description: 
VerticalArrangement__WidthPropertyDescriptions=Specifies the horizontal width of the VerticalArrangement, measured in pixels.

# Description: 
VerticalScrollArrangementHelpStringComponentPallette=<p>A formatting element in which to place components that should be displayed one below another. (The first child component is stored on top, the second beneath it, etc.) If you wish to have components displayed next to one another, use <code>HorizontalArrangement</code> instead.</p><p> This version is scrollable

# Description: 
VerticalScrollArrangement__AlignHorizontalPropertyDescriptions=A number that encodes how contents of the VerticalScrollArrangement are aligned horizontally. The choices are\: 1 \= left aligned, 2 \= right aligned, 3 \= horizontally centered. Alignment has no effect if the arrangement''s width is automatic.

# Description: 
VerticalScrollArrangement__AlignVerticalPropertyDescriptions=A number that encodes how the contents of the VerticalScrollArrangement are aligned vertically. The choices are\: 1 \= aligned at the top, 2 \= vertically centered, 3 \= aligned at the bottom. Alignment has no effect if the arrangement''s height is automatic.

# Description: 
VerticalScrollArrangement__BackgroundColorPropertyDescriptions=Returns the background color of the VerticalScrollArrangement

# Description: 
VerticalScrollArrangement__HeightPercentPropertyDescriptions=Specifies the vertical height of the VerticalScrollArrangement as a percentage of the height of the Screen.

# Description: 
VerticalScrollArrangement__HeightPropertyDescriptions=Specifies the vertical height of the VerticalScrollArrangement, measured in pixels.

# Description: 
VerticalScrollArrangement__ImagePropertyDescriptions=Returns the path of the background image of the `VerticalScrollArrangement`.

# Description: 
VerticalScrollArrangement__VisiblePropertyDescriptions=Specifies whether the VerticalScrollArrangement should be visible on the screen. Value is true if the VerticalScrollArrangement is showing and false if hidden.

# Description: 
VerticalScrollArrangement__WidthPercentPropertyDescriptions=Specifies the horizontal width of the VerticalScrollArrangement as a percentage of the width of the Screen.

# Description: 
VerticalScrollArrangement__WidthPropertyDescriptions=Specifies the horizontal width of the VerticalScrollArrangement, measured in pixels.

# Description: 
VibrateMethods=Vibrate

# Description: 
VideoPlayerErrorEventDescriptions=The VideoPlayerError event is no longer used. Please use the Screen.ErrorOccurred event instead.

# Description: 
VideoPlayerHelpStringComponentPallette=A multimedia component capable of playing videos. When the application is run, the VideoPlayer will be displayed as a rectangle on-screen. If the user touches the rectangle, controls will appear to play/pause, skip ahead, and skip backward within the video. The application can also control behavior by calling the <code>Start</code>, <code>Pause</code>, and <code>SeekTo</code> methods. <p>Video files should be in 3GPP (.3gp) or MPEG-4 (.mp4) formats. For more details about legal formats, see <a href\="http\://developer.android.com/guide/appendix/media-formats.html" target\="_blank">Android Supported Media Formats</a>.</p><p>App Inventor for Android only permits video files under 1 MB and limits the total size of an application to 5 MB, not all of which is available for media (video, audio, and sound) files. If your media files are too large, you may get errors when packaging or installing your application, in which case you should reduce the number of media files or their sizes. Most video editing software, such as Windows Movie Maker and Apple iMovie, can help you decrease the size of videos by shortening them or re-encoding the video into a more compact format.</p><p>You can also set the media source to a URL that points to a streaming video, but the URL must point to the video file itself, not to a program that plays the video.

# Description: 
VideoPlayer__CompletedEventDescriptions=Indicates that the video has reached the end

# Description: 
VideoPlayer__HeightPercentPropertyDescriptions=Specifies the vertical height of the VideoPlayer as a percentage of the height of the Screen.

# Description: 
VideoPlayer__HeightPropertyDescriptions=Specifies the component''s vertical height, measured in pixels.

# Description: 
VideoPlayer__PauseMethodDescriptions=Pauses playback of the video. Playback can be resumed at the same location by calling the <code>Start</code> method.

# Description: 
VideoPlayer__SourcePropertyDescriptions=The "path" to the video. Usually, this will be the name of the video file, which should be added in the Designer.

# Description: 
VideoPlayer__StartMethodDescriptions=Starts playback of the video.

# Description: 
VideoPlayer__StopMethodDescriptions=Resets to start of video and pauses it if video was playing.

# Description: 
VideoPlayer__VisiblePropertyDescriptions=Specifies whether the VideoPlayer should be visible on the screen. Value is true if the VideoPlayer is showing and false if hidden.

# Description: 
VideoPlayer__VolumePropertyDescriptions=Sets the volume to a number between 0 and 100. Values less than 0 will be treated as 0, and values greater than 100 will be treated as 100.

# Description: 
VideoPlayer__WidthPercentPropertyDescriptions=Specifies the horizontal width of the VideoPlayer as a percentage of the width of the Screen.

# Description: 
VideoPlayer__WidthPropertyDescriptions=Specifies the component''s horizontal width, measured in pixels.

# Description: 
ViewContactMethodDescriptions=view a contact via its URI

# Description: 
ViewContactMethods=ViewContact

# Description: 
VisibleProperties=Visible

# Description: 
VolumeProperties=Volume

# Description: 
VotingHelpStringComponentPallette=The Voting component communicates with a Web service to retrieve a ballot and send back users'' votes. <p>The application should call the method <code>RequestBallot</code>, usually in the <code>Initialize</code> event handler, in order to get the ballot question and options from the Web service (specified by the <code>ServiceURL</code> property). Depending on the response from the Web service, the system will raise one of the following three events\: <ol> <li> <code>GotBallot</code>, indicating that the ballot question and options were retrieved and the properties <code>BallotQuestion</code> and <code>BallotOptions</code> have been set.</li> <li> <code>NoOpenPoll</code>, indicating that no ballot question is available.</li> <li> <code>WebServiceError</code>, indicating that the service did not provide a legal response and providing an error messages.</li> </ol></p> <p>After getting the ballot, the application should allow the user to make a choice from among <code>BallotOptions</code> and set the property <code>UserChoice</code> to that choice. The application should also set <code>UserId</code> to specify which user is voting.</p> <p>Once the application has set <code>UserChoice</code> and <code>UserId</code>, the application can call <code>SendBallot</code> to send this information to the Web service. If the service successfully receives the vote, the event <code>GotBallotConfirmation</code> will be raised. Otherwise, the event <code>WebServiceError</code> will be raised with the appropriate error message.</p>

# Description: 
Voting__ServiceURLPropertyDescriptions=The URL of the Voting service

# Description: 
Voting__UserEmailAddressPropertyDescriptions=The email address associated with this device. This property has been deprecated and always returns the empty text value.

# Description: 
Voting__WebServiceErrorEventDescriptions=Event indicating that the communication with the Web service resulted in an error.

# Description: 
WalkStepEventDescriptions=This event is run when a walking step is detected. A walking step is a step that appears to be involved in forward motion.

# Description: 
WalkStepEvents=WalkStep

# Description: 
WalkStepsProperties=WalkSteps

# Description: 
WalkStepsPropertyDescriptions=the number of walk steps taken since the pedometer has started.

# Description: The label used to indicate walking navigation.
WalkingNavMethod=Walking

# Description: 
WebHelpStringComponentPallette=Non-visible component that provides functions for HTTP GET, POST, PUT, and DELETE requests.

# Description: 
WebRTCProperties=WebRTC

# Description: 
WebRTCPropertyDescriptions=Set whether or not we will use WebRTC to communicate with the server

# Description: 
WebServiceErrorEvents=WebServiceError

# Description: 
WebViewStringChangeEventDescriptions=When the JavaScript calls AppInventor.setWebViewString this event is run.

# Description: 
WebViewStringChangeEvents=WebViewStringChange

# Description: 
WebViewStringProperties=WebViewString

# Description: 
WebViewStringPropertyDescriptions=Gets the WebView''s String, which is viewable through Javascript in the WebView as the window.AppInventor object

# Description: 
WebViewerHelpStringComponentPallette=Component for viewing Web pages. The Home URL can be specified in the Designer or in the Blocks Editor. The view can be set to follow links when they are tapped, and users can fill in Web forms. Warning\: This is not a full browser. For example, pressing the phone''s hardware Back key will exit the app, rather than move back in the browser history.<p />You can use the WebViewer.WebViewString property to communicate between your app and Javascript code running in the Webviewer page. In the app, you get and set WebViewString. In the WebViewer, you include Javascript that references the window.AppInventor object, using the methoods </em getWebViewString()</em> and <em>setWebViewString(text)</em>. <p />For example, if the WebViewer opens to a page that contains the Javascript command <br /> <em>document.write("The answer is" + window.AppInventor.getWebViewString());</em> <br />and if you set WebView.WebVewString to "hello", then the web page will show </br ><em>The answer is hello</em>. <br />And if the Web page contains Javascript that executes the command <br /><em>window.AppInventor.setWebViewString("hello from Javascript")</em>, <br />then the value of the WebViewString property will be <br /><em>hello from Javascript</em>.

# Description: 
WebViewer__ClearCookiesMethodDescriptions=Clear WebView cookies.

# Description: 
WebViewer__ErrorOccurredEventDescriptions=When an error occurs this event is run.

# Description: 
WebViewer__HeightPercentPropertyDescriptions=Specifies the vertical height of the WebViewer as a percentage of the height of the Screen.

# Description: 
WebViewer__HeightPropertyDescriptions=Specifies the `WebViewer`''s vertical height, measured in pixels.

# Description: 
WebViewer__VisiblePropertyDescriptions=Specifies whether the WebViewer should be visible on the screen. Value is true if the WebViewer is showing and false if hidden.

# Description: 
WebViewer__WidthPercentPropertyDescriptions=Specifies the horizontal width of the WebViewer as a percentage of the width of the Screen.

# Description: 
WebViewer__WidthPropertyDescriptions=Specifies the horizontal width of the `WebViewer`, measured in pixels.

# Description: 
Web__ClearCookiesMethodDescriptions=Clears all cookies for this Web component.

# Description: 
Web__DeleteMethodDescriptions=Performs an HTTP DELETE request using the Url property and retrieves the response. If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The ResponseFileName property can be used to specify the name of the file. If the SaveResponse property is false, the GotText event will be triggered.

# Description: 
Web__GotTextEventDescriptions=Event indicating that a request has finished.

# Description: 
WeekdayMethodDescriptions=Returns the day of the week represented as a number from 1 (Sunday) to 7 (Saturday).

# Description: 
WeekdayMethods=Weekday

# Description: 
WeekdayNameMethodDescriptions=Returns the name of the day of the week from the instant.

# Description: 
WeekdayNameMethods=WeekdayName

# Description: 
WestLongitudeProperties=WestLongitude

# Description: 
WestLongitudePropertyDescriptions=The west edge of the rectangle, in decimal degrees east of the equator.

# Description: 
WheelDiameterProperties=WheelDiameter

# Description: The label used to indicate wheelchair navigation.
WheelchairNavMethod=Wheelchair

# Description: 
WidthPercentProperties=WidthPercent

# Description: 
WidthProperties=Width

# Description: 
WithinRangeEventEnabledProperties=WithinRangeEventEnabled

# Description: 
WithinRangeEvents=WithinRange

# Description: 
WritePermissionProperties=WritePermission

# Description: 
WritePermissionPropertyDescriptions=A designer-only property that can be used to enable write access to file storage outside of the app-specific directories.

# Description: 
WriteSerialMethodDescriptions=Writes given data to serial.

# Description: 
WriteSerialMethods=WriteSerial

# Description: 
WriteTypeProperties=WriteType

# Description: 
WriteTypePropertyDescriptions=Returns the write type for the NFC component. For this version of the component, it is always `1`.

# Description: 
XAccelProperties=XAccel

# Description: 
XAccelPropertyDescriptions=Returns the acceleration in the X-dimension in SI units (m/s²). The sensor must be enabled to return meaningful values.

# Description: 
XAngularVelocityProperties=XAngularVelocity

# Description: 
XAngularVelocityPropertyDescriptions=The angular velocity around the X axis, in degrees per second.

# Description: 
XMLTextDecodeAsDictionaryMethodDescriptions=Decodes the given XML into a set of nested dictionaries that capture the structure and data contained in the XML. See the help for more details.

# Description: 
XMLTextDecodeAsDictionaryMethods=XMLTextDecodeAsDictionary

# Description: 
XMLTextDecodeMethodDescriptions=Decodes the given XML string to produce a dictionary structure. See the App Inventor documentation on "Other topics, notes, and details" for information.

# Description: 
XMLTextDecodeMethods=XMLTextDecode

# Description: 
XProperties=X

# Description: 
XStrengthProperties=XStrength

# Description: 
XStrengthPropertyDescriptions=Indicates the field''s strength in the X-axis.

# Description: 
XmlTextParams=XmlText

# Description: 
XstrengthProperties=XStrength

# Description: 
YAccelProperties=YAccel

# Description: 
YAccelPropertyDescriptions=Returns the acceleration in the Y-dimension in SI units (m/s²). The sensor must be enabled to return meaningful values.

# Description: 
YAngularVelocityProperties=YAngularVelocity

# Description: 
YAngularVelocityPropertyDescriptions=The angular velocity around the Y axis, in degrees per second.

# Description: 
YProperties=Y

# Description: 
YStrengthProperties=YStrength

# Description: 
YStrengthPropertyDescriptions=Indicates the field''s strength in the Y-axis.

# Description: 
YandexTranslateHelpStringComponentPallette=Use this component to translate words and sentences between different languages. This component needs Internet access, as it will request translations to the Yandex.Translate service. Specify the source and target language in the form source-target using two letter language codes. So"en-es" will translate from English to Spanish while "es-ru" will translate from Spanish to Russian. If you leave out the source language, the service will attempt to detect the source language. So providing just "es" will attempt to detect the source language and translate it to Spanish.<p /> This component is powered by the Yandex translation service. See http\://api.yandex.com/translate/ for more information, including the list of available languages and the meanings of the language codes and status codes. <p />Note\: Translation happens asynchronously in the background. When the translation is complete, the "GotTranslation" event is triggered.

# Description: 
YandexTranslate__ApiKeyPropertyDescriptions=Set the API Key to use with Yandex. You do not need to set this if you are using the MIT system because MIT has its own key builtin. If set, the key provided here will be used instead

# Description: 
YearMethodDescriptions=The year

# Description: 
YearMethods=Year

# Description: 
YearProperties=Year

# Description: 
YearPropertyDescriptions=the Year that was last picked using the DatePicker

# Description: 
YstrengthProperties=YStrength

# Description: 
ZAccelProperties=ZAccel

# Description: 
ZAccelPropertyDescriptions=Returns the acceleration in the Z-dimension in SI units (m/s²). The sensor must be enabled to return meaningful values.

# Description: 
ZAngularVelocityProperties=ZAngularVelocity

# Description: 
ZAngularVelocityPropertyDescriptions=The angular velocity around the Z axis, in degrees per second.

# Description: 
ZProperties=Z

# Description: 
ZStrengthProperties=ZStrength

# Description: 
ZStrengthPropertyDescriptions=Indicates the field''s strength in the Z-axis.

# Description: 
ZoomChangeEventDescriptions=User has changed the zoom level of the map.

# Description: 
ZoomChangeEvents=ZoomChange

# Description: 
ZoomLevelProperties=ZoomLevel

# Description: 
ZoomLevelPropertyDescriptions=Specifies the zoom level of the map. Valid values of ZoomLevel are dependent on the tile provider and the latitude and longitude of the map. For example, zoom levels are more constrained over oceans than dense city centers to conserve space for storing tiles, so valid values may be 1-7 over ocean and 1-20 over cities. Tile providers may send warning or error tiles if the zoom level is too great for the server to support.

# Description: 
ZstrengthProperties=ZStrength

# Description: Label of the link for About
aboutMenuItem=About

# Description: 
absoluteStrengthParams=absoluteStrength

# Description: 
accelerometerSensorComponentPallette=AccelerometerSensor

# Description: 
accountDisabledMessage=Your Account is Disabled

# Description: 
activityStarterComponentPallette=ActivityStarter

# Description: Text on "Add..." button
addButton=Upload File ...

# Description: Label of the button for adding a new screen
addFormButton=Add Screen ...

# Description: Error message reported when adding a form failed on the server.
addFormError=Server error\: could not add form. Please try again later\!

# Description: Text on 'Add' button to continue with screen creation.
addScreenButton=Add

# Description: 
addressParams=address

# Description: Label of the button leading to admin functionality
adminTabName=Admin

# Description: Error message when user tries to upload aia file as media asset
aiaMediaAsset=To use this file, click Projects > Import project (.aia) from my computer ...

# Description: URL for more info on using aia files properly
aiaMediaAssetHelp=http\://appinventor.mit.edu/explore/ai2/share.html

# Description: Error message when user tries to upload aia file as media asset
aiaMediaAssetTitle=Error\: Cannot upload .aia file as media asset

# Description: List item in Subset Property Editor
allButton=All

# Description: 
altitudeParams=altitude

# Description: 
ambientValues=ambient

# Description: 
angleParams=angle

# Description: 
angleValues=angle

# Description: 
animTypeParams=animType

# Description: Label on any-component branch of block selector tree
anyComponentLabel=Any component

# Description: 
apkInstalledToPhone=The APK file will be installed in the phone.

# Description: 
apkSavedToComputer=The APK file will be saved in the download folder.

# Description: 
argumentsParams=arguments

# Description: Caption for asset list box.
assetListBoxCaption=Media

# Description: Caption and summary for Automatic choice
automaticCaption=Automatic

# Description: 
azimuthParams=azimuth

# Description: Text on 'Back' button to go back to the previous page of the wizard.
backButton=Back

# Description: System error message for a bad alignment property editor
badAlignmentPropertyEditorForArrangement=System error\: bad alignment property editor for horizontal or vertical arrangement.

# Description: Default message for bad value for Horizontal Alignment
# 0=componentName
badValueForHorizontalAlignment=System error\: Bad value - {0} - for Horizontal Alignment.

# Description: Default message for bad value for Vartical Alignment
# 0=componentName
badValueForVerticalAlignment=System error\: Bad value - {0} - for Vertical Alignment.

# Description: 
ballComponentPallette=Ball

# Description: Download button shown in barcode dialog
barcodeDownloadAab=Download .aab now

# Description: Download button shown in barcode dialog
barcodeDownloadApk=Download .apk now

# Description: 
barcodeScannerComponentPallette=BarcodeScanner

# 0=aTagStart, 1=aTagEnd
barcodeWarning=Note\: this barcode is only valid for 2 hours. See {0} the FAQ {1} for info on how to share your app with others.

# Description: Warning in barcode dialog.
# 0=aTagStart, 1=aTagEnd
barcodeWarning2=<b>Click the button to download the app, right-click on it to copy a download link, or scan the code with a barcode scanner to install.</b><br>Note\: this link and barcode are only valid for 2 hours. See {0} the FAQ {1} for info on how to share your app with others.

# Description: 
barometerComponentPallette=Barometer

# Description: 
bashWarningDialogButtonContinue=Continue with Multiple Sessions

# Description: 
bashWarningDialogButtonNo=Do not use multiple Sessions

# Description: 
bashWarningDialogMessage=<p><font color\=red>WARNING\:</font> A second App Inventor session has been opened for this account. You may choose to continue with both sessions, but working with App Inventor from more than one session simultaneously can cause blocks to be lost in ways that cannot be recovered from the App Inventor server.</p><p>We recommend that people not open multiple sessions on the same account. But if you do need to work in this way, then you should regularly export your project to your local computer, so you will have a backup copy independent of the App Inventor server. Use "Export" from the Projects menu to export the project.</p>

# Description: 
bashWarningDialogText=Do you want to continue with multiple sessions?

# Description: Text for color choice 'Black'
blackColor=Black

# Description: 
blackTitleTheme=Black Title Text

# Description: Caption for block selector box.
blockSelectorBoxCaption=Blocks

# Description: Label of the button for opening the blocks editor when the it is already open
blocksEditorIsOpenButton=Blocks Editor is open

# Description: Tab name for blocks editor
# 0=formName
blocksEditorTabName={0} blocks

# Description: Message when blocks fail to load properly
# 0=formName
blocksLoadFailure=The blocks for screen {0} did not load properly. You will not be able to edit using the blocks editor until the problem is corrected.

# Description: Message indicating that blocks changes were not saved
# 0=formName
blocksNotSaved=The blocks area did not load properly. Changes to the blocks for screen {0} will not be saved.

# Description: Title for Blocks Toolkit custom editor.
blocksToolkitTitle=Toolkit

# Description: 
blocksTruncatedDialogButtonHTML=Please wait %1 seconds...

# Description: 
blocksTruncatedDialogButtonNoSave=Restore the previous version.

# Description: 
blocksTruncatedDialogButtonSave=Save the empty screen now.

# Description: 
blocksTruncatedDialogMessage=<p>It appears that <b>%1</b> has had all blocks removed.</p><p><ul><li>You can save the empty screen, and then all those blocks will be permanently gone from the project.</li><li>Alternatively, you can restore the previously saved version of the project.</li></ul></p>

# Description: 
blocksTruncatedDialogText=Blocks Workspace is Empty

# Description: Text for color choice 'Blue'
blueColor=Blue

# Description: 
bluetoothClientComponentPallette=BluetoothClient

# Description: 
bluetoothServerComponentPallette=BluetoothServer

# Description: 
bottomParams=bottom

# Description: Error message reported when building a target failed on the server because of a network error.
buildError=Server error\: could not build target. Please try again later\!

# Description: Error message reported when a build failed due to an error in the build pipeline.
buildFailedError=Build failed\!

# Description: Error message reported when a project is too large to build.
# 0=maxSize, 1=aiaSize
buildProjectTooLargeError=Sorry, cannot package projects larger than {0} MB. Yours is {1,number,\#\#\#.\#\#} MB.

# Description: Message shown in the build output panel when a build is requested.
# 0=projectName, 1=time
buildRequestedMessage=Build of {0} requested at {1}.

# Description: Error message reported when the build server is temporarily too busy to accept a build request.
buildServerBusyError=The build server is currently busy. Please try again in a few minutes.

# Description: Error message reported when the build server is running a different version of the App Inventor code.
buildServerDifferentVersion=The build server is not compatible with this version of App Inventor.

# Description: Label of the button leading to build related cascade items
buildTabName=Build

# Description: 
buildingApk=Building APK

# Description: Label on built-in-blocks branch of block selector tree
builtinBlocksLabel=Built-in

# Description: Label on built-in-Colors-blocks branch of block selector tree
builtinColorsLabel=Colors

# Description: Label on built-in-Control-blocks branch of block selector tree
builtinControlLabel=Control

# Description: Label on built-in-Dictionaries-blocks branch of block selector tree
builtinDictionariesLabel=Dictionaries

# Description: Label on built-in-Lists-blocks branch of block selector tree
builtinListsLabel=Lists

# Description: Label on built-in-Logic-blocks branch of block selector tree
builtinLogicLabel=Logic

# Description: Label on built-in-Math-blocks branch of block selector tree
builtinMathLabel=Math

# Description: Label on built-in-Procedures-blocks branch of block selector tree
builtinProceduresLabel=Procedures

# Description: Label on built-in-Text-blocks branch of block selector tree
builtinTextLabel=Text

# Description: Label on built-in-Variables-blocks branch of block selector tree
builtinVariablesLabel=Variables

# Description: 
button1TextParams=button1Text

# Description: 
button2TextParams=button2Text

# Description: 
buttonComponentPallette=Button

# Description: Label of the Send Email of reportlist
buttonSendEmail=Send Email

# Description: 
buttonTextParams=buttonText

# Description: 
camcorderComponentPallette=Camcorder

# Description: 
cameraComponentPallette=Camera

# Description: Label of the button for canceling the blocks editor launch
cancelBlocksEditorButton=Opening the Blocks Editor... (click to cancel)

# Description: Text on "Cancel" button.
cancelButton=Cancel

# Description: Text on 'Dont Add' button to dismiss screen creation.
cancelScreenButton=Do Not Add

# Description: 
cancelableParams=cancelable

# Description: 
canvasComponentPallette=Canvas

# Description: Text for text alignment choice 'center'
centerTextAlignment=center

# Description: 
centerXParams=centerX

# Description: 
centerYParams=centerY

# Description: 
centroidParams=centroid

# Description: 
centroidsParams=centroids

# Description: Label of the CheckBox for checkpoint
checkBoxButton=Create checkpoint before deleting

# Description: 
checkBoxComponentPallette=CheckBox

# Description: Label of the button for checkpoint
checkpointButton=Checkpoint ...

# Description: Name of Checkpoint menuitem
checkpointMenuItem=Checkpoint

# Description: Label in front of new name in checkpoint dialog.
checkpointNameLabel=Checkpoint name\:

# Description: Title of checkpoint dialog.
# 0=projectName
checkpointTitle=Checkpoint - {0}

# Description: 
choiceParams=choice

# Description: Message shown when there is no current file editor to switch to
chooseProject=Please choose a project to open or create a new project.

# Description: Menu item for initiating a connection to the companion running on a Chromebook.
chromebookMenuItem=Chromebook

# Description: 
circleComponentPallette=Circle

# Description: 
classicTheme=Classic

# Description: Text on 'Clear' button
clearButton=Clear

# Description: 
clipParams=clip

# Description: 
clockComponentPallette=Clock

# Description: Text for closing a file preview window
closeFilePreview=Close Preview

# Description: 
cloudDBComponentPallette=CloudDB

# Description: Caption for context menu item for minimizing the box.
cmMinimize=Shrink

# Description: Caption for context menu item for resizing the box.
cmResize=Resize...

# Description: Caption for context menu item for restoring a minimized box.
cmRestore=Expand

# Description: 
colorCodeParams=colorCode

# Description: 
colorNameParams=colorName

# Description: 
colorParams=color

# Description: 
colorSensorModeAmbientOption=Ambient

# Description: 
colorSensorModeColorOption=Color

# Description: 
colorSensorModeOptionList=ColorSensorMode

# Description: 
colorSensorModeReflectedOption=Reflected

# Description: 
colorValues=color

# Description: 
columnsParams=columns

# Description: 
commandParams=command

# Description: Information about the Companion
companionInformation=Companion Information

# Description: Menu item to update the Companion to the latest version
companionUpdate=Update the Companion

# Description: 
companionUpdateMustHaveProject=You must have a project open to update the Companion

# Description: 
compilingPart1=Compiling part 1

# Description: 
compilingPart2=Compiling part 2 (please wait)

# Description: Error message when the component database is not valid.
# 0=projectName
componentDatabaseCorrupt=The component database in the project "{0}" is corrupt.

# Description: Error message reported when the component import failed
componentImportError=Import Extension Failed\!

# Description: 
componentImportFromComputer=From my computer

# Description: For importing from a URL
componentImportFromURL=URL

# Description: Error message reported when the component import failed due to unknown url
componentImportUnknownURLError=Extension Import failed due to unknown URL

# Description: Caption for component import wizard.
componentImportWizardCaption=Import an extension into project

# Description: Caption for component list box.
componentListBoxCaption=My Components

# Description: Caption for component Name Label in rename wizard.
componentNameLabel=Extension name

# Description: 
componentParams=component

# Description: Caption for component rename wizard.
componentRenameWizardCaption=Rename extension

# Description: Alert message reported when the component import upgraded an already imported extension
componentUpgradedAlert=Extension Upgraded \: 

# Description: Caption for component upload wizard.
componentUploadWizardCaption=Upload Component...

# Description: 
conditionsParams=conditions

# Description: Confirmation message for delete keystore
confirmDeleteKeystore=Do you really want to delete your keystore file?\
\
If you agree, your old keystore file will be completely removed from the App Inventor server. A new, but different, keystore file will be created automatically the next time you package a project for the phone.\
\
If you have published applications to the Google Play Store using the keystore you are about to delete, you will lose the ability to update your applications.\
\
Any projects that you package in the future will be signed using your new keystore file. Changing the keystore affects the ability to reinstall previously installed apps. If you are not sure that you want to do this, please read the documentation about keystores by clicking above on "Help", then "Troubleshooting", and then "Keystores and Signing of Applications"\
\
There is no undo for deleting your keystore file.

# Description: Confirmation message for selecting multiple projects and clicking delete
# 0=projectNames
confirmDeleteManyProjects=Are you really sure you want to delete these projects\: {0}?

# Description: Confirmation message for selecting a single project and clicking delete
# 0=projectName
confirmDeleteSingleProject=Are you really sure you want to delete this project\: {0}

# Description: Confirmation message for selecting multiple projects and clicking trash
# 0=projectNames
confirmMoveToTrash=Are you sure you want to move these projects to trash\: {0}?

# Description: Confirmation message for selecting a single project and clicking trash
# 0=projectName
confirmMoveToTrashSingleProject=Are you really sure you want to move this project to trash\: {0}

# Description: Confirmation message shown when conflicting files are about to be deleted.
# 0=newFile, 1=existingFile
confirmOverwrite=Request to save {1}\
\
A file named {0} already exists in this project.\
Do you want to remove that old file?\
This will also remove any other files whose names conflict with {1}.

# Description: Confirmation message shown when keystore is about to be overwritten.
confirmOverwriteKeystore=Do you want to overwrite your keystore file?\
\
If you agree, your old keystore file will be completely removed from the App Inventor server.\
\
If you have published applications to the Google Play Store using the keystore you are about to overwrite, you will lose the ability to update your applications.\
\
Any projects that you package in the future will be signed using your new keystore file. Changing the keystore affects the ability to reinstall previously installed apps. If you are not sure that you want to do this, please read the documentation about keystores by clicking above on "Help", then "Troubleshooting", and then "Keystores and Signing of Applications"\
\
There is no undo for overwriting your keystore file.

# Description: Label of the button for selecting phone connection
connectButton=Connect

# Description: Label of the button leading to Connect related cascade items
connectTabName=Connect

# Description: 
connectivityComponentPallette=Connectivity

# Description: 
contactPickerComponentPallette=ContactPicker

# Description: 
contentsParams=contents

# Description: 
coordinatesParams=coordinates

# Description: Error message reported when copying a project failed on the server.
copyProjectError=Server error\: could not copy project. Please try again later\!

# Description: Message that is shown to indicate that a copying RPC is going on
copyingRpcMessage=Copying ...

# Description: 
corruptionDialogMessage=<p><b>We detected errors while reading in your project</b></p><p>To protect your project from damage, we have ended this session. You may close this window.</p>

# Description: 
corruptionDialogText=Project Read Error

# Description: 
countParams=count

# Description: 
createNoProjectsDialogMessage1=You do not have any projects in App Inventor 2. To learn how to use App Inventor, click the "Guide" link at the top of the window; or to start your first project, click the "Start New Project" button at the upper left of the window.

# Description: 
createNoProjectsDialogText=Welcome to App Inventor 2\!

# Description: 
createNoprojectsDialogMessage2=Happy Inventing\!

# Description: Error message reported when the project couldn't be created on the server.
createProjectError=Server error\: could not create project. Please try again later\!

# Description: 
createWelcomeDialogButton=Continue

# Description: 
createWelcomeDialogText=Welcome to App Inventor\!

# Description: 
currentXParams=currentX

# Description: 
currentYParams=currentY

# Description: 
customEllipsis=Custom...

# Description: Text for color choice 'Cyan'
cyanColor=Cyan

# Description: Text for color choice 'Dark Gray'
darkGrayColor=Dark Gray

# Description: 
darkTheme=Dark

# Description: 
dataParams=data

# Description: Header to indicate the date an extension was compiled
dateBuilt=Date Built\:

# Description: 
datePickerComponentPallette=DatePicker

# Description: 
dayParams=day

# Description: 
daysParams=days

# Description: Text for button shape choice 'default'
defaultButtonShape=default

# Description: Default project name in checkoint dialog
# 0=projectName, 1=suffix
defaultCheckpointProjectName={0}_checkpoint{1}

# Description: Text for color choice 'Default'
defaultColor=Default

# Description: Text for font typeface choice 'default '
defaultFontTypeface=default

# Description: Message that is shown to indicate that a loading RPC is going on
defaultRpcMessage=Loading ...

# Description: Defaulf project name in save as dialog
# 0=projectName
defaultSaveAsProjectName={0}_copy

# Description: Text for screen animation choice 'Default '
defaultScreenAnimation=Default

# Description: Text for property editors
defaultText=Default

# Description: 
defaultTheme=Device Default

# Description: Text on "Delete" button
deleteButton=Delete

# Description: Text on "Delete component" button
deleteComponentButton=Delete component

# Description: Label for the context menu command that deletes a file
deleteFileCommand=Delete...

# Description: Error message reported when deleting a file failed on the server.
deleteFileError=Server error\: could not delete the file. Please try again later\!

# Description: Text on "Delete From Trash" button
deleteFromTrashButton=Delete From Trash

# Description: Error message reported when a server error occurs during delete keystore
deleteKeystoreError=Server error\: could not delete your keystore file.

# Description: Label of the button for delete keystore
deleteKeystoreMenuItem=Delete keystore

# Description: Text on "Delete Project" button
deleteProjectButton=Move To Trash

# Description: Error message reported when deleting a project failed on the server.
deleteProjectError=Server error\: could not delete project. Please try again later\!

# Description: Message that is shown to indicate that a deleting RPC is going on
deletingRpcMessage=Deleting ...

# Description: 
descriptionParams=description

# Description: 
destinationParams=destination

# Description: 
detailTextParams=detailText

# Description: 
determiningPermissions=Determining permissions

# Description: 
directionEastOption=East

# Description: 
directionNorthOption=North

# Description: 
directionNortheastOption=Northeast

# Description: 
directionNorthwestOption=Northwest

# Description: 
directionOptionList=Direction

# Description: 
directionSouthOption=South

# Description: 
directionSoutheastOption=Southeast

# Description: 
directionSouthwestOption=Southwest

# Description: 
directionWestOption=West

# Description: 
directionsParams=directions

# Description: 
directoryNameParams=directoryName

# Description: Menu item to disable automatic loading of projects when App Inventor is opened.
disableAutoload=Disable Project Autoload

# Description: Switch to disable OpenDyslexic
disableOpenDyslexic=Disable OpenDyslexic

# Description: Text on "Dismiss" button.
dismissButton=Dismiss

# Description: 
distanceParams=distance

# Description: 
doFaultMethodDescriptions=Causes an Exception, used to debug exception processing.

# Description: 
doFaultMethods=doFault

# Description: 
doNotShow=Do Not Show Again

# Description: Caption for button to finish the box resizing dialog.
done=Done

# Description: Title of download aab dialog.
# 0=projectName
downloadAabDialogTitle=Android App Bundle for {0} (to be used in Google Play Store)

# Description: Warning that downloading projects will take a while
downloadAllAlert=It may take a little while for your projects to be downloaded. Please be patient...

# Description: Title of download apk dialog.
# 0=projectName
downloadApkDialogTitle=Android App for {0}

# Description: Label for the context menu command that downloads a file
downloadFileCommand=Download to my computer

# Description: Error message displayed when a server error occurs during download keystore
downloadKeystoreError=Server error\: could not download your keystore file.

# Description: Label of the button for export keystore
downloadKeystoreMenuItem=Export keystore

# Description: Title of the dialog box for downloading a user's project source
downloadUserSourceDialogTitle=Download User Source

# Description: Label of the button for admins to download a user's project source
downloadUserSourceMenuItem=Download User Source

# Description: Message shown while downloading application to the phone (during compilation)
downloadingRpcMessage=Downloading to phone ...

# Description: 
draggedAnySpriteParams=draggedAnySprite

# Description: 
draggedSpriteParams=draggedSprite

# Description: 
drawingAndAnimationComponentPallette=Drawing and Animation

# Description: Error shown when a new component name would be the same as an existing one
duplicateComponentNameError=Duplicate component name\!

# Description: Error shown when a new form name would be the same as an existing one
duplicateFormNameError=Duplicate Screen name\!

# Description: Error shown when a new project name would be the same as an existing one
# 0=projectName
duplicateProjectNameError={0} already exists. You cannot create another project with the same name.

# Description: Title for New Project Name DialogBox on Duplicate Name Error.
# 0=projectName
duplicateTitleFormatError=Project Name {0} exists

# Description: Title for New Project Name DialogBox on Duplicate Name Error.
# 0=projectName
duplicateTitleInTrashFormatError=A Project with the same name {0} exists in Trash

# Description: Error shown when a new project name would be the same as an existing one
# 0=projectName
duplicateTrashProjectNameError={0} already exists in your Trash. You cannot create another project with the same name.

# Description: 
durationMsParams=durationMs

# Description: 
durationParams=duration

# Description: 
edgeParams=edge

# Description: 
emailAddressParams=emailAddress

# Description: Title for user's email inbox
emailInboxTitle=Emails

# Description: 
emailPickerComponentPallette=EmailPicker

# Description: Title for moderator send email dialog
emailSendTitle=Send an Email

# Description: Label of the Sent From on reportlist
emailSentFrom=Sent From\: 

# Description: Label of the Sent To on reportlist
emailSentTo=Sent To\: 

# Description: Message providing details about starting the emulator connection.
emulatorMenuItem=Emulator

# Description: Menu item to enable automatic loading of projects when App Inventor is opened.
enableAutoload=Enable Project Autoload

# Description: Switch to enable OpenDyslexic
enableOpenDyslexic=Enable OpenDyslexic

# Description: 
encodingParams=encoding

# Description: 
endParams=end

# Description: 
endedStatusIncomingEndedOption=IncomingEnded

# Description: 
endedStatusIncomingRejectedOption=IncomingRejected

# Description: 
endedStatusOptionList=EndedStatus

# Description: 
endedStatusOutgoingEndedOption=OutgoingEnded

# Description: 
errorCodeParams=errorCode

# Description: Message displayed when an error occurs while generating YAIL for a form.
# 0=formName
errorGeneratingYail=Unable to generate code for {0}.

# Description: 
errorMessageParams=errorMessage

# Description: 
errorNumberParams=errorNumber

# Description: 
ev3ColorSensorComponentPallette=Ev3ColorSensor

# Description: 
ev3CommandsComponentPallette=Ev3Commands

# Description: 
ev3GyroSensorComponentPallette=Ev3GyroSensor

# Description: 
ev3MotorsComponentPallette=Ev3Motors

# Description: 
ev3SoundComponentPallette=Ev3Sound

# Description: 
ev3TouchSensorComponentPallette=Ev3TouchSensor

# Description: 
ev3UIComponentPallette=Ev3UI

# Description: 
ev3UltrasonicSensorComponentPallette=Ev3UltrasonicSensor

# Description: 
# 0=property
expectedLatLongPair=The value supplied for {0} was not a valid latitude, longitude pair.

# Description: 
experimentalComponentPallette=Experimental

# Description: Name of Export all Project menuitem
exportAllProjectsMenuItem=Export all projects

# Description: Name of Export Project menuitem
exportProjectMenuItem=Export selected project (.aia) to my computer

# Description: Name of Export Selected Projects menuitem
# 0=numSelectedProjects
exportSelectedProjectsMenuItem=Export {0} selected projects

# Description: 
extensionComponentPallette=Extension

# Description: Error message when the component descriptors for an extension are not parsable.
# 0=extensionName, 1=projectName
extensionDescriptorCorrupt=The extension description of "{0}" in the project "{1}" is corrupt.

# Description: Extensions link
extensionsMenuItem=Extensions

# Description: Header for extension version information
externalComponentVersion=Extension Version\:

# Description: 
extraKeyValueWarning=ExtraKey and ExtraValue are deprecated and will not be supported. Please use the new Extras property in Blocks.\


# Description: Text for screen animation choice 'Fade '
fadeScreenAnimation=Fade

# Description: 
failingUrlParams=failingUrl

# Description: 
featureCollectionComponentPallette=FeatureCollection

# Description: 
featureParams=feature

# Description: 
featuresParams=features

# Description: Link for Report an Issue form
feedbackMenuItem=Report an Issue

# Description: Link for Report an Issue form
feedbackTabName=Report an Issue

# Description: 
fileComponentPallette=File

# Description: 
fileNameParams=fileName

# Description: 
fileParams=file

# Description: Text for browsers not compatable with HTML5 elements
filePlaybackError=Unfortunately, your browser does not support playback of this file.

# Description: Text for files not compatible with HTML5 elements
filePreviewError=Unfortunately, a preview for this file is unavailable.

# Description: 
fileScopeApp=App

# Description: 
fileScopeAppOption=App

# Description: 
fileScopeAsset=Asset

# Description: 
fileScopeAssetOption=Asset

# Description: 
fileScopeCache=Cache

# Description: 
fileScopeCacheOption=Cache

# Description: 
fileScopeLegacy=Legacy

# Description: 
fileScopeLegacyOption=Legacy

# Description: 
fileScopeOptionList=FileScope

# Description: 
fileScopePrivate=Private

# Description: 
fileScopePrivateOption=Private

# Description: 
fileScopeShared=Shared

# Description: 
fileScopeSharedOption=Shared

# Description: Error message reported when a file couldn't be uploaded because of its size.
fileTooLargeError=Error\: could not upload file because it is too large

# Description: Error message reported when a file couldn't be uploaded to the server.
fileUploadError=Server error\: could not upload file. Please try again later\!

# Description: Caption for file upload wizard.
fileUploadWizardCaption=Upload File ...

# Description: Message displayed when an asset is uploaded.
# 0=filename
fileUploadingMessage=Uploading {0} to the App Inventor server

# Description: Error message when filenames are 0 or 101+ characters long
filenameBadSize=File names must be between 1 and 100 characters.

# Description: Error message when filenames are 0 or 101+ characters long
filenameBadSizeTitle=Error\: Bad Filename Size

# Description: 
fillParams=fill

# Description: Caption and summary for Fill Parent choice
fillParentCaption=Fill parent

# Description: 
finalDialogMessage=<p><b>Your Session is now ended, you may close this window</b></p>

# Description: 
finalDialogText=Your Session is Finished

# Description: 
firebaseDBComponentPallette=FirebaseDB

# Description: 
firebaseExperimentalWarning=FirebaseDB is an experimental feature which may change in the future or break. Packaged Apps built with this component may not function into the indefinite future.

# Description: Error shown when user does not type letter as first character in project name.
firstCharProjectNameError=Project names must begin with a letter

# Description: Text for Sizing choice 'fixed' -- scale to fit device screen
fixedSizing=Fixed

# Description: 
flungSpriteParams=flungSprite

# Description: 
followers2Params=followers2

# Description: 
forInternalUseOnlyComponentPallette=For internal use only

# Description: Label to indicate the application has too many screens.
formCountErrorLabel=WARNING\: The number of screens in this app might exceed the limits of App Inventor. Click <a target\="_blank" href\="/reference/other/manyscreens.html">here</a> for advice about creating apps with many screens. <p>Do you really want to add another screen?</p>

# Description: Label in front of name in new screen dialog.
formNameLabel=Screen name\:

# Description: Name of Forums link
forumsMenuItem=Forums

# Description: 
frequencyHzParams=frequencyHz

# Description: 
frequencyParams=frequency

# Description: 
fromFileNameParams=fromFileName

# Description: 
fromParams=from

# Description: 
fromScopeParams=fromScope

# Description: 
fromUrlButton=From URL...

# Description: 
functionNameParams=functionName

# Description: 
fusiontablesControlComponentPallette=FusiontablesControl

# Description: Prompt for the gallery app report section if user has already reported.
galleryAlreadyReportedPrompt=You already reported this app. An administrator will process your report shortly.

# Description: Text prefix for the gallery app last changed date.
galleryAppChangedPrefix=Changed on 

# Description: Text prefix for the gallery app shared / created date.
galleryAppCreatedPrefix=Created on 

# Description: Error message reported when can't get gallery app like on server.
galleryAppLikeError=Server error\: could not retrieve num of like

# Description: Text for gallery page opening feedback
galleryAppOpening=Opening ...

# Description: Text for gallery page publishing feedback.
galleryAppPublishing=Publishing ...

# Description: Text for gallery page removing feedback
galleryAppRemoving=Removing ...

# Description: Text for gallery page updating feedback
galleryAppUpdating=Updating ...

# Description: Text for gallery page like button (already liked).
galleryAppsAlreadyLike=Unlike

# Description: Title for the gallery page sidebar that shows list of apps of a specific author.
galleryAppsByAuthorSidebar=Apps developed by

# Description: Text for gallery page like button (not liked yet).
galleryAppsLike=Like

# Description: Title prefix for the gallery page sidebar that shows list of remixed apps.
galleryAppsRemixesSidebar=Remixes of 

# Description: Text for gallery By Author Text
galleryByAuthorText=By Author

# Description: Text for gallery app developer prefix text label
galleryByDeveloperPrefixedText=By 

# Description: Text for gallery page cancel button
galleryCancelText=Cancel

# Description: Reference to the Creative Commons License
galleryCcLicenseRef=By submitting an app in the gallery, you are publishing it under a <a href\="https\://creativecommons.org/licenses/by/4.0/" target\="_blank">Creative Commons Attribution License</a>, and affirming that you have the authority to do so.

# Description: Text for gallery page changed date label
galleryChangedDateLabel=Changed Date\: 

# Description: Error message reported when can't get gallery app comments on server.
galleryCommentError=Server error\: could not retrieve comments

# Description: Button for copying share link to clipboard
galleryCopyButton=Copy

# Description: Text for gallery page created date label
galleryCreatedDateLabel=Created Date\: 

# Description: Text for gallery page credit hint
galleryCreditHint=Are you remixing code from other apps? Credit them here.

# Description: Text for gallery page credit label
galleryCreditLabel=Credits\: 

# Description: Error message reported when the gallery delete breaks
galleryDeleteError=Server error\: gallery deletion error

# Description: Text for gallery page description hint
galleryDescriptionHint=Please write the description of the app here.

# Description: Error message reported when can't get developer gallery apps on server.
galleryDeveloperAppError=Server error\: could not retrieve developer gallery apps from gallery

# Description: Error message reported when can't get most downloaded apps server.
galleryDownloadedAppsError=Server error\: could not get most downloaded apps from gallery

# Description: Text for gallery page edit button
galleryEditText=Edit

# Description: Text for gallery Empty Text
galleryEmptyText=

# Description: Error message reported when can't get featured on server.
galleryFeaturedAppError=Server error\: could not retrieve featured apps from gallery

# Description: Text for gallery Feature Text
galleryFeaturedText=Feature

# Description: redirect action of galleryId
galleryGalleryIdAction=/?galleryId\=

# Description: Error message reported when can't get most liked apps server.
galleryLikedAppsError=Server error\: could not get most liked apps from gallery

# Description: 
galleryLoadingDialogText=Project Loading...

# Description: Text for gallery page more info link hint
galleryMoreInfoHint=If this app has a tutorial or video, please enter the URL here.

# Description: Text for gallery page more info link label
galleryMoreInfoLabel=Tutorial / Video\: 

# Description: text for more reports
galleryMoreReports=More Reports

# Description: Error to report when an app with an extension is attempted to be added to the Gallery
galleryNoExtensionsPlease=Apps with extensions cannot be uploaded to the Gallery

# Description: Error messgage for when submitting galleryapp
galleryNoScreenShotMessage=Please submit a screenshot or some other representative image before publishing your app

# Description: Error messgage for when submitting galleryapp
galleryNotEnoughDescriptionMessage=please provide a longer description before publishing your app

# Description: Text for gallery page open the app button
galleryOpenText=Open the App

# Description: Text for gallery page publish button
galleryPublishText=Publish

# Description: Error message reported when can't get recent apps server.
galleryRecentAppsError=Server error\: could not get recent apps from gallery

# Description: Text for the gallery app remix children list.
galleryRemixChildren=Click to view the remixes of this app\!

# Description: Text prefix for the gallery app remixed from label.
galleryRemixedFrom=Remixed from\: 

# Description: Text for remove confirm alert
galleryRemoveConfirmText=Are you really sure you want to remove this app from gallery?

# Description: Text for gallery page remove button
galleryRemoveText=Remove

# Description: Text for the gallery app report button.
galleryReportButton=Submit report

# Description: Prompt for the gallery app report section when user just submitted the report.
galleryReportCompletionPrompt=You reported this app. An administrator will process your report shortly.

# Description: Prompt for the gallery app report section.
galleryReportPrompt=Please explain why you feel this app is disrespectful or inappropriate, or otherwise breaks the <a href\="http\://google.com">App Inventor Gallery Community Guidelines.</a> 

# Description: Text for gallery search button
gallerySearch=Search

# Description: Error message reported when can't search on server.
gallerySearchError=Server error\: could not complete a search of gallery

# Description: Error message reported when the gallery trying to set project gallery id
gallerySetProjectIdError=Server error\: gallery error when setting project gallery id

# Description: Prompt for the gallery app share section.
gallerySharePrompt=Copy and share link\: 

# Description: Text for gallery Single Space Text
gallerySingleSpaceText=\ 

# Description: Link for Gallery
galleryTabName=Gallery

# Description: Text for gallery Tutorial  Text
galleryTutorialText=Tutorial

# Description: Text for gallery Unfeature Text
galleryUnfeaturedText=Unfeature

# Description: Text for gallery Untutorial Text
galleryUntutorialText=Untutorial

# Description: Text for gallery page update button
galleryUpdateText=Update

# Description: gallery app link label
# 0=host, 1=galleryId
galleryVisitGalleryAppLinkLabel=\
\
Visit your app\: {0}/?galleryId\={1}

# Description: 
gameClientComponentPallette=GameClient

# Description: Label of the cascade item for generating YAIL for a project
generateYailMenuItem=Generate YAIL

# Description: 
generatingApplicationInformation=Generating application information

# Description: Message displayed when cannot get a MOTD from the server.
getMotdFailed=Failed to contact server to get the MOTD.

# Description: Name of Getting Started link
getStartedMenuItem=Get Started

# Description: Label showing the ant build date and the git version
# 0=date, 1=version
gitBuildId=Built\: {0}  Version\: {1}

# Description: Text for color choice 'Gray'
grayColor=Gray

# Description: Text for color choice 'Green'
greenColor=Green

# Description: Text for recycler view orientation 'grid'
gridOrientation=grid

# Description: Name of Guide link
guideTabName=Guide

# Description: 
gyroSensorModeAngleOption=Angle

# Description: 
gyroSensorModeOptionList=GyroSensorMode

# Description: 
gyroSensorModeRateOption=Rate

# Description: 
gyroscopeSensorComponentPallette=GyroscopeSensor

# Description: Hard Reset the Emulator.
hardResetConnectionsMenuItem=Hard Reset

# Description: Tool tip text for header icon for closing/removing a minimized box.
hdrClose=Close

# Description: Tool tip text for header icon for minimizing the box.
hdrMinimize=Shrink

# Description: Tool tip text for header icon for restoring a minimized box.
hdrRestore=Expand

# Description: Tool tip text for header icon for context menu of box.
hdrSettings=Settings

# Description: 
headingParams=heading

# Description: 
heightParams=height

# Description: Caption for the height property
heightPropertyCaption=Height

# Description: Label for the Help menu
helpTabName=Help

# Description: Label of the Text of hiding of reportlist
hideLink=hide

# Description: Text on Toggle Warning Button
hideWarnings=Hide Warnings

# Description: Default value for Hint property
# 0=componentName
hintPropertyValue=Hint for {0}

# Description: Text for recycler view orientation 'horizontal'
horisontalOrientation=horizontal

# Description: 
horizontalAlignmentCenterOption=Center

# Description: Text for horizontal alignment choice 'Center'
horizontalAlignmentChoiceCenter=Center

# Description: Text for horizontal alignment choice 'Left
horizontalAlignmentChoiceLeft=Left

# Description: Text for horizontal alignment choice 'Right'
horizontalAlignmentChoiceRight=Right

# Description: 
horizontalAlignmentLeftOption=Left

# Description: 
horizontalAlignmentOptionList=HorizontalAlignment

# Description: 
horizontalAlignmentRightOption=Right

# Description: 
horizontalArrangementComponentPallette=HorizontalArrangement

# Description: 
horizontalScrollArrangementComponentPallette=HorizontalScrollArrangement

# Description: 
hourParams=hour

# Description: 
hoursParams=hours

# Description: 
htmlTextParams=htmlText

# Description: 
humidityParams=humidity

# Description: 
hygrometerComponentPallette=Hygrometer

# Description: 
iceServersParams=iceServers

# Description: 
imageComponentPallette=Image

# Description: 
imageNameParams=imageName

# Description: 
imageParams=image

# Description: 
imagePathParams=imagePath

# Description: 
imagePickerComponentPallette=ImagePicker

# Description: Display Text for ListView layout choice having an image and single line of text.
imageSingleTextLayout=Image,MainText

# Description: 
imageSpriteComponentPallette=ImageSprite

# Description: Display Text for ListView layout choice having an image and two lines of text.
imageTwoTextLayout=Image, MainText, DetailText(Vertical)

# Description: String shown in the palette to import an extension
importExtensionMenuItem=Import extension

# Description: Name of Import Project menuitem
importProjectMenuItem=Import project (.aia) from my computer ...

# Description: Name of Import Template menuitem
importTemplateButton=Import project (.aia) from a repository ...

# Description: Label of the Text of Template 2 of reportlist
# 0=title
inappropriateAppContentEmail=Your app "{0}" has inappropriate content. Please review the guidelines at ...and modify your app accordingly. 

# Description: Label of the Text of Template 1 of reportlist
# 0=title
inappropriateAppContentRemoveEmail=Your app "{0}" has been removed from the gallery due to inappropriate content. Please review the guidelines at http\://ai2.appinventor.mit.edu/about/termsofservice.html. If you feel this action has been taken in error, you may reply directly to this e-mail for discussion. \


# Description: Label of the Inappropriate App Content Remove on reportlist
inappropriateAppContentRemoveTitle=Inappropriate App Content\: Remove

# Description: Label of the Inappropriate App Content on reportlist
inappropriateAppContentTitle=Inappropriate App Content

# Description: Label of the Text of Template 3 of reportlist
inappropriateUserProfileContentEmail=Your profile contains inappropriate content. Please modify your profile.\


# Description: Label of the Inappropriate User Profile Content on reportlist
inappropriateUserProfileContentTitle=Inappropriate User Profile Content

# Description: Caption for input template url wizard.
inputNewUrlCaption=Input a Url...

# Description: 
installURLMethodDescriptions=Downloads the URL and installs it as an Android Package via the installed browser

# Description: 
installURLMethods=installURL

# Description: 
instanceIdParams=instanceId

# Description: 
instantParams=instant

# Description: Alert after an internal error
internalError=An internal error has occurred.

# Description: Confirm alert after an internal error
internalErrorClickOkDebuggingView=An internal error has occurred. Click "ok" for more information.

# Description: Confirmation for reporting a bug after an internal error
internalErrorReportBug=An internal error has occurred. Report a bug?

# Description: Alert after an internal error
internalErrorSeeDebuggingView=An internal error has occurred. Go look in the Debugging view.

# Description: 
internalUseComponentPallette=For internal use only

# Description: Error shown when user types invalid character into project name.
invalidCharProjectNameError=Invalid character. Project names can only contain letters, numbers, and underscores

# Description: Error message when an extension descriptor pathname does not have the correct structure.
# 0=projectName
invalidExtensionInProject=The project "{0}" contains an invalid extension. App Inventor will attempt to continue.

# Description: 
invalidSessionDialogButtonContinue=Continue with Both Sessions

# Description: 
invalidSessionDialogButtonCurrent=Make this the current session

# Description: 
invalidSessionDialogButtonEnd=End This Session

# Description: 
invalidSessionDialogMessage=<p><font color\=red>Warning\:</font> This session is out of date.</p><p>This App Inventor account has been opened from another location. Using a single account from more than one location at the same time can damage your projects.</p><p>Choose one of the buttons below to\:<ul><li>End this session here.</li><li>Make this the current session and make the other sessions out of date.</li><li>Continue with both sessions.</li></ul></p>

# Description: 
invalidSessionDialogText=This Session Is Out of Date

# Description: Title for New Project Name DialogBox on Invalid Format Error.
# 0=projectName
invalidTitleFormatError=Project Name {0} is invalid

# Description: Error message reported when user id or project id is missing
invalidUserIdOrProjectIdError=Please specify both a user email address or id and a project name or id for the project to be downloaded. Ids are numeric and may come from the system logs or from browsing the Datastore. If you use an email address, it must match exactly the stored email address in the Datastore. Similarly, project names must match exactly. Both are case sensitive.

# Description: Label of the button leading to build related cascade items, when building
isBuildingButton=Packaging ...

# Description: 
isConnectedMethodDescriptions=Returns TRUE if the phone is on Wifi, FALSE otherwise

# Description: 
isConnectedMethods=isConnected

# Description: 
isDirectMethodDescriptions=Returns true if we are running in the emulator or USB Connection

# Description: 
isDirectMethods=isDirect

# Description: 
itemToAddParams=itemToAdd

# Description: 
jsParams=js

# Description: 
jsonObjectParams=jsonObject

# Description: 
jsonTextParams=jsonText

# Description: Error message reported when the keystore couldn't be uploaded to the server.
keystoreUploadError=Server error\: could not upload keystore. Please try again later\!

# Description: Caption for keystore upload wizard.
keystoreUploadWizardCaption=Upload Keystore...

# Description: Label of the Cancel Action on reportlist
labelCancel=Cancel

# Description: Label of the Choose Template Label on reportlist
labelChooseTemplate=Choose Template

# Description: 
labelComponentPallette=Label

# Description: Label of the Confirm Action on reportlist
labelConfirm=Confirm

# Description: Label of the Deactivate App on reportlist
labelDeactivateApp=Deactivate App

# Description: Label of the Deactivate App & Send Email on reportlist
labelDeactivateAppAndSendEmail=Deactivate App & Send Email

# Description: Label of the Reactivate App on reportlist
labelReactivateApp=Reactivate App

# Description: Label of the See All Actions of reportlist
labelSeeAllActions=Previous Actions

# Description: Label of the Mark As Resolved of reportlist
labelmarkAsResolved=Mark As Resolved

# Description: Label of the Mark As Unresolved of reportlist
labelmarkAsUnresolved=Mark As Unresolved

# Description: Text for screen orientation choice 'Landscape '
landscapeScreenOrientation=Landscape

# Description: 
languageToTranslateToParams=languageToTranslateTo

# Description: 
latitudeParams=latitude

# Description: 
layoutComponentPallette=Layout

# Description: 
leftParams=left

# Description: Text for text alignment choice 'left'
leftTextAlignment=left

# Description: 
legoMindstormsComponentPallette=LEGO® MINDSTORMS®

# Description: Name of Library link
libraryMenuItem=Library

# Description: Text for color choice 'Light Gray'
lightGrayColor=Light Gray

# Description: 
lightSensorComponentPallette=LightSensor

# Description: 
lineStringComponentPallette=LineString

# Description: Title Bar on ListData property editor
listDataAddDataTitle=Add Data to the ListView

# Description: Confirm cancel from ListData property editor without saving data.
listDataConcelConfirm=Are you sure you want to exit without saving data?

# Description: Column header for detail text on ListData property editor
listDataDetailTextHeader=Detail Text

# Description: Column header for image file name on ListData property editor
listDataImageHeader=Image

# Description: Column header for main text on ListData property editor
listDataMainTextHeader=Main Text

# Description: 
listElementParams=listElement

# Description: 
listParams=list

# Description: 
listPickerComponentPallette=ListPicker

# Description: 
listViewComponentPallette=ListView

# Description: Error message reported when a source file couldn't be loaded from the server.
loadError=Server error\: could not load file. Please try again later\!

# Description: Message to display when an asset is being downloaded from the server
# 0=assetPath
loadingAsset=Downloading {0} from the App Inventor server...

# Description: 
locationNameParams=locationName

# Description: 
locationSensorComponentPallette=LocationSensor

# Description: Text for the "Login to New Gallery" Button
loginToGallery=Login to Gallery

# Description: Show toast for a Toast_Long of time
longToastLength=Long

# Description: 
longitudeParams=longitude

# Description: 
luxParams=lux

# Description: Text for color choice 'Magenta'
magentaColor=Magenta

# Description: 
magneticFieldSensorComponentPallette=MagneticFieldSensor

# Description: 
mailboxParams=mailbox

# Description: 
mainTextParams=mainText

# Description: 
makePublicParams=makePublic

# Description: Error message when component name contains non-alphanumeric characters besides _ or does not start with a letter
malformedComponentNameError=Component names can contain only letters, numbers, and underscores and must start with a letter

# Description: Error message when file name contains characters that would require URL encoding.
malformedFilename=File names can contain only unaccented letters, numbers, and the characters "-", "_", ".", "\!", "~", "*", "(", and ")"

# Description: Error message when file name contains characters that would require URL encoding.
malformedFilenameTitle=Error\: Malformed Filename

# Description: Error message when form name contains non-alphanumeric characters besides _
malformedFormNameError=Screen names can contain only letters, numbers, and underscores and must start with a letter

# Description: Error shown after validation of input text failed.
malformedInputError=Malformed input\!

# Description: Error message when project name does not start with a letter or contains a character that is not a letter, number, or underscore.
malformedProjectNameError=Project names must start with a letter and can contain only letters, numbers, and underscores

# Description: 
# 0=numArgs
mapCenterWrongNumberArgumentsException=Expected 2 values for CenterFromString but got {0}

# Description: 
mapComponentPallette=Map

# Description: 
mapFeatureCircleOption=Circle

# Description: 
mapFeatureLineStringOption=LineString

# Description: 
mapFeatureMarkerOption=Marker

# Description: 
mapFeatureOptionList=MapFeature

# Description: 
mapFeatureParams=mapFeature

# Description: 
mapFeaturePolygonOption=Polygon

# Description: 
mapFeatureRectangleOption=Rectangle

# Description: Tooltip shown when the user hovers the mouse over the Map component's lock map control
mapLockMovementTooltip=Lock map movement

# Description: Tooltip shown when the user hovers the mouse over the Map component's reset map control
mapResetBoundingBoxTooltip=Reset bounding box

# Description: Display name for the imperial unit system
mapScaleUnitsImperial=Imperial

# Description: Display name for the metric unit system
mapScaleUnitsMetric=Metric

# Description: Tooltip shown when the user hovers the mouse over the Map component's set initial map control
mapSetInitialMapTooltip=Set initial map to current view

# Description: Aerial photography map type
mapTypeAerial=Aerial

# Description: 
mapTypeAerialOption=Aerial

# Description: 
mapTypeOptionList=MapType

# Description: 
mapTypeRoadOption=Road

# Description: Road network map type
mapTypeRoads=Roads

# Description: Terrain map type
mapTypeTerrain=Terrain

# Description: 
mapTypeTerrainOption=Terrain

# Description: Tooltip shown when the user hovers the mouse over the Map component's unlock map control
mapUnlockMovementTooltip=Unlock map component

# Description: Tooltip shown when the user hovers the mouse over the Map component's zoom in control
mapZoomIn=Zoom In

# Description: 
mapZoomLevelOutOfBoundsException=ZoomLevel must be between 1 and 18

# Description: Tooltip shown when the user hovers the mouse over the Map component's zoom out control
mapZoomOut=Zoom Out

# Description: 
mapsComponentPallette=Maps

# Description: 
markerComponentPallette=Marker

# Description: List item in Subset Property Editor
matchProjectButton=Match Project

# Description: 
mediaComponentPallette=Media

# Description: 
mediaStoreComponentPallette=MediaStore

# Description: 
mediafileParams=mediafileParams

# Description: 
mentionsParams=mentions

# Description: 
messageParams=message

# Description: 
messageTextParams=messageText

# Description: Caption for message output box.
messagesOutputBoxCaption=Messages

# Description: 
messagesParams=messages

# Description: 
millisParams=millis

# Description: 
millisecondsParams=milliseconds

# Description: 
millisecsParams=millisecs

# Description: 
minuteParams=minute

# Description: 
minutesParams=minutes

# Description: 
modeParams=mode

# Description: Text for accelerometer sensitivity choice 'moderate'
moderateAccelerometerSensitivity=moderate

# Description: Label of the Text of deativating this app with email of reportlist
moderationActionDeactivateThisAppWithEmail=deativates this app with email\: 

# Description: Label of the Text of marking this report as resolved of reportlist
moderationActionMarkThisReportAsResolved=marks this report as resolved

# Description: Label of the Text of marking this report as unresolved of reportlist
moderationActionMarkThisReportAsUnresolved=marks this report as unresolved

# Description: Label of the Text of reactivating this app of reportlist
moderationActionReactivateThisApp=reactivates this app

# Description: Label of the Text of sending an email of reportlist
moderationActionSendAnEmail=sends an email\: 

# Description: Label of the app author field on moderation page
moderationAppAuthorHeader=App Author

# Description: Title of the email when app was deactivated
moderationAppDeactivatedTitle=App Inventor Gallery\: App Deactivated

# Description: Label of the app field on moderation page
moderationAppHeader=App

# Description: Body of the email when app was activated
# 0=title
moderationAppReactivateBody=Your app "{0}" has been reactivated.

# Description: Title of the email when app was activated
moderationAppReactivatedTitle=App Inventor Gallery\: App Activated

# Description: Label of ... 
moderationDotDotDot=...

# Description: error message when fail to send to user from moderator
moderationErrorFailToSendEmail=Fail to send out the email, please try again later

# Description: Label of the created date of report field on moderation page
moderationReportDateCreatedHeader=Reported On

# Description: Label of the report text field on moderation page
moderationReportTextHeader=Report

# Description: Label of the reporter field on moderation page
moderationReporterHeader=Reporter

# Description: Title of the email when moderator sends out an email
moderationSendEmailTitle=An Email from App Inventor Gallery

# Description: Label of the Text of showing resolved reports of reportlist
moderationShowResolvedReports=Show resolved reports

# Description: Text for font typeface choice 'monospace '
monospaceFontTypeface=monospace

# Description: 
monthParams=month

# Description: 
monthsParams=months

# Description: Label of the button leading to more cascade items
moreActionsButton=More Actions

# Description: Label of the link to a component's reference docs
moreInformation=More information

# Description: Initial caption for MOTD box.
motdBoxCaption=Welcome to App Inventor\!

# Description: 
motorPortLetterParams=motorPortLetter

# Description: Error message reported when moving the project to trash failed on the server.
moveToTrashProjectError=Server error\: could not move project to trash. Please try again later\!

# Description: 
msParams=ms

# Description: String shown when multiple components have different values for a property
multipleValues=<multiple>

# Description: Text on "Projects" button
myProjectsButton=My Projects

# Description: Name of My Projects tab
myProjectsTabName=My Projects

# Description: 
nameParams=name

# Description: 
navigationComponentPallette=Navigation

# Description: 
nearFieldComponentPallette=NearField

# Description: Title of new Screen dialog.
newFormTitle=New Screen

# Description: Label next to the new name in a rename dialog
newNameLabel=New name\:

# Description: Label of the menu item for creating a new project
newProjectMenuItem=Start new project

# Description: Label for template url wizard.
newUrlLabel=Templates Url\: 

# Description: Caption for the wizard to create a new Young Android project
newYoungAndroidProjectWizardCaption=Create new App Inventor project

# Description: Exception message used when a project contains a newer version component than the version known by the system
# 0=componentType, 1=srcCompVersion, 2=sysCompVersion
newerVersionComponentException=Unable to load project with {0} version {1} (maximum known version is {2}).

# Description: Alert message displayed when project is newer than system
newerVersionProject=This project was saved with a newer version of the App Inventor system. We will attempt to load the project, but there may be compatibility issues.

# Description: Text on 'Next' button to proceed to the next page of the wizard.
nextButton=Next

# Description: Message displayed when OK button is clicked when there is no asset selected.
noAssetSelected=You must select an asset\!

# Description: Error message shown when a project references an unknown component.
# 0=componentName, 1=projectName
noComponentFound=Unable to find component "{0}" while loading project "{1}".

# Description: Message displayed when OK button is clicked when there is no component selected.
noComponentSelected=You must select a component\!

# Description: Error message reported when a file was not selected.
noFileSelected=Please select a file to upload.

# Description: Error message reported when a file was not selected.
noFileSelectedTitle=Error\: No File Selected

# Description: Error message displayed when no keystore file exists
noKeystoreToDownload=There is no keystore file to download.

# Description: 
noParams=no

# Description: Error message displayed when no project is selected
noProjectSelectedForDelete=Please select a project to delete

# Description: Error message displayed when no project is selected
noProjectSelectedForRestore=Please select a project to restore

# Description: Exception message used when a component was not upgraded
# 0=componentType, 1=srcCompVersion, 2=sysCompVersion
noUpgradeStrategyException=No upgrade strategy exists for {0} from version {1} to {2}.

# Description: Error message reported when no url is entered.
noUrlError=Please enter a url

# Description: Header for the non-visible components in the designer.
nonVisibleComponentsHeader=Non-visible components

# Description: Caption for None entry
noneCaption=None

# Description: Text for color choice 'None'
noneColor=None

# Description: Text for screen animation choice 'None '
noneScreenAnimation=None

# Description: Error shown after validation of custom length field failed.
nonnumericInputError=The value must be an integer greater than or equal to 0

# Description: Error shown after validation of percentage input fields.
nonvalidPercentValue=Percentage input values should be between 0 and 100

# Description: Title for Error Dialog when connection is attempted without a project.
noprojectDialogTitle=No Project Chosen

# Description: Error message for connection attempt without a project selected.
noprojectDuringConnect=You must first create or select a project before connecting\!

# Description: Error shown after validation of float failed.
# 0=nonNumericText
notAFloat={0} is not a legal number

# Description: Name of the event parameter that indicates whether an event has already been handled or not.
notAlreadyHandledParams=notAlreadyHandled

# Description: Error shown after validation of integer failed.
# 0=nonNumericText
notAnInteger={0} is not a legal integer

# Description: Error message reported when the file selected for upload is not a component archive.
notComponentArchiveError=The selected file is not a component file\!\
Component files are aix files.

# Description: Error message reported when the file selected for upload is not a keystore.
notKeystoreError=The selected file is not a keystore\!

# Description: Error message reported when the file selected for upload is not a project archive.
notProjectArchiveError=The selected project is not a project source file\!\
Project source files are aia files.

# Description: 
noticeParams=notice

# Description: 
notifierComponentPallette=Notifier

# Description: 
numberOfBytesParams=numberOfBytes

# Description: 
numberParams=number

# Description: 
nxtColorSensorComponentPallette=NxtColorSensor

# Description: 
nxtDirectCommandsComponentPallette=NxtDirectCommands

# Description: 
nxtDriveComponentPallette=NxtDrive

# Description: 
nxtLightSensorComponentPallette=NxtLightSensor

# Description: 
nxtMailboxBox10Option=Box10

# Description: 
nxtMailboxBox1Option=Box1

# Description: 
nxtMailboxBox2Option=Box2

# Description: 
nxtMailboxBox3Option=Box3

# Description: 
nxtMailboxBox4Option=Box4

# Description: 
nxtMailboxBox5Option=Box5

# Description: 
nxtMailboxBox6Option=Box6

# Description: 
nxtMailboxBox7Option=Box7

# Description: 
nxtMailboxBox8Option=Box8

# Description: 
nxtMailboxBox9Option=Box9

# Description: 
nxtMailboxOptionList=NxtMailbox

# Description: 
nxtMotorModeBrakeOption=Brake

# Description: 
nxtMotorModeCoastOption=Coast

# Description: 
nxtMotorModeOnOption=On

# Description: 
nxtMotorModeOptionList=NxtMotorMode

# Description: 
nxtMotorModeRegulatedOption=Regulated

# Description: 
nxtMotorPortOptionList=NxtMotorPort

# Description: 
nxtMotorPortPortAOption=PortA

# Description: 
nxtMotorPortPortBOption=PortB

# Description: 
nxtMotorPortPortCOption=PortC

# Description: 
nxtRegulationModeDisabledOption=Disabled

# Description: 
nxtRegulationModeOptionList=NxtRegulationMode

# Description: 
nxtRegulationModeSpeedOption=Speed

# Description: 
nxtRegulationModeSynchronizationOption=Synchronization

# Description: 
nxtRunStateDisabledOption=Disabled

# Description: 
nxtRunStateOptionList=NxtRunState

# Description: 
nxtRunStateRampDownOption=RampDown

# Description: 
nxtRunStateRampUpOption=RampUp

# Description: 
nxtRunStateRunningOption=Running

# Description: 
nxtSensorModeBooleanOption=Boolean

# Description: 
nxtSensorModeOptionList=NxtSensorMode

# Description: 
nxtSensorModePercentageOption=Percentage

# Description: 
nxtSensorModePeriodCountOption=PeriodCount

# Description: 
nxtSensorModeRawOption=Raw

# Description: 
nxtSensorModeRcxAngleStepsOption=RcxAngleSteps

# Description: 
nxtSensorModeRcxCelsiusOption=RcxCelsius

# Description: 
nxtSensorModeRcxFahrenheitOption=RcxFahrenheit

# Description: 
nxtSensorModeTransitionCountOption=TransitionCount

# Description: 
nxtSensorPortOptionList=NxtSensorPort

# Description: 
nxtSensorPortPort1Option=Port1

# Description: 
nxtSensorPortPort2Option=Port2

# Description: 
nxtSensorPortPort3Option=Port3

# Description: 
nxtSensorPortPort4Option=Port4

# Description: 
nxtSensorTypeColorBlueOption=ColorBlue

# Description: 
nxtSensorTypeColorFullOption=ColorFull

# Description: 
nxtSensorTypeColorGreenOption=ColorGreen

# Description: 
nxtSensorTypeColorNoneOption=ColorNone

# Description: 
nxtSensorTypeColorRedOption=ColorRed

# Description: 
nxtSensorTypeDigital12C9VOption=Digital12C9V

# Description: 
nxtSensorTypeDigital12COption=Digital12C

# Description: 
nxtSensorTypeLightOffOption=LightOff

# Description: 
nxtSensorTypeLightOnOption=LightOn

# Description: 
nxtSensorTypeNoSensorOption=NoSensor

# Description: 
nxtSensorTypeOptionList=NxtSensorType

# Description: 
nxtSensorTypeRcxAngleOption=RcxAngle

# Description: 
nxtSensorTypeRcxLightOption=RcxLight

# Description: 
nxtSensorTypeRcxTemperatureOption=RcxTemperature

# Description: 
nxtSensorTypeSoundDBAOption=SoundDBA

# Description: 
nxtSensorTypeSoundDBOption=SoundDB

# Description: 
nxtSensorTypeTouchOption=Touch

# Description: 
nxtSoundSensorComponentPallette=NxtSoundSensor

# Description: 
nxtTouchSensorComponentPallette=NxtTouchSensor

# Description: 
nxtUltrasonicSensorComponentPallette=NxtUltrasonicSensor

# Description: Caption for ODE log box.
odeLogBoxCaption=Developer Messages

# Description: Text on "OK" button.
okButton=OK

# Description: Label next to the old name in a rename dialog
oldNameLabel=Old name\:

# Description: Label of the button for opening the blocks editor
openBlocksEditorButton=Open the Blocks Editor

# Description: 
operationParams=operation

# Description: Text for color choice 'Orange'
orangeColor=Orange

# Description: 
orientationSensorComponentPallette=OrientationSensor

# Description: 
otherParams=other

# Description: 
otherScreenNameParams=otherScreenName

# Description: Text for button shape choice 'oval'
ovalButtonShape=oval

# Description: Text on "Overwrite" button
overwriteButton=Overwrite

# Description: Message shown during a building RPC (for Young Android, called 'packaging')
packagingRpcMessage=Packaging ...

# Description: Caption for palette box.
paletteBoxCaption=Palette

# Description: 
partialParams=partial

# Description: 
passwordTextBoxComponentPallette=PasswordTextBox

# Description: 
pathParams=path

# Description: 
patternParams=pattern

# Description: 
pedometerComponentPallette=Pedometer

# Description: Caption for percent label
percentCaption=percent

# Description: Summary for length in percent
# 0=percent
percentSummary={0} percent

# Description: 
permissionAccountManagerOption=AccountManager

# Description: 
permissionAudioOption=Audio

# Description: 
permissionBluetoothAdminOption=BluetoothAdmin

# Description: 
permissionBluetoothOption=Bluetooth

# Description: 
permissionCameraOption=Camera

# Description: 
permissionCoarseLocationOption=CoarseLocation

# Description: 
permissionFineLocationOption=FineLocation

# Description: 
permissionGetAccountsOption=GetAccounts

# Description: 
permissionInternetOption=Internet

# Description: 
permissionLocationExtraCommandsOption=LocationExtraCommands

# Description: 
permissionManageAccountsOption=ManageAccounts

# Description: 
permissionMockLocationOption=MockLocation

# Description: The name of the parameter that is used to report the name of a needed permission.
permissionNameParams=permissionName

# Description: 
permissionNearFieldCommunicationOption=NearFieldCommunication

# Description: 
permissionNetworkStateOption=NetworkState

# Description: 
permissionOptionList=Permission

# Description: 
permissionReadContactsOption=ReadContacts

# Description: 
permissionReadExternalStorageOption=ReadExternalStorage

# Description: 
permissionUseCredentialsOption=UseCredentials

# Description: 
permissionVibrateOption=Vibrate

# Description: 
permissionWifiStateOption=WifiState

# Description: 
permissionWriteExternalStorageOption=WriteExternalStorage

# Description: 
phoneCallComponentPallette=PhoneCall

# Description: Error message displayed when the user wants to download a project to the phone, but the phone is not connected.
phoneNotConnected=The phone is not connected.

# Description: 
phoneNumberParams=phoneNumber

# Description: 
phoneNumberPickerComponentPallette=PhoneNumberPicker

# Description: 
phoneStatusComponentPallette=PhoneStatus

# Description: Text for color choice 'Pink'
pinkColor=Pink

# Description: 
pitchParams=pitch

# Description: Caption for pixels label
pixelsCaption=pixels

# Description: Summary for custom length in pixels
# 0=pixels
pixelsSummary={0} pixels

# Description: 
playerComponentPallette=Player

# Description: 
playerEmailParams=playerEmail

# Description: 
playerIdParams=playerId

# Description: 
pointListParams=pointList

# Description: 
pointsParams=points

# Description: 
polygonComponentPallette=Polygon

# Description: Text for screen orientation choice 'Portrait '
portraitScreenOrientation=Portrait

# Description: 
powerParams=power

# Description: 
preparingApplicationIcon=Preparing application icon

# Description: 
preparingFinalPackage=Preparing final package

# Description: 
pressureParams=pressure

# Description: 
prevXParams=prevX

# Description: 
prevYParams=prevY

# Description: Listbox (monitor) controlling whether to display Android Holo Theme Style
previewAndroidHolo=Android 3.0-4.4.2 Devices

# Description: Listbox (monitor) controlling whether to display Android Material Theme Style
previewAndroidMaterial=Android 5+ Devices

# Description: Label for the context menu command that previews a file
previewFileCommand=Preview...

# Description: Listbox (monitor) controlling whether to display iOS Theme Style
previewIOS=iOS 13 Devices

# Description: Listbox (monitor) controlling whether to display a preview on Monitor size.
previewMonitorSize=Monitor size

# Description: Listbox (phone) controlling whether to display a preview on Phone size.
previewPhoneSize=Phone size

# Description: Listbox (tablet) controlling whether to display a preview on Tablet size.
previewTabletSize=Tablet size

# Description: Label for previous checkpoints table in checkpoint dialog.
previousCheckpointsLabel=Previous checkpoints\:

# Description: Label of the link for Privacy
privacyLink=Privacy

# Description: Label of the link for Privacy and Terms of Use
privacyTermsLink=Privacy Policy and Terms of Use

# Description: 
programNameParams=programName

# Description: Header for date created column of project table.
projectDateCreatedHeader=Date Created

# Description: Header for date modified column of project table.
projectDateModifiedHeader=Date Modified

# Description: Label for the project id input text box
projectIdLabel=Project id or name\:

# Description: Error message reported when information about projects could not be retrieved from the server.
projectInformationRetrievalError=Server error\: could not retrieve project information. Please try again later\!

# Description: Caption for project list box.
projectListBoxCaption=Projects

# Description: Error message reported when a project could not be loaded from the server.
projectLoadError=Server error\: could not load project. Please try again later\!

# Description: Name of My projects menuitem
projectMenuItem=My projects

# Description: Header for name column of project table
projectNameHeader=Name

# Description: Label for the project name input text box
projectNameLabel=Project name\:

# Description: Header for published column of project table.
projectPublishedHeader=Published

# Description: Error message reported when a project couldn't be uploaded to the server.
projectUploadError=Server error\: could not upload project. Please try again later\!

# Description: Caption for project upload wizard.
projectUploadWizardCaption=Import Project...

# Description: Alert message displayed when a project is upgraded
# 0=details
projectWasUpgraded=This project was created with an older version of the App Inventor system and was upgraded.\
{0}

# Description: Name of Projects tab
projectsTabName=Projects

# Description: Caption for properties box.
propertiesBoxCaption=Properties

# Description: 
providerParams=provider

# Description: 
proximitySensorComponentPallette=ProximitySensor

# Description: Text on "Publish" button
publishButton=Publish

# Description: Text on "Publish to Gallery" button
publishToGalleryButton=Publish to Gallery

# Description: 
quantityParams=quantity

# Description: 
queryParams=query

# Description: 
rParams=r

# Description: 
radiusParams=radius

# Description: 
rateValues=rate

# Description: 
readOnlyMode=You are in Read Only Mode

# Description: Confirmation query for deleting a component
reallyDeleteComponent=Deleting this component will delete all blocks associated with it in the Blocks Editor. Are you sure you want to delete?

# Description: Confirmation message that will be shown before deleting a file
reallyDeleteFile=Do you really want to delete this file?  It will be removed from the App Inventor server.  Also, parts of your application may still refer to the deleted file, and you will need to change these.

# Description: Confirmation query for removing a screen
# 0=formName
reallyDeleteForm=Deleting this screen will completely remove the screen from your project. All components and blocks associated with this screen will be deleted.\
There is no undo.\
Are you sure you want to delete {0}?

# Description: Confirmation query for removing a screen
# 0=formName
reallyDeleteWarning=Warning\: You are deleting a screen.\
This operation cannot be undone.\
Please type the name of the screen {0} into the box below to confirm you really want to do this.

# Description: Confirmation query for removing a component
reallyRemoveComponent=Removing this component will delete all components and blocks associated with them in the Project. Are you sure you want to delete?

# Description: 
receivingStateAlwaysOption=Always

# Description: 
receivingStateForegroundOption=Foreground

# Description: 
receivingStateOffOption=Off

# Description: 
receivingStateOptionList=ReceivingState

# Description: 
recipientsParams=recipients

# Description: Text for button shape choice 'rectangular'
rectButtonShape=rectangular

# Description: 
rectangleComponentPallette=Rectangle

# Description: 
recursiveParams=recursive

# Description: Text for color choice 'Red'
redColor=Red

# Description: 
reflectedValues=reflected

# Description: Refresh the companion screen.
refreshCompanionMenuItem=Refresh Companion Screen

# Description: 
regulationModeParams=regulationMode

# Description: 
relativeParams=relative

# Description: 
reloadWindow=Reload

# Description: Label of the button for removing a screen
removeFormButton=Remove Screen

# Description: Label of the button for rename
renameButton=Rename

# Description: Title for the rename component dialog
renameTitle=Rename Component

# Description: 
rendezvousServerParams=rendezvousServer

# Description: Label for new project name Textbox.
requestNewProjectNameLabel=Enter a New Name

# Description: Error shown when a new name is a reserved name in Yail or Java code
reservedNameError=Name cannot be any of the following\: CsvUtil, Double, Float, Integer, JavaCollection, JavaIterator, KawaEnvironment, Long, Short, SimpleForm, String, Pattern, YailDictionary, YailList, YailNumberToString, YailRuntimeError, abstract, continue, for, new, switch, assert, default, goto, package, synchronized, boolean, do, if, private, this, break, double, implements, protected, throw, byte, else, import, public, throws, case, enum, instanceof, return, transient, catch, extends, int, short, try, char, final, interface, static, void, class, finally, long, strictfp, volatile, const, float, native, super, while, begin, def, foreach, forrange, JavaStringUtils, quote

# Description: Title for New Project Name DialogBox on Reserved Name Error.
# 0=projectName
reservedTitleFormatError=The Name {0} is Reserved

# Description: Reset all connections.
resetConnectionsMenuItem=Reset Connection

# Description: 
responseCodeParams=responseCode

# Description: 
responseContentParams=responseContent

# Description: 
responseParams=response

# Description: 
responseTypeParams=responseType

# Description: Text for Sizing choice 'responsive' -- size based on device type
responsiveSizing=Responsive

# Description: Text on "Restore" button
restoreProjectButton=Restore

# Description: Error message reported when restoring a project failed on the server.
restoreProjectError=Server error\: could not restore project. Please try again later\!

# Description: 
resultParams=result

# Description: 
rightParams=right

# Description: Text for text alignment choice 'right'
rightTextAlignment=right

# Description: 
rollParams=roll

# Description: Text for button shape choice 'rounded'
roundedButtonShape=rounded

# Description: 
runStateParams=runState

# Description: 
rxDataLengthParams=rxDataLength

# Description: Error shown when a new component type would be the same as a component instance name
sameAsComponentInstanceNameError=Component names cannot be the same as that of a component instance

# Description: Error shown when a new component name would be the same as a component type name
sameAsComponentTypeNameError=Component instance names cannot be the same as a component type

# Description: Text for font typeface choice 'sans serif '
sansSerifFontTypeface=sans serif

# Description: Label of the button for save as
saveAsButton=Export to File ...

# Description: Name of Save as ... menuitem
saveAsMenuItem=Save project as ...

# Description: Title of save as dialog.
# 0=projectName
saveAsTitle=Save As - {0}

# Description: Label of the button for save
saveButton=Save

# Description: Error message reported when a source file couldn't be saved to the server.
saveError=Server error\: could not save file. Please try again later\!

# Description: Error message reported when one or more file couldn't be saved to the server.
saveErrorMultipleFiles=Server error\: could not save one or more files. Please try again later\!

# Description: Name of Save menuitem
saveMenuItem=Save project

# Description: Message reported when project was saved successfully.
# 0=saveTime
savedProject=Saved project at {0}

# Description: Message that is shown to indicate that a saving RPC is going on
savingRpcMessage=Saving ...

# Description: A choice in ScalingChoicePropertyEditor
scaleProportionally=Scale proportionally

# Description: A choice in ScalingChoicePropertyEditor
scaleToFit=Scale to fit

# Description: 
scaleUnitsImperialOption=Imperial

# Description: 
scaleUnitsMetricOption=Metric

# Description: 
scaleUnitsOptionList=ScaleUnits

# Description: 
scopeParams=scope

# Description: 
screenAnimationDefaultOption=Default

# Description: 
screenAnimationFadeOption=Fade

# Description: 
screenAnimationNoneOption=None

# Description: 
screenAnimationOptionList=ScreenAnimation

# Description: 
screenAnimationSlideHorizontalOption=SlideHorizontal

# Description: 
screenAnimationSlideVerticalOption=SlideVertical

# Description: 
screenAnimationZoomOption=Zoom

# Description: 
screenComponentPallette=Screen

# Description: 
screenOrientationBehindOption=Behind

# Description: 
screenOrientationFullSensorOption=FullSensor

# Description: 
screenOrientationLandscapeOption=Landscape

# Description: 
screenOrientationNoSensorOption=NoSensor

# Description: 
screenOrientationOptionList=ScreenOrientation

# Description: 
screenOrientationPortraitOption=Portrait

# Description: 
screenOrientationReverseLandscapeOption=ReverseLandscape

# Description: 
screenOrientationReversePortraitOption=ReversePortrait

# Description: 
screenOrientationSensorLandscapeOption=SensorLandscape

# Description: 
screenOrientationSensorOption=Sensor

# Description: 
screenOrientationSensorPortraitOption=SensorPortrait

# Description: 
screenOrientationUnspecifiedOption=Unspecified

# Description: 
screenOrientationUserOption=User

# Description: Label of the button for switching screens
screensButton=Screens ...

# Description: Text shown in the component palette search box
searchComponents=Search Components...

# Description: 
searchResultsParams=searchResults

# Description: 
secondParams=second

# Description: 
secondParamsMethods=secondParams

# Description: 
secondsParams=seconds

# Description: 
secureParams=secure

# Description: Label of the Text of seeing more of reportlist
seeMoreLink=see more ...

# Description: 
seedParams=seed

# Description: Error Message for when more then one project (or no projects) are selected to send to the new gallery
selectOnlyOneProject=Please only select one project

# Description: 
selectionParams=selection

# Description: 
senderParams=sender

# Description: Message to display when sending an asset to the companion
# 0=assetPath
sendingAssetToCompanion=Sending {0} to companion...

# Description: 
sensitivityModerateOption=Moderate

# Description: 
sensitivityOptionList=Sensitivity

# Description: 
sensitivityStrongOption=Strong

# Description: 
sensitivityWeakOption=Weak

# Description: 
sensorModeParams=sensorMode

# Description: 
sensorPortLetterParams=sensorPortLetter

# Description: Text for screen orientation choice 'Sensor '
sensorScreenOrientation=Sensor

# Description: 
sensorTypeParams=sensorType

# Description: 
sensorValueParams=sensorValue

# Description: 
sensorsComponentPallette=Sensors

# Description: 
serialComponentPallette=Serial

# Description: Text for font typeface choice 'serif '
serifFontTypeface=serif

# Description: Error message if the server becomes completely unavailable.
serverUnavailable=The server is temporarily unavailable. Please try again later\!

# Description: 
serviceNameParams=serviceName

# Description: 
sessionDead=Either your session has expired, or App Inventor has been upgraded. You will need to "Reload" your session to continue. Press the "Reload" Button below.

# Description: 
setAssetsLoadedMethodDescriptions=Declare that we have loaded our initial assets and other assets should come from the sdcard

# Description: 
setAssetsLoadedMethods=setAssetsLoaded

# Description: 
setHmacSeedReturnCodeMethodDescriptions=Establish the secret seed for HOTP generation. Return the SHA1 of the provided seed, this will be used to contact the rendezvous server. Note\: This code also starts the connection negotiation process if we are using WebRTC. This is a bit of a kludge...

# Description: 
setHmacSeedReturnCodeMethods=setHmacSeedReturnCode

# Description: Error message reported when the settings couldn't be loaded from the server.
settingsLoadError=Server error\: could not load settings. Please try again later\!

# Description: Error message reported when the settings couldn't be saved to the server.
settingsSaveError=Server error\: could not save settings. Please try again later\!

# Description: User Settings
settingsTabName=Settings

# Description: 
sharingComponentPallette=Sharing

# Description: Show toast for a Toast_Short of time
shortToastLength=Short

# Description: 
showEmptyTrashMessage=Your Trash List is Empty

# Description: Label of item for building a project as aab and showing the qr+download dialog
showExportAndroidAab=Android App Bundle (.aab)

# Description: Label of item for building a project as aab and showing the qr+download dialog
showExportAndroidAab2=[2] Android App Bundle (.aab)

# Description: Label of item for building a project as apk and showing the qr+download dialog
showExportAndroidApk=Android App (.apk)

# Description: Label of item for building a project as apk and showing the qr+download dialog
showExportAndroidApk2=[2] Android App (.apk)

# Description: Checkbox controlling whether to display invisible components in the designer.
showHiddenComponentsCheckbox=Display hidden components in Viewer

# Description: Redisplay the Splash Screen
showSplashMenuItem=Show Splash Screen

# Description: 
showSurveySplashButtonLater=Take Survey Later

# Description: 
showSurveySplashButtonNever=Never Take Survey

# Description: 
showSurveySplashButtonNow=Take Survey Now

# Description: 
showSurveySplashMessage=<h2>Please fill out a short voluntary survey so that we can learn more about our users and improve MIT App Inventor.</h2>

# Description: Text on Toggle Warning Button
showWarnings=Show Warnings

# Description: 
shutdownMethodDescriptions=Really Exit the Application

# Description: 
shutdownMethods=shutdown

# Description: Label of the link for signing out
signOutLink=Sign out

# Description: 
simpleStepsParams=simpleSteps

# Description: Display Text for ListView layout choice having single text.
singleTextLayout=MainText

# Description: Text for screen animation choice 'SlideHorizontal '
slideHorizontalScreenAnimation=SlideHorizontal

# Description: Text for screen animation choice 'SlideVertical '
slideVerticalScreenAnimation=SlideVertical

# Description: 
sliderComponentPallette=Slider

# Description: 
socialComponentPallette=Social

# Description: 
soundComponentPallette=Sound

# Description: 
soundParams=sound

# Description: 
soundRecorderComponentPallette=SoundRecorder

# Description: 
sourceParams=source

# Description: Caption for source structure box.
sourceStructureBoxCaption=Components

# Description: 
speechRecognizerComponentPallette=SpeechRecognizer

# Description: 
speedParams=speed

# Description: 
spinnerComponentPallette=Spinner

# Description: 
startAngleParams=startAngle

# Description: 
startHTTPDMethodDescriptions=Start the internal AppInvHTTPD to listen for incoming forms. FOR REPL USE ONLY\!

# Description: 
startHTTPDMethods=startHTTPD

# Description: 
startParams=start

# Description: 
startWebRTCMethodDescriptions=Start the WebRTC engine

# Description: 
startWebRTCMethods=startWebRTC

# Description: 
startXParams=startX

# Description: 
startYParams=startY

# Description: 
startedStatusIncomingOption=Incoming

# Description: 
startedStatusOptionList=StartedStatus

# Description: 
startedStatusOutgoingOption=Outgoing

# Description: 
startingConnectionDialog=0 Starting Up

# Description: 
statusParams=status

# Description: 
storageComponentPallette=Storage

# Description: Text for accelerometer sensitivity choice 'strong'
strongAccelerometerSensitivity=strong

# Description: Title for New Project Name DialogBox on Success.
successfulTitleFormat=New Project Name Success

# Description: Title for dialog box.
# 0=projectName
suggestNameTitleCaption=\
Do you want to continue with {0}

# Description: 
sweepAngleParams=sweepAngle

# Description: 
switchComponentPallette=Switch

# Description: Label of the button for switching language
switchLanguageButton=Language

# Description: Label of the button for switching to the blocks editor
switchToBlocksEditorButton=Blocks

# Description: Label of the button for admins to switch to the debug panel without an explicit error
switchToDebugMenuItem=Switch To Debug Panel

# Description: Label of the button for switching to the form editor
switchToFormEditorButton=Designer

# Description: Symbol X
symbolX=X

# Description: Name of Debugging tab
tabNameDebugging=(Debugging)

# Description: Name of Design tab
tabNameDesign=Design

# Description: 
tableArrangementComponentPallette=TableArrangement

# Description: 
tableIdParams=tableId

# Description: 
tachoCountParams=tachoCount

# Description: 
tachoCountsParams=tachoCounts

# Description: 
tachoLimitParams=tachoLimit

# Description: 
tagFromWebDBParams=tagFromWebDB

# Description: 
tagParams=tag

# Description: 
targetParams=target

# Description: Label showing the target sdk version and the target android version
# 0=sdk, 1=name
targetSdkVersion=Target Android SDK\: {0} ({1})

# Description: 
temperatureParams=temperature

# Description: Caption for template dialog menu item.
templateUploadNewUrlCaption=Add a New Template Library Url

# Description: Caption for template upload wizard.
templateUploadWizardCaption=Create a Project from a Template

# Description: Label of the link for Terms
termsLink=Terms

# Description: None
textAnyComponentLabel=Any 

# Description: 
textBoxComponentPallette=TextBox

# Description: 
textParams=text

# Description: Default value for Text property
# 0=componentName
textPropertyValue=Text for {0}

# Description: Text messages are always received, and a notification is shown if the App is in the background.
textReceivingChoiceAlways=Always

# Description: Text Messages are received only when the App is in the foreground.
textReceivingChoiceForeground=Foreground

# Description: Text Messages are not received at any time.
textReceivingChoiceOff=Off

# Description: 
textToSpeechComponentPallette=TextToSpeech

# Description: 
textToTranslateParams=textToTranslate

# Description: 
textingComponentPallette=Texting

# Description: 
thermometerComponentPallette=Thermometer

# Description: 
thumbPositionParams=thumbPosition

# Description: 
timePickerComponentPallette=TimePicker

# Description: 
timelineParams=timeline

# Description: 
timestampParams=timestamp

# Description: 
tinyDBComponentPallette=TinyDB

# Description: 
tinyWebDBComponentPallette=TinyWebDB

# Description: 
titleParams=title

# Description: Title of the Previous Actions Popup of reportlist
titleSeeAllActionsPopup=Previous Actions on Report

# Description: Title for App Inventor
titleYoungAndroid=MIT App Inventor

# Description: 
toFileNameParams=toFileName

# Description: 
toScopeParams=toScope

# Description: Label for the Toggle Tutorial Button
toggleTutorialButton=Toggle Tutorial

# Description: 
topParams=top

# Description: 
touchedAnySpriteParams=touchedAnySprite

# Description: 
touchedSpriteParams=touchedSprite

# Description: 
translationParams=translation

# Description: 
transportMethodBicycleOption=Bicycle

# Description: 
transportMethodCarOption=Car

# Description: 
transportMethodFootOption=Foot

# Description: 
transportMethodOptionList=TransportMethod

# Description: 
transportMethodWheelchairOption=Wheelchair

# Description: Text on "Trash" button
trashButton=Trash

# Description: Name of Move To Trash menuitem
trashProjectMenuItem=Move To Trash

# Description: Caption for trash list box.
trashprojectlistbox=My Deleted Projects

# Description: Name of Troubleshooting link
troubleshootingMenuItem=Troubleshooting

# Description: 
turnRatioParams=turnRatio

# Description: Name of Tutorials link
tutorialsMenuItem=Tutorials

# Description: 
twitterComponentPallette=Twitter

# Description: Display Text for ListView layout choice having two lines of text.
twoTextLayout=MainText,DetailText(Vertical)

# Description: Display Text for ListView layout choice having two lines of text in linear manner.
twoTextLinearLayout=MainText, DetailText(Horizontal)

# Description: 
typeParams=type

# Description: 
ultrasonicSensorUnitCentimetersOption=Centimeters

# Description: 
ultrasonicSensorUnitInchesOption=Inches

# Description: 
ultrasonicSensorUnitOptionList=UltrasonicSensorUnit

# Description: Compilation error, with error message.
# 0=errorMesssage
unableToCompile=App Inventor is unable to compile this project.  <br /> The compiler error output was <br /> {0}.

# Description: Alert message displayed when upgrade fails
# 0=details
unexpectedProblem=A problem occurred while loading this project. {0}

# Description: 
uninitializedComponentPallette=Uninitialized

# Description: 
# 0=maptype
unknownMapTypeException=Unexpected map type\: {0}

# Description: Text for screen orientation choice 'Unspecified '
unspecifiedScreenOrientation=Unspecified

# Description: Text on "Update Gallery App" button
updateGalleryAppButton=Update Gallery App

# Description: Message providing details about a project upgrade involving a Logger component
# 0=name
upgradeDetailLoggerReplacedWithNotifier=The Logger component named {0} was changed to a Notifier component.\


# Description: Error message displayed when a server error occurs during upload keystore
uploadKeystoreError=Server error\: could not upload your keystore file.

# Description: Label of the button for import keystore
uploadKeystoreMenuItem=Import keystore

# Description: 
uriParams=uri

# Description: 
urlImportWizardCaption=Import Media from URL

# Description: 
urlParams=url

# Description: Message providing details about starting a USB connection.
usbMenuItem=USB

# Description: 
useBrakeParams=useBrake

# Description: 
useCenterParams=useCenter

# Description: Label showing the companion version
# 0=version, 1=alternateVersion
useCompanion=Use Companion\: {0} or {1}

# Description: Used by the MockFirebaseDB to display default checkbox
useDefault=Use Default

# Description: 
useFrontDeprecated=The useFront property has been removed from your Camera Component

# Description: Label for the user id input text box
userIdLabel=User id or email (case-sensitive)\:

# Description: 
userInterfaceComponentPallette=User Interface

# Description: 
userParams=user

# Description: Text for screen orientation choice 'User '
userScreenOrientation=User

# Description: 
uuidParams=uuid

# Description: 
valueFromWebDBParams=valueFromWebDB

# Description: 
valueIfTagNotThereParams=valueIfTagNotThere

# Description: 
# 0=text, 1=min, 2=max
valueNotInRange=The given value {0} was not in the expected range [{1}, {2}].

# Description: 
valueParams=value

# Description: 
valueToAddParams=valueToAdd

# Description: 
valueToStoreParams=valueToStore

# Description: 
valuesParams=values

# Description: 
verticalAlignmentBottomOption=Bottom

# Description: 
verticalAlignmentCenterOption=Center

# Description: Text for vertical alignment choice 'Bottom'
verticalAlignmentChoiceBottom=Bottom

# Description: Text for vertical alignment choice 'Center'
verticalAlignmentChoiceCenter=Center

# Description: Text for vertical alignment choice 'Top'
verticalAlignmentChoiceTop=Top

# Description: 
verticalAlignmentOptionList=VerticalAlignment

# Description: 
verticalAlignmentTopOption=Top

# Description: 
verticalArrangementComponentPallette=VerticalArrangement

# Description: Text for recycler view orientation 'vertical'
verticalOrientation=vertical

# Description: 
verticalScrollArrangementComponentPallette=VerticalScrollArrangement

# Description: Alert message displayed when upgrading a project without version numbers
veryOldProject=This project was saved with an early pre-release version of the App Inventor system. We will attempt to load the project, but there may be compatibility issues.

# Description: 
videoPlayerComponentPallette=VideoPlayer

# Description: List item in Subset Property Editor
viewAndModifyButton=View And Modify

# Description: Label of the link to a component's attribution license
viewLicense=View license

# Description: Name of View Trash tab
viewTrashTabName=View Trash

# Description: Caption for a viewer box.
viewerBoxCaption=Viewer

# Description: 
volumeParams=volume

# Description: 
votingComponentPallette=Voting

# Description: 
waitingForBarcode=Waiting for the barcode.

# Description: 
walkStepsParams=walkSteps

# Description: 
warningDialogTitle=Warning\!

# Description: Text for accelerometer sensitivity choice 'weak'
weakAccelerometerSensitivity=weak

# Description: 
webComponentPallette=Web

# Description: 
webViewerComponentPallette=WebViewer

# Description: 
weeksParams=weeks

# Description: Text for color choice 'White'
whiteColor=White

# Description: Error shown when user types space into project name.
whitespaceProjectNameError=Project names cannot contain spaces

# Description: 
widthParams=width

# Description: Caption for the width property
widthPropertyCaption=Width

# Description: 
wildcardParams=wildcard

# Description: Error message displayed when zero or more than one projects are selected
wrongNumberProjectSelectedForPublishOrUpdate=Please select only one project to publish or update

# Description: Error message displayed when no or many projects are selected
wrongNumberProjectsSelected=One project must be selected

# Description: 
x1Params=x1

# Description: 
x2Params=x2

# Description: 
xAccelParams=xAccel

# Description: 
xAngularVelocityParams=xAngularVelocity

# Description: 
xParams=x

# Description: 
xStrengthParams=xStrength

# Description: 
xmlTextDecodeMethods=XmlTextDecode

# Description: 
xmlTextParams=xmlText

# Description: 
xvelParams=xvel

# Description: 
y1Params=y1

# Description: 
y2Params=y2

# Description: 
yAccelParams=yAccel

# Description: 
yAngularVelocityParams=yAngularVelocity

# Description: 
yParams=y

# Description: 
yStrengthParams=yStrength

# Description: Error message reported when yail generation fails for a screen
# 0=formName, 1=description
yailGenerationError=Error generating Yail for screen {0}\: {1}. Please fix and try packaging again.

# Description: 
yandexTranslateComponentPallette=YandexTranslate

# Description: 
yearParams=year

# Description: 
yearsParams=years

# Description: Text for color choice 'Yellow'
yellowColor=Yellow

# Description: 
yvelParams=yvel

# Description: 
zAccelParams=zAccel

# Description: 
zAngularVelocityParams=zAngularVelocity

# Description: 
zStrengthParams=zStrength

# Description: 
zoomParams=zoom

# Description: Text for screen animation choice 'Zoom '
zoomScreenAnimation=Zoom
